### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  id: ICloudBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  children:
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopy(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAbortCopy(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAbortCopy(System.String,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginBreakLease(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginBreakLease(System.Nullable{System.TimeSpan},System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDelete(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDelete(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDeleteIfExists(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToByteArray(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToByteArray(System.Byte[],System.Int32,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToFile(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToFile(System.String,System.IO.FileMode,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToStream(System.IO.Stream,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginExists(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginFetchAttributes(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginOpenRead(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginOpenRead(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetMetadata(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetProperties(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetProperties(System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromFile(System.String,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BlobType
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLease(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan})
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.CopyState
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Delete(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExists(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64})
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArray(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFile(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndAbortCopy(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndAcquireLease(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndBreakLease(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndChangeLease(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDelete(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDeleteIfExists(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadRangeToByteArray(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadRangeToStream(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadToByteArray(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadToFile(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadToStream(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndExists(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndFetchAttributes(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndOpenRead(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndReleaseLease(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndRenewLease(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndSetMetadata(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndSetProperties(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndUploadFromByteArray(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndUploadFromFile(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndUploadFromStream(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Exists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.IsSnapshot
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Metadata
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Name
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenRead(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Properties
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ServiceClient
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetProperties(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync(System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotQualifiedStorageUri
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotQualifiedUri
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotTime
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamWriteSizeInBytes
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ICloudBlob
  nameWithType: ICloudBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  type: Interface
  source:
    remote:
      path: Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ICloudBlob
    path: Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 26
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nAn interface required for Microsoft Azure blob types. The <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob\" data-throw-if-not-resolved=\"false\"></xref> classes implement the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.ICloudBlob\" data-throw-if-not-resolved=\"false\"></xref> interface.\n"
  example: []
  syntax:
    content: 'public interface ICloudBlob : IListBlobItem'
    content.vb: >-
      Public Interface ICloudBlob
          Inherits IListBlobItem
  inheritedMembers:
  - Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.Uri
  - Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.StorageUri
  - Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.Parent
  - Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.Container
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenRead(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenRead(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: OpenRead(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: OpenRead(AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.OpenRead(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenRead(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: OpenRead
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 43
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nOpens a stream for reading from the blob.\n"
  remarks: "\n<p>Note that this method always makes a call to the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition%2cMicrosoft.WindowsAzure.Storage.Blob.BlobRequestOptions%2cMicrosoft.WindowsAzure.Storage.OperationContext)\" data-throw-if-not-resolved=\"false\"></xref> method under the covers.</p>\n<p>Set the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes\" data-throw-if-not-resolved=\"false\"></xref> property before calling this method to specify the minimum\nnumber of bytes to buffer when reading from the stream. The value must be at least 16 KB.</p>\n"
  example: []
  syntax:
    content: Stream OpenRead(AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Function OpenRead(accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As Stream
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.IO.Stream
      description: A stream to be used for reading from the blob.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenRead*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginOpenRead(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginOpenRead(System.AsyncCallback,System.Object)
  id: BeginOpenRead(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginOpenRead(AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginOpenRead(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginOpenRead(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginOpenRead
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 60
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to open a stream for reading from the blob.\n"
  remarks: "\n<p>On the <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndOpenRead(System.IAsyncResult)\" data-throw-if-not-resolved=\"false\"></xref> method, the <xref href=\"System.IO.Stream.EndRead(System.IAsyncResult)\" data-throw-if-not-resolved=\"false\"></xref> \nmethod must be called exactly once for every <xref href=\"System.IO.Stream.BeginRead(System.Byte%5b%5d%2cSystem.Int32%2cSystem.Int32%2cSystem.AsyncCallback%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> call. \nFailing to end the read process before beginning another read process can cause unexpected behavior.</p>\n<p>Note that this method always makes a call to the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition%2cMicrosoft.WindowsAzure.Storage.Blob.BlobRequestOptions%2cMicrosoft.WindowsAzure.Storage.OperationContext%2cSystem.AsyncCallback%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> method under the covers.</p>\n<p>Set the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes\" data-throw-if-not-resolved=\"false\"></xref> property before calling this method to specify the minimum\nnumber of bytes to buffer when reading from the stream. The value must be at least 16 KB.</p>\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginOpenRead(AsyncCallback callback, object state)
    content.vb: Function BeginOpenRead(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginOpenRead*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginOpenRead(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginOpenRead(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginOpenRead(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginOpenRead(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginOpenRead(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginOpenRead(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginOpenRead
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 79
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to open a stream for reading from the blob.\n"
  remarks: "\n<p>On the <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref> object returned by the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndOpenRead(System.IAsyncResult)\" data-throw-if-not-resolved=\"false\"></xref> method, the <xref href=\"System.IO.Stream.EndRead(System.IAsyncResult)\" data-throw-if-not-resolved=\"false\"></xref> \nmethod must be called exactly once for every <xref href=\"System.IO.Stream.BeginRead(System.Byte%5b%5d%2cSystem.Int32%2cSystem.Int32%2cSystem.AsyncCallback%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> call. \nFailing to end the read process before beginning another read process can cause unexpected behavior.</p>\n<p>Note that this method always makes a call to the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition%2cMicrosoft.WindowsAzure.Storage.Blob.BlobRequestOptions%2cMicrosoft.WindowsAzure.Storage.OperationContext%2cSystem.AsyncCallback%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> method under the covers.</p>\n<p>Set the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes\" data-throw-if-not-resolved=\"false\"></xref> property before calling this method to specify the minimum\nnumber of bytes to buffer when reading from the stream. The value must be at least 16 KB.</p>\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginOpenRead(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Function BeginOpenRead(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginOpenRead*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndOpenRead(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndOpenRead(System.IAsyncResult)
  id: EndOpenRead(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: EndOpenRead(IAsyncResult)
  nameWithType: ICloudBlob.EndOpenRead(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndOpenRead(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndOpenRead
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 91
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nEnds an asynchronous operation to open a stream for reading from the blob.\n"
  remarks: "\n<p>On the <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref> object returned by this method, the <xref href=\"System.IO.Stream.EndRead(System.IAsyncResult)\" data-throw-if-not-resolved=\"false\"></xref> \nmethod must be called exactly once for every <xref href=\"System.IO.Stream.BeginRead(System.Byte%5b%5d%2cSystem.Int32%2cSystem.Int32%2cSystem.AsyncCallback%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> call. \nFailing to end the read process before beginning another read process can cause unexpected behavior.</p>\n"
  example: []
  syntax:
    content: Stream EndOpenRead(IAsyncResult asyncResult)
    content.vb: Function EndOpenRead(asyncResult As IAsyncResult) As Stream
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
    return:
      type: System.IO.Stream
      description: A stream to be used for reading from the blob.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndOpenRead*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync
  id: OpenReadAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: OpenReadAsync()
  nameWithType: ICloudBlob.OpenReadAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync()
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: OpenReadAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 106
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to open a stream for reading from the blob.\n"
  remarks: "\n<p>On the <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref> object returned by this method, the <xref href=\"System.IO.Stream.EndRead(System.IAsyncResult)\" data-throw-if-not-resolved=\"false\"></xref> \nmethod must be called exactly once for every <xref href=\"System.IO.Stream.BeginRead(System.Byte%5b%5d%2cSystem.Int32%2cSystem.Int32%2cSystem.AsyncCallback%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> call. \nFailing to end the read process before beginning another read process can cause unexpected behavior.</p>\n<p>Note that this method always makes a call to the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition%2cMicrosoft.WindowsAzure.Storage.Blob.BlobRequestOptions%2cMicrosoft.WindowsAzure.Storage.OperationContext%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> method under the covers.</p>\n<p>Set the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes\" data-throw-if-not-resolved=\"false\"></xref> property before calling this method to specify the minimum\nnumber of bytes to buffer when reading from the stream. The value must be at least 16 KB.</p>\n"
  example: []
  syntax:
    content: Task<Stream> OpenReadAsync()
    content.vb: Function OpenReadAsync As Task(Of Stream)
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: A <xref href="System.Threading.Tasks.Task%601" data-throw-if-not-resolved="false"></xref> object of type <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync(System.Threading.CancellationToken)
  id: OpenReadAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: OpenReadAsync(CancellationToken)
  nameWithType: ICloudBlob.OpenReadAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: OpenReadAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 121
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to open a stream for reading from the blob.\n"
  remarks: "\n<p>On the <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref> object returned by this method, the <xref href=\"System.IO.Stream.EndRead(System.IAsyncResult)\" data-throw-if-not-resolved=\"false\"></xref> \nmethod must be called exactly once for every <xref href=\"System.IO.Stream.BeginRead(System.Byte%5b%5d%2cSystem.Int32%2cSystem.Int32%2cSystem.AsyncCallback%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> call. \nFailing to end the read process before beginning another read process can cause unexpected behavior.</p>\n<p>Note that this method always makes a call to the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition%2cMicrosoft.WindowsAzure.Storage.Blob.BlobRequestOptions%2cMicrosoft.WindowsAzure.Storage.OperationContext%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> method under the covers.</p>\n<p>Set the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes\" data-throw-if-not-resolved=\"false\"></xref> property before calling this method to specify the minimum\nnumber of bytes to buffer when reading from the stream. The value must be at least 16 KB.</p>\n"
  example: []
  syntax:
    content: Task<Stream> OpenReadAsync(CancellationToken cancellationToken)
    content.vb: Function OpenReadAsync(cancellationToken As CancellationToken) As Task(Of Stream)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: A <xref href="System.Threading.Tasks.Task%601" data-throw-if-not-resolved="false"></xref> object of type <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: OpenReadAsync(AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.OpenReadAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: OpenReadAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 138
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to open a stream for reading from the blob.\n"
  remarks: "\n<p>On the <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref> object returned by this method, the <xref href=\"System.IO.Stream.EndRead(System.IAsyncResult)\" data-throw-if-not-resolved=\"false\"></xref> \nmethod must be called exactly once for every <xref href=\"System.IO.Stream.BeginRead(System.Byte%5b%5d%2cSystem.Int32%2cSystem.Int32%2cSystem.AsyncCallback%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> call. \nFailing to end the read process before beginning another read process can cause unexpected behavior.</p>\n<p>Note that this method always makes a call to the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition%2cMicrosoft.WindowsAzure.Storage.Blob.BlobRequestOptions%2cMicrosoft.WindowsAzure.Storage.OperationContext%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> method under the covers.</p>\n<p>Set the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes\" data-throw-if-not-resolved=\"false\"></xref> property before calling this method to specify the minimum\nnumber of bytes to buffer when reading from the stream. The value must be at least 16 KB.</p>\n"
  example: []
  syntax:
    content: Task<Stream> OpenReadAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function OpenReadAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of Stream)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: A <xref href="System.Threading.Tasks.Task%601" data-throw-if-not-resolved="false"></xref> object of type <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: OpenReadAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: ICloudBlob.OpenReadAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: OpenReadAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 156
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to open a stream for reading from the blob.\n"
  remarks: "\n<p>On the <xref href=\"System.IO.Stream\" data-throw-if-not-resolved=\"false\"></xref> object returned by this method, the <xref href=\"System.IO.Stream.EndRead(System.IAsyncResult)\" data-throw-if-not-resolved=\"false\"></xref> \nmethod must be called exactly once for every <xref href=\"System.IO.Stream.BeginRead(System.Byte%5b%5d%2cSystem.Int32%2cSystem.Int32%2cSystem.AsyncCallback%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref> call. \nFailing to end the read process before beginning another read process can cause unexpected behavior.</p>\n<p>Note that this method always makes a call to the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition%2cMicrosoft.WindowsAzure.Storage.Blob.BlobRequestOptions%2cMicrosoft.WindowsAzure.Storage.OperationContext%2cSystem.Threading.CancellationToken)\" data-throw-if-not-resolved=\"false\"></xref> method under the covers.</p>\n<p>Set the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes\" data-throw-if-not-resolved=\"false\"></xref> property before calling this method to specify the minimum\nnumber of bytes to buffer when reading from the stream. The value must be at least 16 KB.</p>\n"
  example: []
  syntax:
    content: Task<Stream> OpenReadAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Function OpenReadAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Stream)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: A <xref href="System.Threading.Tasks.Task%601" data-throw-if-not-resolved="false"></xref> object of type <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UploadFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromStream(Stream, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.UploadFromStream(Stream, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStream(System.IO.Stream, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UploadFromStream
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 167
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nUploads a stream to the Microsoft Azure Blob Service. \n"
  example: []
  syntax:
    content: void UploadFromStream(Stream source, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Sub UploadFromStream(source As Stream, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: source
      type: System.IO.Stream
      description: The stream providing the blob content. Use a seek-able stream for optimal performance.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStream*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UploadFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromStream(Stream, Int64, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.UploadFromStream(Stream, Int64, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStream(System.IO.Stream, System.Int64, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UploadFromStream
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 177
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nUploads a stream to the Microsoft Azure Blob Service. \n"
  example: []
  syntax:
    content: void UploadFromStream(Stream source, long length, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Sub UploadFromStream(source As Stream, length As Long, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: length
      type: System.Int64
      description: The number of bytes to write from the source stream at its current position.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStream*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,System.AsyncCallback,System.Object)
  id: BeginUploadFromStream(System.IO.Stream,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginUploadFromStream(Stream, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginUploadFromStream(Stream, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginUploadFromStream
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 187
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to upload a stream to a blob.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginUploadFromStream(Stream source, AsyncCallback callback, object state)
    content.vb: Function BeginUploadFromStream(source As Stream, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromStream*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginUploadFromStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginUploadFromStream(Stream, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginUploadFromStream(Stream, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginUploadFromStream
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 199
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to upload a stream to a blob. \n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginUploadFromStream(Stream source, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Function BeginUploadFromStream(source As Stream, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromStream*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)
  id: BeginUploadFromStream(System.IO.Stream,System.Int64,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginUploadFromStream(Stream, Int64, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginUploadFromStream(Stream, Int64, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream, System.Int64, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginUploadFromStream
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 209
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to upload a stream to a block blob.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginUploadFromStream(Stream source, long length, AsyncCallback callback, object state)
    content.vb: Function BeginUploadFromStream(source As Stream, length As Long, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: length
      type: System.Int64
      description: The number of bytes to write from the source stream at its current position.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromStream*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginUploadFromStream(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginUploadFromStream(Stream, Int64, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginUploadFromStream(Stream, Int64, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromStream(System.IO.Stream, System.Int64, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginUploadFromStream
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 222
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to upload a stream to a blob. \n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginUploadFromStream(Stream source, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Function BeginUploadFromStream(source As Stream, length As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: length
      type: System.Int64
      description: The number of bytes to write from the source stream at its current position.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromStream*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndUploadFromStream(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndUploadFromStream(System.IAsyncResult)
  id: EndUploadFromStream(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: EndUploadFromStream(IAsyncResult)
  nameWithType: ICloudBlob.EndUploadFromStream(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndUploadFromStream(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndUploadFromStream
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 228
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nEnds an asynchronous operation to upload a stream to a blob. \n"
  example: []
  syntax:
    content: void EndUploadFromStream(IAsyncResult asyncResult)
    content.vb: Sub EndUploadFromStream(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndUploadFromStream*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream)
  id: UploadFromStreamAsync(System.IO.Stream)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromStreamAsync(Stream)
  nameWithType: ICloudBlob.UploadFromStreamAsync(Stream)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UploadFromStreamAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 236
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to upload a stream to a blob.\n"
  example: []
  syntax:
    content: Task UploadFromStreamAsync(Stream source)
    content.vb: Function UploadFromStreamAsync(source As Stream) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
  id: UploadFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromStreamAsync(Stream, CancellationToken)
  nameWithType: ICloudBlob.UploadFromStreamAsync(Stream, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UploadFromStreamAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 244
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to upload a stream to a blob.\n"
  example: []
  syntax:
    content: Task UploadFromStreamAsync(Stream source, CancellationToken cancellationToken)
    content.vb: Function UploadFromStreamAsync(source As Stream, cancellationToken As CancellationToken) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UploadFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromStreamAsync(Stream, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.UploadFromStreamAsync(Stream, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UploadFromStreamAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 254
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to upload a stream to a blob. \n"
  example: []
  syntax:
    content: Task UploadFromStreamAsync(Stream source, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function UploadFromStreamAsync(source As Stream, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: UploadFromStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromStreamAsync(Stream, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: ICloudBlob.UploadFromStreamAsync(Stream, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UploadFromStreamAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 265
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to upload a stream to a blob. \n"
  example: []
  syntax:
    content: Task UploadFromStreamAsync(Stream source, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Function UploadFromStreamAsync(source As Stream, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64)
  id: UploadFromStreamAsync(System.IO.Stream,System.Int64)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromStreamAsync(Stream, Int64)
  nameWithType: ICloudBlob.UploadFromStreamAsync(Stream, Int64)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream, System.Int64)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UploadFromStreamAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 273
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to upload a stream to a block blob.\n"
  example: []
  syntax:
    content: Task UploadFromStreamAsync(Stream source, long length)
    content.vb: Function UploadFromStreamAsync(source As Stream, length As Long) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: length
      type: System.Int64
      description: The number of bytes to write from the source stream at its current position.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)
  id: UploadFromStreamAsync(System.IO.Stream,System.Int64,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromStreamAsync(Stream, Int64, CancellationToken)
  nameWithType: ICloudBlob.UploadFromStreamAsync(Stream, Int64, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream, System.Int64, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UploadFromStreamAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 282
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to upload a stream to a block blob.\n"
  example: []
  syntax:
    content: Task UploadFromStreamAsync(Stream source, long length, CancellationToken cancellationToken)
    content.vb: Function UploadFromStreamAsync(source As Stream, length As Long, cancellationToken As CancellationToken) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: length
      type: System.Int64
      description: The number of bytes to write from the source stream at its current position.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromStreamAsync(Stream, Int64, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.UploadFromStreamAsync(Stream, Int64, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream, System.Int64, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UploadFromStreamAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 293
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to upload a stream to a blob. \n"
  example: []
  syntax:
    content: Task UploadFromStreamAsync(Stream source, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function UploadFromStreamAsync(source As Stream, length As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: length
      type: System.Int64
      description: The number of bytes to write from the source stream at its current position.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: UploadFromStreamAsync(System.IO.Stream,System.Int64,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromStreamAsync(Stream, Int64, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: ICloudBlob.UploadFromStreamAsync(Stream, Int64, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync(System.IO.Stream, System.Int64, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UploadFromStreamAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 305
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to upload a stream to a blob. \n"
  example: []
  syntax:
    content: Task UploadFromStreamAsync(Stream source, long length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Function UploadFromStreamAsync(source As Stream, length As Long, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: source
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object providing the blob content.
    - id: length
      type: System.Int64
      description: The number of bytes to write from the source stream at its current position.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed. If <code>null</code>, no condition is used.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UploadFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromFile(String, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.UploadFromFile(String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFile(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UploadFromFile
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 316
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nUploads a file to the Microsoft Azure Blob Service. \n"
  example: []
  syntax:
    content: void UploadFromFile(string path, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Sub UploadFromFile(path As String, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: path
      type: System.String
      description: A string containing the file path providing the blob content.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFile*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromFile(System.String,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromFile(System.String,System.AsyncCallback,System.Object)
  id: BeginUploadFromFile(System.String,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginUploadFromFile(String, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginUploadFromFile(String, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromFile(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginUploadFromFile
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 326
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to upload a file to a blob.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginUploadFromFile(string path, AsyncCallback callback, object state)
    content.vb: Function BeginUploadFromFile(path As String, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: path
      type: System.String
      description: A string containing the file path providing the blob content.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromFile*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginUploadFromFile(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginUploadFromFile(String, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginUploadFromFile(String, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromFile(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginUploadFromFile
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 338
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to upload a file to a blob. \n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginUploadFromFile(string path, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Function BeginUploadFromFile(path As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: path
      type: System.String
      description: A string containing the file path providing the blob content.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromFile*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndUploadFromFile(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndUploadFromFile(System.IAsyncResult)
  id: EndUploadFromFile(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: EndUploadFromFile(IAsyncResult)
  nameWithType: ICloudBlob.EndUploadFromFile(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndUploadFromFile(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndUploadFromFile
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 344
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nEnds an asynchronous operation to upload a file to a blob. \n"
  example: []
  syntax:
    content: void EndUploadFromFile(IAsyncResult asyncResult)
    content.vb: Sub EndUploadFromFile(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndUploadFromFile*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String)
  id: UploadFromFileAsync(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromFileAsync(String)
  nameWithType: ICloudBlob.UploadFromFileAsync(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UploadFromFileAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 352
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to upload a file to a blob. \n"
  example: []
  syntax:
    content: Task UploadFromFileAsync(string path)
    content.vb: Function UploadFromFileAsync(path As String) As Task
    parameters:
    - id: path
      type: System.String
      description: A string containing the file path providing the blob content.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String,System.Threading.CancellationToken)
  id: UploadFromFileAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromFileAsync(String, CancellationToken)
  nameWithType: ICloudBlob.UploadFromFileAsync(String, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UploadFromFileAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 360
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to upload a file to a blob. \n"
  example: []
  syntax:
    content: Task UploadFromFileAsync(string path, CancellationToken cancellationToken)
    content.vb: Function UploadFromFileAsync(path As String, cancellationToken As CancellationToken) As Task
    parameters:
    - id: path
      type: System.String
      description: A string containing the file path providing the blob content.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UploadFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromFileAsync(String, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.UploadFromFileAsync(String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UploadFromFileAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 370
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to upload a file to a blob. \n"
  example: []
  syntax:
    content: Task UploadFromFileAsync(string path, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function UploadFromFileAsync(path As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: path
      type: System.String
      description: A string containing the file path providing the blob content.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: UploadFromFileAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromFileAsync(String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: ICloudBlob.UploadFromFileAsync(String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UploadFromFileAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 381
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to upload a file to a blob. \n"
  example: []
  syntax:
    content: Task UploadFromFileAsync(string path, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Function UploadFromFileAsync(path As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: path
      type: System.String
      description: A string containing the file path providing the blob content.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromByteArray(Byte[], Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.UploadFromByteArray(Byte[], Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArray(System.Byte[], System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UploadFromByteArray
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 394
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nUploads the contents of a byte array to a blob.\n"
  example: []
  syntax:
    content: void UploadFromByteArray(byte[] buffer, int index, int count, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Sub UploadFromByteArray(buffer As Byte(), index As Integer, count As Integer, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes.
    - id: index
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin uploading bytes to the blob.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the blob.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArray*
  nameWithType.vb: ICloudBlob.UploadFromByteArray(Byte(), Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArray(System.Byte(), System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: UploadFromByteArray(Byte(), Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginUploadFromByteArray(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginUploadFromByteArray(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromByteArray(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginUploadFromByteArray
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 406
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to upload the contents of a byte array to a blob.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginUploadFromByteArray(byte[] buffer, int index, int count, AsyncCallback callback, object state)
    content.vb: Function BeginUploadFromByteArray(buffer As Byte(), index As Integer, count As Integer, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes.
    - id: index
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin uploading bytes to the blob.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the blob.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromByteArray*
  nameWithType.vb: ICloudBlob.BeginUploadFromByteArray(Byte(), Int32, Int32, AsyncCallback, Object)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromByteArray(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginUploadFromByteArray(Byte(), Int32, Int32, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginUploadFromByteArray(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginUploadFromByteArray(Byte[], Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginUploadFromByteArray(Byte[], Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromByteArray(System.Byte[], System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginUploadFromByteArray
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 420
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to upload the contents of a byte array to a blob.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginUploadFromByteArray(byte[] buffer, int index, int count, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Function BeginUploadFromByteArray(buffer As Byte(), index As Integer, count As Integer, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes.
    - id: index
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin uploading bytes to the blob.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the blob.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromByteArray*
  nameWithType.vb: ICloudBlob.BeginUploadFromByteArray(Byte(), Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromByteArray(System.Byte(), System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  name.vb: BeginUploadFromByteArray(Byte(), Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndUploadFromByteArray(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndUploadFromByteArray(System.IAsyncResult)
  id: EndUploadFromByteArray(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: EndUploadFromByteArray(IAsyncResult)
  nameWithType: ICloudBlob.EndUploadFromByteArray(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndUploadFromByteArray(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndUploadFromByteArray
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 426
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nEnds an asynchronous operation to upload the contents of a byte array to a blob.\n"
  example: []
  syntax:
    content: void EndUploadFromByteArray(IAsyncResult asyncResult)
    content.vb: Sub EndUploadFromByteArray(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndUploadFromByteArray*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)
  id: UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromByteArrayAsync(Byte[], Int32, Int32)
  nameWithType: ICloudBlob.UploadFromByteArrayAsync(Byte[], Int32, Int32)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UploadFromByteArrayAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 436
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to upload the contents of a byte array to a blob.\n"
  example: []
  syntax:
    content: Task UploadFromByteArrayAsync(byte[] buffer, int index, int count)
    content.vb: Function UploadFromByteArrayAsync(buffer As Byte(), index As Integer, count As Integer) As Task
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes.
    - id: index
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin uploading bytes to the blob.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the blob.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync*
  nameWithType.vb: ICloudBlob.UploadFromByteArrayAsync(Byte(), Int32, Int32)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte(), System.Int32, System.Int32)
  name.vb: UploadFromByteArrayAsync(Byte(), Int32, Int32)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromByteArrayAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType: ICloudBlob.UploadFromByteArrayAsync(Byte[], Int32, Int32, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UploadFromByteArrayAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 446
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to upload the contents of a byte array to a blob.\n"
  example: []
  syntax:
    content: Task UploadFromByteArrayAsync(byte[] buffer, int index, int count, CancellationToken cancellationToken)
    content.vb: Function UploadFromByteArrayAsync(buffer As Byte(), index As Integer, count As Integer, cancellationToken As CancellationToken) As Task
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes.
    - id: index
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin uploading bytes to the blob.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the blob.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync*
  nameWithType.vb: ICloudBlob.UploadFromByteArrayAsync(Byte(), Int32, Int32, CancellationToken)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  name.vb: UploadFromByteArrayAsync(Byte(), Int32, Int32, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromByteArrayAsync(Byte[], Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.UploadFromByteArrayAsync(Byte[], Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[], System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UploadFromByteArrayAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 458
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to upload the contents of a byte array to a blob.\n"
  example: []
  syntax:
    content: Task UploadFromByteArrayAsync(byte[] buffer, int index, int count, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function UploadFromByteArrayAsync(buffer As Byte(), index As Integer, count As Integer, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes.
    - id: index
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin uploading bytes to the blob.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the blob.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync*
  nameWithType.vb: ICloudBlob.UploadFromByteArrayAsync(Byte(), Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte(), System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: UploadFromByteArrayAsync(Byte(), Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: UploadFromByteArrayAsync(System.Byte[],System.Int32,System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: UploadFromByteArrayAsync(Byte[], Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: ICloudBlob.UploadFromByteArrayAsync(Byte[], Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte[], System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UploadFromByteArrayAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 471
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to upload the contents of a byte array to a blob.\n"
  example: []
  syntax:
    content: Task UploadFromByteArrayAsync(byte[] buffer, int index, int count, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Function UploadFromByteArrayAsync(buffer As Byte(), index As Integer, count As Integer, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes.
    - id: index
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin uploading bytes to the blob.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the blob.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync*
  nameWithType.vb: ICloudBlob.UploadFromByteArrayAsync(Byte(), Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync(System.Byte(), System.Int32, System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: UploadFromByteArrayAsync(Byte(), Int32, Int32, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DownloadToStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToStream(Stream, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.DownloadToStream(Stream, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStream(System.IO.Stream, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadToStream
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 482
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nDownloads the contents of a blob to a stream.\n"
  example: []
  syntax:
    content: void DownloadToStream(Stream target, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Sub DownloadToStream(target As Stream, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: target
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object representing the target stream.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStream*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToStream(System.IO.Stream,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToStream(System.IO.Stream,System.AsyncCallback,System.Object)
  id: BeginDownloadToStream(System.IO.Stream,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginDownloadToStream(Stream, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginDownloadToStream(Stream, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToStream(System.IO.Stream, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginDownloadToStream
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 492
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to download the contents of a blob to a stream.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginDownloadToStream(Stream target, AsyncCallback callback, object state)
    content.vb: Function BeginDownloadToStream(target As Stream, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: target
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object representing the target stream.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToStream*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginDownloadToStream(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginDownloadToStream(Stream, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginDownloadToStream(Stream, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToStream(System.IO.Stream, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginDownloadToStream
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 504
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to download the contents of a blob to a stream.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginDownloadToStream(Stream target, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Function BeginDownloadToStream(target As Stream, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: target
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object representing the target stream.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToStream*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadToStream(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadToStream(System.IAsyncResult)
  id: EndDownloadToStream(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: EndDownloadToStream(IAsyncResult)
  nameWithType: ICloudBlob.EndDownloadToStream(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadToStream(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndDownloadToStream
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 510
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nEnds an asynchronous operation to download the contents of a blob to a stream.\n"
  example: []
  syntax:
    content: void EndDownloadToStream(IAsyncResult asyncResult)
    content.vb: Sub EndDownloadToStream(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadToStream*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream)
  id: DownloadToStreamAsync(System.IO.Stream)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToStreamAsync(Stream)
  nameWithType: ICloudBlob.DownloadToStreamAsync(Stream)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadToStreamAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 518
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to download the contents of a blob to a stream.\n"
  example: []
  syntax:
    content: Task DownloadToStreamAsync(Stream target)
    content.vb: Function DownloadToStreamAsync(target As Stream) As Task
    parameters:
    - id: target
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object representing the target stream.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
  id: DownloadToStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToStreamAsync(Stream, CancellationToken)
  nameWithType: ICloudBlob.DownloadToStreamAsync(Stream, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadToStreamAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 526
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to download the contents of a blob to a stream.\n"
  example: []
  syntax:
    content: Task DownloadToStreamAsync(Stream target, CancellationToken cancellationToken)
    content.vb: Function DownloadToStreamAsync(target As Stream, cancellationToken As CancellationToken) As Task
    parameters:
    - id: target
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object representing the target stream.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToStreamAsync(Stream, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.DownloadToStreamAsync(Stream, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadToStreamAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 536
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to download the contents of a blob to a stream.\n"
  example: []
  syntax:
    content: Task DownloadToStreamAsync(Stream target, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function DownloadToStreamAsync(target As Stream, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: target
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object representing the target stream.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: DownloadToStreamAsync(System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToStreamAsync(Stream, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: ICloudBlob.DownloadToStreamAsync(Stream, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync(System.IO.Stream, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadToStreamAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 547
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to download the contents of a blob to a stream.\n"
  example: []
  syntax:
    content: Task DownloadToStreamAsync(Stream target, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Function DownloadToStreamAsync(target As Stream, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: target
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object representing the target stream.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFile(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFile(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DownloadToFile(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToFile(String, FileMode, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.DownloadToFile(String, FileMode, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFile(System.String, System.IO.FileMode, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadToFile
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 559
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nDownloads the contents of a blob to a file.\n"
  example: []
  syntax:
    content: void DownloadToFile(string path, FileMode mode, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Sub DownloadToFile(path As String, mode As FileMode, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: path
      type: System.String
      description: A string containing the path to the target file.
    - id: mode
      type: System.IO.FileMode
      description: A <xref href="System.IO.FileMode" data-throw-if-not-resolved="false"></xref> enumeration value that determines how to open or create the file.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFile*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToFile(System.String,System.IO.FileMode,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToFile(System.String,System.IO.FileMode,System.AsyncCallback,System.Object)
  id: BeginDownloadToFile(System.String,System.IO.FileMode,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginDownloadToFile(String, FileMode, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginDownloadToFile(String, FileMode, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToFile(System.String, System.IO.FileMode, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginDownloadToFile
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 570
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to download the contents of a blob to a file.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginDownloadToFile(string path, FileMode mode, AsyncCallback callback, object state)
    content.vb: Function BeginDownloadToFile(path As String, mode As FileMode, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: path
      type: System.String
      description: A string containing the path to the target file.
    - id: mode
      type: System.IO.FileMode
      description: A <xref href="System.IO.FileMode" data-throw-if-not-resolved="false"></xref> enumeration value that determines how to open or create the file.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToFile*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToFile(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToFile(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginDownloadToFile(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginDownloadToFile(String, FileMode, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginDownloadToFile(String, FileMode, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToFile(System.String, System.IO.FileMode, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginDownloadToFile
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 583
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to download the contents of a blob to a file.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginDownloadToFile(string path, FileMode mode, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Function BeginDownloadToFile(path As String, mode As FileMode, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: path
      type: System.String
      description: A string containing the path to the target file.
    - id: mode
      type: System.IO.FileMode
      description: A <xref href="System.IO.FileMode" data-throw-if-not-resolved="false"></xref> enumeration value that determines how to open or create the file.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToFile*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadToFile(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadToFile(System.IAsyncResult)
  id: EndDownloadToFile(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: EndDownloadToFile(IAsyncResult)
  nameWithType: ICloudBlob.EndDownloadToFile(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadToFile(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndDownloadToFile
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 589
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nEnds an asynchronous operation to download the contents of a blob to a file.\n"
  example: []
  syntax:
    content: void EndDownloadToFile(IAsyncResult asyncResult)
    content.vb: Sub EndDownloadToFile(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadToFile*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode)
  id: DownloadToFileAsync(System.String,System.IO.FileMode)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToFileAsync(String, FileMode)
  nameWithType: ICloudBlob.DownloadToFileAsync(String, FileMode)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync(System.String, System.IO.FileMode)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadToFileAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 598
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to download the contents of a blob to a file.\n"
  example: []
  syntax:
    content: Task DownloadToFileAsync(string path, FileMode mode)
    content.vb: Function DownloadToFileAsync(path As String, mode As FileMode) As Task
    parameters:
    - id: path
      type: System.String
      description: A string containing the path to the target file.
    - id: mode
      type: System.IO.FileMode
      description: A <xref href="System.IO.FileMode" data-throw-if-not-resolved="false"></xref> enumeration value that determines how to open or create the file.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,System.Threading.CancellationToken)
  id: DownloadToFileAsync(System.String,System.IO.FileMode,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToFileAsync(String, FileMode, CancellationToken)
  nameWithType: ICloudBlob.DownloadToFileAsync(String, FileMode, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync(System.String, System.IO.FileMode, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadToFileAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 607
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to download the contents of a blob to a file.\n"
  example: []
  syntax:
    content: Task DownloadToFileAsync(string path, FileMode mode, CancellationToken cancellationToken)
    content.vb: Function DownloadToFileAsync(path As String, mode As FileMode, cancellationToken As CancellationToken) As Task
    parameters:
    - id: path
      type: System.String
      description: A string containing the path to the target file.
    - id: mode
      type: System.IO.FileMode
      description: A <xref href="System.IO.FileMode" data-throw-if-not-resolved="false"></xref> enumeration value that determines how to open or create the file.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToFileAsync(String, FileMode, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.DownloadToFileAsync(String, FileMode, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync(System.String, System.IO.FileMode, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadToFileAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 618
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to download the contents of a blob to a file.\n"
  example: []
  syntax:
    content: Task DownloadToFileAsync(string path, FileMode mode, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function DownloadToFileAsync(path As String, mode As FileMode, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: path
      type: System.String
      description: A string containing the path to the target file.
    - id: mode
      type: System.IO.FileMode
      description: A <xref href="System.IO.FileMode" data-throw-if-not-resolved="false"></xref> enumeration value that determines how to open or create the file.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: DownloadToFileAsync(System.String,System.IO.FileMode,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToFileAsync(String, FileMode, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: ICloudBlob.DownloadToFileAsync(String, FileMode, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync(System.String, System.IO.FileMode, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadToFileAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 630
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to download the contents of a blob to a file.\n"
  example: []
  syntax:
    content: Task DownloadToFileAsync(string path, FileMode mode, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Function DownloadToFileAsync(path As String, mode As FileMode, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: path
      type: System.String
      description: A string containing the path to the target file.
    - id: mode
      type: System.IO.FileMode
      description: A <xref href="System.IO.FileMode" data-throw-if-not-resolved="false"></xref> enumeration value that determines how to open or create the file.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArray(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArray(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DownloadToByteArray(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToByteArray(Byte[], Int32, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.DownloadToByteArray(Byte[], Int32, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArray(System.Byte[], System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadToByteArray
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 643
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nDownloads the contents of a blob to a byte array.\n"
  example: []
  syntax:
    content: int DownloadToByteArray(byte[] target, int index, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Function DownloadToByteArray(target As Byte(), index As Integer, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As Integer
    parameters:
    - id: target
      type: System.Byte[]
      description: The target byte array.
    - id: index
      type: System.Int32
      description: The starting offset in the byte array.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Int32
      description: The total number of bytes read into the buffer.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArray*
  nameWithType.vb: ICloudBlob.DownloadToByteArray(Byte(), Int32, AccessCondition, BlobRequestOptions, OperationContext)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArray(System.Byte(), System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: DownloadToByteArray(Byte(), Int32, AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToByteArray(System.Byte[],System.Int32,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToByteArray(System.Byte[],System.Int32,System.AsyncCallback,System.Object)
  id: BeginDownloadToByteArray(System.Byte[],System.Int32,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginDownloadToByteArray(Byte[], Int32, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginDownloadToByteArray(Byte[], Int32, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToByteArray(System.Byte[], System.Int32, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginDownloadToByteArray
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 654
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to download the contents of a blob to a byte array.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginDownloadToByteArray(byte[] target, int index, AsyncCallback callback, object state)
    content.vb: Function BeginDownloadToByteArray(target As Byte(), index As Integer, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: target
      type: System.Byte[]
      description: The target byte array.
    - id: index
      type: System.Int32
      description: The starting offset in the byte array.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToByteArray*
  nameWithType.vb: ICloudBlob.BeginDownloadToByteArray(Byte(), Int32, AsyncCallback, Object)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToByteArray(System.Byte(), System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginDownloadToByteArray(Byte(), Int32, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToByteArray(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToByteArray(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginDownloadToByteArray(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginDownloadToByteArray(Byte[], Int32, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginDownloadToByteArray(Byte[], Int32, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToByteArray(System.Byte[], System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginDownloadToByteArray
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 667
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to download the contents of a blob to a byte array.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginDownloadToByteArray(byte[] target, int index, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Function BeginDownloadToByteArray(target As Byte(), index As Integer, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: target
      type: System.Byte[]
      description: The target byte array.
    - id: index
      type: System.Int32
      description: The starting offset in the byte array.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToByteArray*
  nameWithType.vb: ICloudBlob.BeginDownloadToByteArray(Byte(), Int32, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToByteArray(System.Byte(), System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  name.vb: BeginDownloadToByteArray(Byte(), Int32, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadToByteArray(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadToByteArray(System.IAsyncResult)
  id: EndDownloadToByteArray(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: EndDownloadToByteArray(IAsyncResult)
  nameWithType: ICloudBlob.EndDownloadToByteArray(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadToByteArray(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndDownloadToByteArray
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 674
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nEnds an asynchronous operation to download the contents of a blob to a byte array.\n"
  example: []
  syntax:
    content: int EndDownloadToByteArray(IAsyncResult asyncResult)
    content.vb: Function EndDownloadToByteArray(asyncResult As IAsyncResult) As Integer
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
    return:
      type: System.Int32
      description: The total number of bytes read into the buffer.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadToByteArray*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32)
  id: DownloadToByteArrayAsync(System.Byte[],System.Int32)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToByteArrayAsync(Byte[], Int32)
  nameWithType: ICloudBlob.DownloadToByteArrayAsync(Byte[], Int32)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[], System.Int32)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadToByteArrayAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 683
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to download the contents of a blob to a byte array.\n"
  example: []
  syntax:
    content: Task<int> DownloadToByteArrayAsync(byte[] target, int index)
    content.vb: Function DownloadToByteArrayAsync(target As Byte(), index As Integer) As Task(Of Integer)
    parameters:
    - id: target
      type: System.Byte[]
      description: The target byte array.
    - id: index
      type: System.Int32
      description: The starting offset in the byte array.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <code>int</code> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync*
  nameWithType.vb: ICloudBlob.DownloadToByteArrayAsync(Byte(), Int32)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte(), System.Int32)
  name.vb: DownloadToByteArrayAsync(Byte(), Int32)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,System.Threading.CancellationToken)
  id: DownloadToByteArrayAsync(System.Byte[],System.Int32,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToByteArrayAsync(Byte[], Int32, CancellationToken)
  nameWithType: ICloudBlob.DownloadToByteArrayAsync(Byte[], Int32, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[], System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadToByteArrayAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 692
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to download the contents of a blob to a byte array.\n"
  example: []
  syntax:
    content: Task<int> DownloadToByteArrayAsync(byte[] target, int index, CancellationToken cancellationToken)
    content.vb: Function DownloadToByteArrayAsync(target As Byte(), index As Integer, cancellationToken As CancellationToken) As Task(Of Integer)
    parameters:
    - id: target
      type: System.Byte[]
      description: The target byte array.
    - id: index
      type: System.Int32
      description: The starting offset in the byte array.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <code>int</code> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync*
  nameWithType.vb: ICloudBlob.DownloadToByteArrayAsync(Byte(), Int32, CancellationToken)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte(), System.Int32, System.Threading.CancellationToken)
  name.vb: DownloadToByteArrayAsync(Byte(), Int32, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToByteArrayAsync(Byte[], Int32, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.DownloadToByteArrayAsync(Byte[], Int32, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[], System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadToByteArrayAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 703
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to download the contents of a blob to a byte array.\n"
  example: []
  syntax:
    content: Task<int> DownloadToByteArrayAsync(byte[] target, int index, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function DownloadToByteArrayAsync(target As Byte(), index As Integer, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of Integer)
    parameters:
    - id: target
      type: System.Byte[]
      description: The target byte array.
    - id: index
      type: System.Int32
      description: The starting offset in the byte array.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <code>int</code> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync*
  nameWithType.vb: ICloudBlob.DownloadToByteArrayAsync(Byte(), Int32, AccessCondition, BlobRequestOptions, OperationContext)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte(), System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: DownloadToByteArrayAsync(Byte(), Int32, AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: DownloadToByteArrayAsync(System.Byte[],System.Int32,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadToByteArrayAsync(Byte[], Int32, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: ICloudBlob.DownloadToByteArrayAsync(Byte[], Int32, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte[], System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadToByteArrayAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 715
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to download the contents of a blob to a byte array.\n"
  example: []
  syntax:
    content: Task<int> DownloadToByteArrayAsync(byte[] target, int index, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Function DownloadToByteArrayAsync(target As Byte(), index As Integer, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Integer)
    parameters:
    - id: target
      type: System.Byte[]
      description: The target byte array.
    - id: index
      type: System.Int32
      description: The starting offset in the byte array.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <code>int</code> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync*
  nameWithType.vb: ICloudBlob.DownloadToByteArrayAsync(Byte(), Int32, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync(System.Byte(), System.Int32, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: DownloadToByteArrayAsync(Byte(), Int32, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadRangeToStream(Stream, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.DownloadRangeToStream(Stream, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStream(System.IO.Stream, System.Nullable<System.Int64>, System.Nullable<System.Int64>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadRangeToStream
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 728
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nDownloads a range of bytes from a blob to a stream.\n"
  example: []
  syntax:
    content: void DownloadRangeToStream(Stream target, long ? offset, long ? length, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Sub DownloadRangeToStream(target As Stream, offset As Long?, length As Long?, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: target
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object representing the target stream.
    - id: offset
      type: System.Nullable{System.Int64}
      description: The starting offset of the data range, in bytes.
    - id: length
      type: System.Nullable{System.Int64}
      description: The length of the data range, in bytes.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStream*
  nameWithType.vb: ICloudBlob.DownloadRangeToStream(Stream, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStream(System.IO.Stream, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: DownloadRangeToStream(Stream, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)
  id: BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginDownloadRangeToStream(Stream, Nullable<Int64>, Nullable<Int64>, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginDownloadRangeToStream(Stream, Nullable<Int64>, Nullable<Int64>, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToStream(System.IO.Stream, System.Nullable<System.Int64>, System.Nullable<System.Int64>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginDownloadRangeToStream
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 740
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to download a range of bytes from a blob to a stream.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginDownloadRangeToStream(Stream target, long ? offset, long ? length, AsyncCallback callback, object state)
    content.vb: Function BeginDownloadRangeToStream(target As Stream, offset As Long?, length As Long?, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: target
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object representing the target stream.
    - id: offset
      type: System.Nullable{System.Int64}
      description: The starting offset of the data range, in bytes.
    - id: length
      type: System.Nullable{System.Int64}
      description: The length of the data range, in bytes.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToStream*
  nameWithType.vb: ICloudBlob.BeginDownloadRangeToStream(Stream, Nullable(Of Int64), Nullable(Of Int64), AsyncCallback, Object)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToStream(System.IO.Stream, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), System.AsyncCallback, System.Object)
  name.vb: BeginDownloadRangeToStream(Stream, Nullable(Of Int64), Nullable(Of Int64), AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginDownloadRangeToStream(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginDownloadRangeToStream(Stream, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginDownloadRangeToStream(Stream, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToStream(System.IO.Stream, System.Nullable<System.Int64>, System.Nullable<System.Int64>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginDownloadRangeToStream
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 754
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to download a range of bytes from a blob to a stream.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginDownloadRangeToStream(Stream target, long ? offset, long ? length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Function BeginDownloadRangeToStream(target As Stream, offset As Long?, length As Long?, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: target
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object representing the target stream.
    - id: offset
      type: System.Nullable{System.Int64}
      description: The starting offset of the data range, in bytes.
    - id: length
      type: System.Nullable{System.Int64}
      description: The length of the data range, in bytes.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToStream*
  nameWithType.vb: ICloudBlob.BeginDownloadRangeToStream(Stream, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToStream(System.IO.Stream, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  name.vb: BeginDownloadRangeToStream(Stream, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadRangeToStream(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadRangeToStream(System.IAsyncResult)
  id: EndDownloadRangeToStream(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: EndDownloadRangeToStream(IAsyncResult)
  nameWithType: ICloudBlob.EndDownloadRangeToStream(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadRangeToStream(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndDownloadRangeToStream
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 760
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nEnds an asynchronous operation to download a range of bytes from a blob to a stream.\n"
  example: []
  syntax:
    content: void EndDownloadRangeToStream(IAsyncResult asyncResult)
    content.vb: Sub EndDownloadRangeToStream(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadRangeToStream*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64})
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64})
  id: DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64})
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadRangeToStreamAsync(Stream, Nullable<Int64>, Nullable<Int64>)
  nameWithType: ICloudBlob.DownloadRangeToStreamAsync(Stream, Nullable<Int64>, Nullable<Int64>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable<System.Int64>, System.Nullable<System.Int64>)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadRangeToStreamAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 770
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to download a range of bytes from a blob to a stream.\n"
  example: []
  syntax:
    content: Task DownloadRangeToStreamAsync(Stream target, long ? offset, long ? length)
    content.vb: Function DownloadRangeToStreamAsync(target As Stream, offset As Long?, length As Long?) As Task
    parameters:
    - id: target
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object representing the target stream.
    - id: offset
      type: System.Nullable{System.Int64}
      description: The starting offset of the data range, in bytes.
    - id: length
      type: System.Nullable{System.Int64}
      description: The length of the data range, in bytes.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync*
  nameWithType.vb: ICloudBlob.DownloadRangeToStreamAsync(Stream, Nullable(Of Int64), Nullable(Of Int64))
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64))
  name.vb: DownloadRangeToStreamAsync(Stream, Nullable(Of Int64), Nullable(Of Int64))
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)
  id: DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadRangeToStreamAsync(Stream, Nullable<Int64>, Nullable<Int64>, CancellationToken)
  nameWithType: ICloudBlob.DownloadRangeToStreamAsync(Stream, Nullable<Int64>, Nullable<Int64>, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable<System.Int64>, System.Nullable<System.Int64>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadRangeToStreamAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 780
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to download a range of bytes from a blob to a stream.\n"
  example: []
  syntax:
    content: Task DownloadRangeToStreamAsync(Stream target, long ? offset, long ? length, CancellationToken cancellationToken)
    content.vb: Function DownloadRangeToStreamAsync(target As Stream, offset As Long?, length As Long?, cancellationToken As CancellationToken) As Task
    parameters:
    - id: target
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object representing the target stream.
    - id: offset
      type: System.Nullable{System.Int64}
      description: The starting offset of the data range, in bytes.
    - id: length
      type: System.Nullable{System.Int64}
      description: The length of the data range, in bytes.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync*
  nameWithType.vb: ICloudBlob.DownloadRangeToStreamAsync(Stream, Nullable(Of Int64), Nullable(Of Int64), CancellationToken)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), System.Threading.CancellationToken)
  name.vb: DownloadRangeToStreamAsync(Stream, Nullable(Of Int64), Nullable(Of Int64), CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadRangeToStreamAsync(Stream, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.DownloadRangeToStreamAsync(Stream, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable<System.Int64>, System.Nullable<System.Int64>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadRangeToStreamAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 792
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to download a range of bytes from a blob to a stream.\n"
  example: []
  syntax:
    content: Task DownloadRangeToStreamAsync(Stream target, long ? offset, long ? length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function DownloadRangeToStreamAsync(target As Stream, offset As Long?, length As Long?, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: target
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object representing the target stream.
    - id: offset
      type: System.Nullable{System.Int64}
      description: The starting offset of the data range, in bytes.
    - id: length
      type: System.Nullable{System.Int64}
      description: The length of the data range, in bytes.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync*
  nameWithType.vb: ICloudBlob.DownloadRangeToStreamAsync(Stream, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: DownloadRangeToStreamAsync(Stream, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: DownloadRangeToStreamAsync(System.IO.Stream,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadRangeToStreamAsync(Stream, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: ICloudBlob.DownloadRangeToStreamAsync(Stream, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable<System.Int64>, System.Nullable<System.Int64>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadRangeToStreamAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 805
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to download a range of bytes from a blob to a stream.\n"
  example: []
  syntax:
    content: Task DownloadRangeToStreamAsync(Stream target, long ? offset, long ? length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Function DownloadRangeToStreamAsync(target As Stream, offset As Long?, length As Long?, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: target
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> object representing the target stream.
    - id: offset
      type: System.Nullable{System.Int64}
      description: The starting offset of the data range, in bytes.
    - id: length
      type: System.Nullable{System.Int64}
      description: The length of the data range, in bytes.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync*
  nameWithType.vb: ICloudBlob.DownloadRangeToStreamAsync(Stream, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync(System.IO.Stream, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: DownloadRangeToStreamAsync(Stream, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadRangeToByteArray(Byte[], Int32, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.DownloadRangeToByteArray(Byte[], Int32, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArray(System.Byte[], System.Int32, System.Nullable<System.Int64>, System.Nullable<System.Int64>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadRangeToByteArray
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 820
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nDownloads a range of bytes from a blob to a byte array.\n"
  example: []
  syntax:
    content: int DownloadRangeToByteArray(byte[] target, int index, long ? blobOffset, long ? length, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Function DownloadRangeToByteArray(target As Byte(), index As Integer, blobOffset As Long?, length As Long?, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As Integer
    parameters:
    - id: target
      type: System.Byte[]
      description: The target byte array.
    - id: index
      type: System.Int32
      description: The starting offset in the byte array.
    - id: blobOffset
      type: System.Nullable{System.Int64}
      description: The starting offset of the data range, in bytes.
    - id: length
      type: System.Nullable{System.Int64}
      description: The length of the data range, in bytes.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Int32
      description: The total number of bytes read into the buffer.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArray*
  nameWithType.vb: ICloudBlob.DownloadRangeToByteArray(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArray(System.Byte(), System.Int32, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: DownloadRangeToByteArray(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)
  id: BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginDownloadRangeToByteArray(Byte[], Int32, Nullable<Int64>, Nullable<Int64>, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginDownloadRangeToByteArray(Byte[], Int32, Nullable<Int64>, Nullable<Int64>, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToByteArray(System.Byte[], System.Int32, System.Nullable<System.Int64>, System.Nullable<System.Int64>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginDownloadRangeToByteArray
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 833
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to download a range of bytes from a blob to a byte array.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginDownloadRangeToByteArray(byte[] target, int index, long ? blobOffset, long ? length, AsyncCallback callback, object state)
    content.vb: Function BeginDownloadRangeToByteArray(target As Byte(), index As Integer, blobOffset As Long?, length As Long?, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: target
      type: System.Byte[]
      description: The target byte array.
    - id: index
      type: System.Int32
      description: The starting offset in the byte array.
    - id: blobOffset
      type: System.Nullable{System.Int64}
      description: The starting offset of the data range, in bytes.
    - id: length
      type: System.Nullable{System.Int64}
      description: The length of the data range, in bytes.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToByteArray*
  nameWithType.vb: ICloudBlob.BeginDownloadRangeToByteArray(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64), AsyncCallback, Object)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToByteArray(System.Byte(), System.Int32, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), System.AsyncCallback, System.Object)
  name.vb: BeginDownloadRangeToByteArray(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64), AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginDownloadRangeToByteArray(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginDownloadRangeToByteArray(Byte[], Int32, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginDownloadRangeToByteArray(Byte[], Int32, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToByteArray(System.Byte[], System.Int32, System.Nullable<System.Int64>, System.Nullable<System.Int64>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginDownloadRangeToByteArray
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 848
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to download a range of bytes from a blob to a byte array.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginDownloadRangeToByteArray(byte[] target, int index, long ? blobOffset, long ? length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Function BeginDownloadRangeToByteArray(target As Byte(), index As Integer, blobOffset As Long?, length As Long?, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: target
      type: System.Byte[]
      description: The target byte array.
    - id: index
      type: System.Int32
      description: The starting offset in the byte array.
    - id: blobOffset
      type: System.Nullable{System.Int64}
      description: The starting offset of the data range, in bytes.
    - id: length
      type: System.Nullable{System.Int64}
      description: The length of the data range, in bytes.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToByteArray*
  nameWithType.vb: ICloudBlob.BeginDownloadRangeToByteArray(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToByteArray(System.Byte(), System.Int32, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  name.vb: BeginDownloadRangeToByteArray(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadRangeToByteArray(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadRangeToByteArray(System.IAsyncResult)
  id: EndDownloadRangeToByteArray(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: EndDownloadRangeToByteArray(IAsyncResult)
  nameWithType: ICloudBlob.EndDownloadRangeToByteArray(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadRangeToByteArray(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndDownloadRangeToByteArray
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 855
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nEnds an asynchronous operation to download a range of bytes from a blob to a byte array.\n"
  example: []
  syntax:
    content: int EndDownloadRangeToByteArray(IAsyncResult asyncResult)
    content.vb: Function EndDownloadRangeToByteArray(asyncResult As IAsyncResult) As Integer
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
    return:
      type: System.Int32
      description: The total number of bytes read into the buffer.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadRangeToByteArray*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})
  id: DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64})
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadRangeToByteArrayAsync(Byte[], Int32, Nullable<Int64>, Nullable<Int64>)
  nameWithType: ICloudBlob.DownloadRangeToByteArrayAsync(Byte[], Int32, Nullable<Int64>, Nullable<Int64>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[], System.Int32, System.Nullable<System.Int64>, System.Nullable<System.Int64>)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadRangeToByteArrayAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 866
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to download a range of bytes from a blob to a byte array.\n"
  example: []
  syntax:
    content: Task<int> DownloadRangeToByteArrayAsync(byte[] target, int index, long ? blobOffset, long ? length)
    content.vb: Function DownloadRangeToByteArrayAsync(target As Byte(), index As Integer, blobOffset As Long?, length As Long?) As Task(Of Integer)
    parameters:
    - id: target
      type: System.Byte[]
      description: The target byte array.
    - id: index
      type: System.Int32
      description: The starting offset in the byte array.
    - id: blobOffset
      type: System.Nullable{System.Int64}
      description: The starting offset of the data range, in bytes.
    - id: length
      type: System.Nullable{System.Int64}
      description: The length of the data range, in bytes.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <code>int</code> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync*
  nameWithType.vb: ICloudBlob.DownloadRangeToByteArrayAsync(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64))
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte(), System.Int32, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64))
  name.vb: DownloadRangeToByteArrayAsync(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64))
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)
  id: DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadRangeToByteArrayAsync(Byte[], Int32, Nullable<Int64>, Nullable<Int64>, CancellationToken)
  nameWithType: ICloudBlob.DownloadRangeToByteArrayAsync(Byte[], Int32, Nullable<Int64>, Nullable<Int64>, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[], System.Int32, System.Nullable<System.Int64>, System.Nullable<System.Int64>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadRangeToByteArrayAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 877
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to download a range of bytes from a blob to a byte array.\n"
  example: []
  syntax:
    content: Task<int> DownloadRangeToByteArrayAsync(byte[] target, int index, long ? blobOffset, long ? length, CancellationToken cancellationToken)
    content.vb: Function DownloadRangeToByteArrayAsync(target As Byte(), index As Integer, blobOffset As Long?, length As Long?, cancellationToken As CancellationToken) As Task(Of Integer)
    parameters:
    - id: target
      type: System.Byte[]
      description: The target byte array.
    - id: index
      type: System.Int32
      description: The starting offset in the byte array.
    - id: blobOffset
      type: System.Nullable{System.Int64}
      description: The starting offset of the data range, in bytes.
    - id: length
      type: System.Nullable{System.Int64}
      description: The length of the data range, in bytes.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <code>int</code> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync*
  nameWithType.vb: ICloudBlob.DownloadRangeToByteArrayAsync(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64), CancellationToken)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte(), System.Int32, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), System.Threading.CancellationToken)
  name.vb: DownloadRangeToByteArrayAsync(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64), CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadRangeToByteArrayAsync(Byte[], Int32, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.DownloadRangeToByteArrayAsync(Byte[], Int32, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[], System.Int32, System.Nullable<System.Int64>, System.Nullable<System.Int64>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadRangeToByteArrayAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 890
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to download a range of bytes from a blob to a byte array.\n"
  example: []
  syntax:
    content: Task<int> DownloadRangeToByteArrayAsync(byte[] target, int index, long ? blobOffset, long ? length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function DownloadRangeToByteArrayAsync(target As Byte(), index As Integer, blobOffset As Long?, length As Long?, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of Integer)
    parameters:
    - id: target
      type: System.Byte[]
      description: The target byte array.
    - id: index
      type: System.Int32
      description: The starting offset in the byte array.
    - id: blobOffset
      type: System.Nullable{System.Int64}
      description: The starting offset of the data range, in bytes.
    - id: length
      type: System.Nullable{System.Int64}
      description: The length of the data range, in bytes.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <code>int</code> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync*
  nameWithType.vb: ICloudBlob.DownloadRangeToByteArrayAsync(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte(), System.Int32, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: DownloadRangeToByteArrayAsync(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: DownloadRangeToByteArrayAsync(System.Byte[],System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DownloadRangeToByteArrayAsync(Byte[], Int32, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: ICloudBlob.DownloadRangeToByteArrayAsync(Byte[], Int32, Nullable<Int64>, Nullable<Int64>, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte[], System.Int32, System.Nullable<System.Int64>, System.Nullable<System.Int64>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DownloadRangeToByteArrayAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 904
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to download a range of bytes from a blob to a byte array.\n"
  example: []
  syntax:
    content: Task<int> DownloadRangeToByteArrayAsync(byte[] target, int index, long ? blobOffset, long ? length, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Function DownloadRangeToByteArrayAsync(target As Byte(), index As Integer, blobOffset As Long?, length As Long?, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Integer)
    parameters:
    - id: target
      type: System.Byte[]
      description: The target byte array.
    - id: index
      type: System.Int32
      description: The starting offset in the byte array.
    - id: blobOffset
      type: System.Nullable{System.Int64}
      description: The starting offset of the data range, in bytes.
    - id: length
      type: System.Nullable{System.Int64}
      description: The length of the data range, in bytes.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <code>int</code> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync*
  nameWithType.vb: ICloudBlob.DownloadRangeToByteArrayAsync(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync(System.Byte(), System.Int32, System.Nullable(Of System.Int64), System.Nullable(Of System.Int64), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: DownloadRangeToByteArrayAsync(Byte(), Int32, Nullable(Of Int64), Nullable(Of Int64), AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Exists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Exists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: Exists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: Exists(BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.Exists(BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Exists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Exists
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 914
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nChecks existence of the blob.\n"
  example: []
  syntax:
    content: bool Exists(BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Function Exists(options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As Boolean
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the blob exists.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Exists*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginExists(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginExists(System.AsyncCallback,System.Object)
  id: BeginExists(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginExists(AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginExists(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginExists(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginExists
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 923
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous request to check existence of the blob.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginExists(AsyncCallback callback, object state)
    content.vb: Function BeginExists(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginExists*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginExists(BlobRequestOptions, OperationContext, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginExists(BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginExists(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginExists
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 933
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous request to check existence of the blob.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginExists(BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Function BeginExists(options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginExists*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndExists(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndExists(System.IAsyncResult)
  id: EndExists(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: EndExists(IAsyncResult)
  nameWithType: ICloudBlob.EndExists(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndExists(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndExists
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 940
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nReturns the asynchronous result of the request to check existence of the blob.\n"
  example: []
  syntax:
    content: bool EndExists(IAsyncResult asyncResult)
    content.vb: Function EndExists(asyncResult As IAsyncResult) As Boolean
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the blob exists.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndExists*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync
  id: ExistsAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: ExistsAsync()
  nameWithType: ICloudBlob.ExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync()
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExistsAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 947
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to check existence of the blob.\n"
  example: []
  syntax:
    content: Task<bool> ExistsAsync()
    content.vb: Function ExistsAsync As Task(Of Boolean)
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <code>bool</code> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync(System.Threading.CancellationToken)
  id: ExistsAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: ExistsAsync(CancellationToken)
  nameWithType: ICloudBlob.ExistsAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExistsAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 954
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to check existence of the blob.\n"
  example: []
  syntax:
    content: Task<bool> ExistsAsync(CancellationToken cancellationToken)
    content.vb: Function ExistsAsync(cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <code>bool</code> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: ExistsAsync(BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.ExistsAsync(BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExistsAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 962
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to check existence of the blob.\n"
  example: []
  syntax:
    content: Task<bool> ExistsAsync(BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function ExistsAsync(options As BlobRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <code>bool</code> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: ExistsAsync(BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: ICloudBlob.ExistsAsync(BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync(Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExistsAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 971
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to check existence of the blob.\n"
  example: []
  syntax:
    content: Task<bool> ExistsAsync(BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Function ExistsAsync(options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <code>bool</code> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: FetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: FetchAttributes(AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.FetchAttributes(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: FetchAttributes
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 981
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nPopulates a blob's properties and metadata.\n"
  example: []
  syntax:
    content: void FetchAttributes(AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Sub FetchAttributes(accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributes*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginFetchAttributes(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginFetchAttributes(System.AsyncCallback,System.Object)
  id: BeginFetchAttributes(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginFetchAttributes(AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginFetchAttributes(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginFetchAttributes(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginFetchAttributes
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 990
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to populate the blob's properties and metadata.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginFetchAttributes(AsyncCallback callback, object state)
    content.vb: Function BeginFetchAttributes(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginFetchAttributes*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginFetchAttributes(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginFetchAttributes(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginFetchAttributes
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1001
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to populate the blob's properties and metadata.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginFetchAttributes(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Function BeginFetchAttributes(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginFetchAttributes*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndFetchAttributes(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndFetchAttributes(System.IAsyncResult)
  id: EndFetchAttributes(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: EndFetchAttributes(IAsyncResult)
  nameWithType: ICloudBlob.EndFetchAttributes(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndFetchAttributes(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndFetchAttributes
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1007
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nEnds an asynchronous operation to populate the blob's properties and metadata.\n"
  example: []
  syntax:
    content: void EndFetchAttributes(IAsyncResult asyncResult)
    content.vb: Sub EndFetchAttributes(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndFetchAttributes*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync
  id: FetchAttributesAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync()
  nameWithType: ICloudBlob.FetchAttributesAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync()
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: FetchAttributesAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1014
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to populate the blob's properties and metadata.\n"
  example: []
  syntax:
    content: Task FetchAttributesAsync()
    content.vb: Function FetchAttributesAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync(System.Threading.CancellationToken)
  id: FetchAttributesAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync(CancellationToken)
  nameWithType: ICloudBlob.FetchAttributesAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: FetchAttributesAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1021
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to populate the blob's properties and metadata.\n"
  example: []
  syntax:
    content: Task FetchAttributesAsync(CancellationToken cancellationToken)
    content.vb: Function FetchAttributesAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync(AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.FetchAttributesAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: FetchAttributesAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1030
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to populate the blob's properties and metadata.\n"
  example: []
  syntax:
    content: Task FetchAttributesAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function FetchAttributesAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: FetchAttributesAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: ICloudBlob.FetchAttributesAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: FetchAttributesAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1040
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to populate the blob's properties and metadata.\n"
  example: []
  syntax:
    content: Task FetchAttributesAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Function FetchAttributesAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: SetMetadata(AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.SetMetadata(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetMetadata
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1050
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nUpdates the blob's metadata.\n"
  example: []
  syntax:
    content: void SetMetadata(AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Sub SetMetadata(accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadata*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetMetadata(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetMetadata(System.AsyncCallback,System.Object)
  id: BeginSetMetadata(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginSetMetadata(AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginSetMetadata(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetMetadata(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginSetMetadata
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1059
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to update the blob's metadata.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginSetMetadata(AsyncCallback callback, object state)
    content.vb: Function BeginSetMetadata(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetMetadata*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginSetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginSetMetadata(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginSetMetadata(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetMetadata(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginSetMetadata
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1070
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to update the blob's metadata.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginSetMetadata(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Function BeginSetMetadata(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetMetadata*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndSetMetadata(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndSetMetadata(System.IAsyncResult)
  id: EndSetMetadata(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: EndSetMetadata(IAsyncResult)
  nameWithType: ICloudBlob.EndSetMetadata(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndSetMetadata(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndSetMetadata
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1076
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nEnds an asynchronous operation to update the blob's metadata.\n"
  example: []
  syntax:
    content: void EndSetMetadata(IAsyncResult asyncResult)
    content.vb: Sub EndSetMetadata(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndSetMetadata*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync
  id: SetMetadataAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: SetMetadataAsync()
  nameWithType: ICloudBlob.SetMetadataAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync()
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetMetadataAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1083
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to update the blob's metadata.\n"
  example: []
  syntax:
    content: Task SetMetadataAsync()
    content.vb: Function SetMetadataAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync(System.Threading.CancellationToken)
  id: SetMetadataAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: SetMetadataAsync(CancellationToken)
  nameWithType: ICloudBlob.SetMetadataAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetMetadataAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1090
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to update the blob's metadata.\n"
  example: []
  syntax:
    content: Task SetMetadataAsync(CancellationToken cancellationToken)
    content.vb: Function SetMetadataAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: SetMetadataAsync(AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.SetMetadataAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetMetadataAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1099
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to update the blob's metadata.\n"
  example: []
  syntax:
    content: Task SetMetadataAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function SetMetadataAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: SetMetadataAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: ICloudBlob.SetMetadataAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetMetadataAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1109
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to update the blob's metadata.\n"
  example: []
  syntax:
    content: Task SetMetadataAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Function SetMetadataAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetProperties(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetProperties(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetProperties(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: SetProperties(AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.SetProperties(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetProperties(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetProperties
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1119
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nUpdates the blob's properties.\n"
  example: []
  syntax:
    content: void SetProperties(AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Sub SetProperties(accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetProperties*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetProperties(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetProperties(System.AsyncCallback,System.Object)
  id: BeginSetProperties(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginSetProperties(AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginSetProperties(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetProperties(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginSetProperties
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1128
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to update the blob's properties.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginSetProperties(AsyncCallback callback, object state)
    content.vb: Function BeginSetProperties(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetProperties*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetProperties(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetProperties(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginSetProperties(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginSetProperties(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginSetProperties(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetProperties(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginSetProperties
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1139
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to update the blob's properties.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginSetProperties(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Function BeginSetProperties(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetProperties*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndSetProperties(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndSetProperties(System.IAsyncResult)
  id: EndSetProperties(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: EndSetProperties(IAsyncResult)
  nameWithType: ICloudBlob.EndSetProperties(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndSetProperties(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndSetProperties
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1145
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nEnds an asynchronous operation to update the blob's properties.\n"
  example: []
  syntax:
    content: void EndSetProperties(IAsyncResult asyncResult)
    content.vb: Sub EndSetProperties(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndSetProperties*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync
  id: SetPropertiesAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: SetPropertiesAsync()
  nameWithType: ICloudBlob.SetPropertiesAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync()
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetPropertiesAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1152
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to update the blob's properties.\n"
  example: []
  syntax:
    content: Task SetPropertiesAsync()
    content.vb: Function SetPropertiesAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync(System.Threading.CancellationToken)
  id: SetPropertiesAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: SetPropertiesAsync(CancellationToken)
  nameWithType: ICloudBlob.SetPropertiesAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetPropertiesAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1159
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to update the blob's properties.\n"
  example: []
  syntax:
    content: Task SetPropertiesAsync(CancellationToken cancellationToken)
    content.vb: Function SetPropertiesAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: SetPropertiesAsync(AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.SetPropertiesAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetPropertiesAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1168
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to update the blob's properties.\n"
  example: []
  syntax:
    content: Task SetPropertiesAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function SetPropertiesAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: SetPropertiesAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: ICloudBlob.SetPropertiesAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetPropertiesAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1178
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to update the blob's properties.\n"
  example: []
  syntax:
    content: Task SetPropertiesAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Function SetPropertiesAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Delete(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Delete(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: Delete(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: Delete(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.Delete(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Delete(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Delete
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1189
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nDeletes the blob.\n"
  example: []
  syntax:
    content: void Delete(DeleteSnapshotsOption deleteSnapshotsOption = DeleteSnapshotsOption.None, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Sub Delete(deleteSnapshotsOption As DeleteSnapshotsOption = DeleteSnapshotsOption.None, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: deleteSnapshotsOption
      type: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
      description: Whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Delete*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDelete(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDelete(System.AsyncCallback,System.Object)
  id: BeginDelete(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginDelete(AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginDelete(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDelete(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginDelete
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1198
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to delete the blob.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginDelete(AsyncCallback callback, object state)
    content.vb: Function BeginDelete(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDelete*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDelete(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDelete(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginDelete(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginDelete(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginDelete(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDelete(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginDelete
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1210
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to delete the blob.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginDelete(DeleteSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Function BeginDelete(deleteSnapshotsOption As DeleteSnapshotsOption, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: deleteSnapshotsOption
      type: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
      description: Whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDelete*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDelete(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDelete(System.IAsyncResult)
  id: EndDelete(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: EndDelete(IAsyncResult)
  nameWithType: ICloudBlob.EndDelete(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDelete(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndDelete
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1216
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nEnds an asynchronous operation to delete the blob.\n"
  example: []
  syntax:
    content: void EndDelete(IAsyncResult asyncResult)
    content.vb: Sub EndDelete(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDelete*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync
  id: DeleteAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DeleteAsync()
  nameWithType: ICloudBlob.DeleteAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync()
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1223
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to delete the blob.\n"
  example: []
  syntax:
    content: Task DeleteAsync()
    content.vb: Function DeleteAsync As Task
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync(System.Threading.CancellationToken)
  id: DeleteAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DeleteAsync(CancellationToken)
  nameWithType: ICloudBlob.DeleteAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1230
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to delete the blob.\n"
  example: []
  syntax:
    content: Task DeleteAsync(CancellationToken cancellationToken)
    content.vb: Function DeleteAsync(cancellationToken As CancellationToken) As Task
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DeleteAsync(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.DeleteAsync(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1240
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to delete the blob.\n"
  example: []
  syntax:
    content: Task DeleteAsync(DeleteSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function DeleteAsync(deleteSnapshotsOption As DeleteSnapshotsOption, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: deleteSnapshotsOption
      type: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
      description: Whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DeleteAsync(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: ICloudBlob.DeleteAsync(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1251
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to delete the blob.\n"
  example: []
  syntax:
    content: Task DeleteAsync(DeleteSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Function DeleteAsync(deleteSnapshotsOption As DeleteSnapshotsOption, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: deleteSnapshotsOption
      type: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
      description: Whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExists(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExists(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteIfExists(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DeleteIfExists(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.DeleteIfExists(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExists(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteIfExists
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1263
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nDeletes the blob if it already exists.\n"
  example: []
  syntax:
    content: bool DeleteIfExists(DeleteSnapshotsOption deleteSnapshotsOption = DeleteSnapshotsOption.None, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Function DeleteIfExists(deleteSnapshotsOption As DeleteSnapshotsOption = DeleteSnapshotsOption.None, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As Boolean
    parameters:
    - id: deleteSnapshotsOption
      type: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
      description: Whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the blob did not already exist and was created; otherwise <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExists*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDeleteIfExists(System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDeleteIfExists(System.AsyncCallback,System.Object)
  id: BeginDeleteIfExists(System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginDeleteIfExists(AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginDeleteIfExists(AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDeleteIfExists(System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginDeleteIfExists
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1272
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous request to delete the blob if it already exists.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginDeleteIfExists(AsyncCallback callback, object state)
    content.vb: Function BeginDeleteIfExists(callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDeleteIfExists*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginDeleteIfExists(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginDeleteIfExists(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDeleteIfExists(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginDeleteIfExists
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1284
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous request to delete the blob if it already exists.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginDeleteIfExists(DeleteSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Function BeginDeleteIfExists(deleteSnapshotsOption As DeleteSnapshotsOption, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: deleteSnapshotsOption
      type: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
      description: Whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDeleteIfExists*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDeleteIfExists(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDeleteIfExists(System.IAsyncResult)
  id: EndDeleteIfExists(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: EndDeleteIfExists(IAsyncResult)
  nameWithType: ICloudBlob.EndDeleteIfExists(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDeleteIfExists(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndDeleteIfExists
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1291
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nReturns the result of an asynchronous request to delete the blob if it already exists.\n"
  example: []
  syntax:
    content: bool EndDeleteIfExists(IAsyncResult asyncResult)
    content.vb: Function EndDeleteIfExists(asyncResult As IAsyncResult) As Boolean
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the blob did not already exist and was created; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDeleteIfExists*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync
  id: DeleteIfExistsAsync
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync()
  nameWithType: ICloudBlob.DeleteIfExistsAsync()
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync()
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteIfExistsAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1298
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to delete the blob if it already exists.\n"
  example: []
  syntax:
    content: Task<bool> DeleteIfExistsAsync()
    content.vb: Function DeleteIfExistsAsync As Task(Of Boolean)
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <code>bool</code> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync(System.Threading.CancellationToken)
  id: DeleteIfExistsAsync(System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync(CancellationToken)
  nameWithType: ICloudBlob.DeleteIfExistsAsync(CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteIfExistsAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1305
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to delete the blob if it already exists.\n"
  example: []
  syntax:
    content: Task<bool> DeleteIfExistsAsync(CancellationToken cancellationToken)
    content.vb: Function DeleteIfExistsAsync(cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <code>bool</code> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.DeleteIfExistsAsync(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteIfExistsAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1315
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to delete the blob if it already exists.\n"
  example: []
  syntax:
    content: Task<bool> DeleteIfExistsAsync(DeleteSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function DeleteIfExistsAsync(deleteSnapshotsOption As DeleteSnapshotsOption, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of Boolean)
    parameters:
    - id: deleteSnapshotsOption
      type: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
      description: Whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <code>bool</code> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: DeleteIfExistsAsync(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: ICloudBlob.DeleteIfExistsAsync(DeleteSnapshotsOption, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync(Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DeleteIfExistsAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1326
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to delete the blob if it already exists.\n"
  example: []
  syntax:
    content: Task<bool> DeleteIfExistsAsync(DeleteSnapshotsOption deleteSnapshotsOption, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Function DeleteIfExistsAsync(deleteSnapshotsOption As DeleteSnapshotsOption, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of Boolean)
    parameters:
    - id: deleteSnapshotsOption
      type: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
      description: Whether to only delete the blob, to delete the blob and all snapshots, or to only delete the snapshots.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <code>bool</code> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: AcquireLease(Nullable<TimeSpan>, String, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.AcquireLease(Nullable<TimeSpan>, String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLease(System.Nullable<System.TimeSpan>, System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AcquireLease
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1340
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nAcquires a lease on this blob.\n"
  example: []
  syntax:
    content: string AcquireLease(TimeSpan? leaseTime, string proposedLeaseId, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Function AcquireLease(leaseTime As TimeSpan?, proposedLeaseId As String, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As String
    parameters:
    - id: leaseTime
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the span of time for which to acquire the lease,

        which will be rounded down to seconds.
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.String
      description: The ID of the acquired lease.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLease*
  nameWithType.vb: ICloudBlob.AcquireLease(Nullable(Of TimeSpan), String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLease(System.Nullable(Of System.TimeSpan), System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: AcquireLease(Nullable(Of TimeSpan), String, AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,System.AsyncCallback,System.Object)
  id: BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginAcquireLease(Nullable<TimeSpan>, String, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginAcquireLease(Nullable<TimeSpan>, String, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAcquireLease(System.Nullable<System.TimeSpan>, System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginAcquireLease
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1352
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to acquire a lease on this blob.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginAcquireLease(TimeSpan? leaseTime, string proposedLeaseId, AsyncCallback callback, object state)
    content.vb: Function BeginAcquireLease(leaseTime As TimeSpan?, proposedLeaseId As String, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: leaseTime
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the span of time for which to acquire the lease,

        which will be rounded down to seconds.
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease.
    - id: callback
      type: System.AsyncCallback
      description: An optional callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAcquireLease*
  nameWithType.vb: ICloudBlob.BeginAcquireLease(Nullable(Of TimeSpan), String, AsyncCallback, Object)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAcquireLease(System.Nullable(Of System.TimeSpan), System.String, System.AsyncCallback, System.Object)
  name.vb: BeginAcquireLease(Nullable(Of TimeSpan), String, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginAcquireLease(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginAcquireLease(Nullable<TimeSpan>, String, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginAcquireLease(Nullable<TimeSpan>, String, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAcquireLease(System.Nullable<System.TimeSpan>, System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginAcquireLease
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1366
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to acquire a lease on this blob.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginAcquireLease(TimeSpan? leaseTime, string proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Function BeginAcquireLease(leaseTime As TimeSpan?, proposedLeaseId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: leaseTime
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the span of time for which to acquire the lease,

        which will be rounded down to seconds.
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An optional callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAcquireLease*
  nameWithType.vb: ICloudBlob.BeginAcquireLease(Nullable(Of TimeSpan), String, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAcquireLease(System.Nullable(Of System.TimeSpan), System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  name.vb: BeginAcquireLease(Nullable(Of TimeSpan), String, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndAcquireLease(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndAcquireLease(System.IAsyncResult)
  id: EndAcquireLease(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: EndAcquireLease(IAsyncResult)
  nameWithType: ICloudBlob.EndAcquireLease(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndAcquireLease(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndAcquireLease
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1373
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nEnds an asynchronous operation to acquire a lease on this blob.\n"
  example: []
  syntax:
    content: string EndAcquireLease(IAsyncResult asyncResult)
    content.vb: Function EndAcquireLease(asyncResult As IAsyncResult) As String
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An IAsyncResult that references the pending asynchronous operation.
    return:
      type: System.String
      description: The ID of the acquired lease.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndAcquireLease*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)
  id: AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: AcquireLeaseAsync(Nullable<TimeSpan>, String)
  nameWithType: ICloudBlob.AcquireLeaseAsync(Nullable<TimeSpan>, String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable<System.TimeSpan>, System.String)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AcquireLeaseAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1383
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to acquire a lease on this blob.\n"
  example: []
  syntax:
    content: Task<string> AcquireLeaseAsync(TimeSpan? leaseTime, string proposedLeaseId = null)
    content.vb: Function AcquireLeaseAsync(leaseTime As TimeSpan?, proposedLeaseId As String = Nothing) As Task(Of String)
    parameters:
    - id: leaseTime
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the span of time for which to acquire the lease,

        which will be rounded down to seconds.
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <code>string</code> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync*
  nameWithType.vb: ICloudBlob.AcquireLeaseAsync(Nullable(Of TimeSpan), String)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable(Of System.TimeSpan), System.String)
  name.vb: AcquireLeaseAsync(Nullable(Of TimeSpan), String)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,System.Threading.CancellationToken)
  id: AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: AcquireLeaseAsync(Nullable<TimeSpan>, String, CancellationToken)
  nameWithType: ICloudBlob.AcquireLeaseAsync(Nullable<TimeSpan>, String, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable<System.TimeSpan>, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AcquireLeaseAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1393
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to acquire a lease on this blob.\n"
  example: []
  syntax:
    content: Task<string> AcquireLeaseAsync(TimeSpan? leaseTime, string proposedLeaseId, CancellationToken cancellationToken)
    content.vb: Function AcquireLeaseAsync(leaseTime As TimeSpan?, proposedLeaseId As String, cancellationToken As CancellationToken) As Task(Of String)
    parameters:
    - id: leaseTime
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the span of time for which to acquire the lease,

        which will be rounded down to seconds.
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <code>string</code> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync*
  nameWithType.vb: ICloudBlob.AcquireLeaseAsync(Nullable(Of TimeSpan), String, CancellationToken)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable(Of System.TimeSpan), System.String, System.Threading.CancellationToken)
  name.vb: AcquireLeaseAsync(Nullable(Of TimeSpan), String, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: AcquireLeaseAsync(Nullable<TimeSpan>, String, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.AcquireLeaseAsync(Nullable<TimeSpan>, String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable<System.TimeSpan>, System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AcquireLeaseAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1405
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to acquire a lease on this blob.\n"
  example: []
  syntax:
    content: Task<string> AcquireLeaseAsync(TimeSpan? leaseTime, string proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function AcquireLeaseAsync(leaseTime As TimeSpan?, proposedLeaseId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of String)
    parameters:
    - id: leaseTime
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the span of time for which to acquire the lease,

        which will be rounded down to seconds.
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <code>string</code> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync*
  nameWithType.vb: ICloudBlob.AcquireLeaseAsync(Nullable(Of TimeSpan), String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable(Of System.TimeSpan), System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: AcquireLeaseAsync(Nullable(Of TimeSpan), String, AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: AcquireLeaseAsync(System.Nullable{System.TimeSpan},System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: AcquireLeaseAsync(Nullable<TimeSpan>, String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: ICloudBlob.AcquireLeaseAsync(Nullable<TimeSpan>, String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable<System.TimeSpan>, System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AcquireLeaseAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1418
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to acquire a lease on this blob.\n"
  example: []
  syntax:
    content: Task<string> AcquireLeaseAsync(TimeSpan? leaseTime, string proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Function AcquireLeaseAsync(leaseTime As TimeSpan?, proposedLeaseId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of String)
    parameters:
    - id: leaseTime
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the span of time for which to acquire the lease,

        which will be rounded down to seconds.
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <code>string</code> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync*
  nameWithType.vb: ICloudBlob.AcquireLeaseAsync(Nullable(Of TimeSpan), String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync(System.Nullable(Of System.TimeSpan), System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: AcquireLeaseAsync(Nullable(Of TimeSpan), String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: RenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: RenewLease(AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.RenewLease(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLease(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RenewLease
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1428
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nRenews a lease on this blob.\n"
  example: []
  syntax:
    content: void RenewLease(AccessCondition accessCondition, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Sub RenewLease(accessCondition As AccessCondition, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLease*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  id: BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginRenewLease(AccessCondition, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginRenewLease(AccessCondition, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginRenewLease
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1438
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to renew a lease on this blob.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginRenewLease(AccessCondition accessCondition, AsyncCallback callback, object state)
    content.vb: Function BeginRenewLease(accessCondition As AccessCondition, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: callback
      type: System.AsyncCallback
      description: An optional callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginRenewLease*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginRenewLease(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginRenewLease(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginRenewLease(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginRenewLease
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1449
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to renew a lease on this blob.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginRenewLease(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Function BeginRenewLease(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An optional callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginRenewLease*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndRenewLease(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndRenewLease(System.IAsyncResult)
  id: EndRenewLease(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: EndRenewLease(IAsyncResult)
  nameWithType: ICloudBlob.EndRenewLease(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndRenewLease(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndRenewLease
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1455
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nEnds an asynchronous operation to renew a lease on this blob.\n"
  example: []
  syntax:
    content: void EndRenewLease(IAsyncResult asyncResult)
    content.vb: Sub EndRenewLease(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndRenewLease*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  id: RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: RenewLeaseAsync(AccessCondition)
  nameWithType: ICloudBlob.RenewLeaseAsync(AccessCondition)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RenewLeaseAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1463
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to renew a lease on this blob.\n"
  example: []
  syntax:
    content: Task RenewLeaseAsync(AccessCondition accessCondition)
    content.vb: Function RenewLeaseAsync(accessCondition As AccessCondition) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  id: RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: RenewLeaseAsync(AccessCondition, CancellationToken)
  nameWithType: ICloudBlob.RenewLeaseAsync(AccessCondition, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RenewLeaseAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1471
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to renew a lease on this blob.\n"
  example: []
  syntax:
    content: Task RenewLeaseAsync(AccessCondition accessCondition, CancellationToken cancellationToken)
    content.vb: Function RenewLeaseAsync(accessCondition As AccessCondition, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: RenewLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.RenewLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RenewLeaseAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1480
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to renew a lease on this blob.\n"
  example: []
  syntax:
    content: Task RenewLeaseAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function RenewLeaseAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: RenewLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: ICloudBlob.RenewLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RenewLeaseAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1490
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to renew a lease on this blob.\n"
  example: []
  syntax:
    content: Task RenewLeaseAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Function RenewLeaseAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: ChangeLease(String, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.ChangeLease(String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLease(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ChangeLease
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1502
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nChanges the lease ID on this blob.\n"
  example: []
  syntax:
    content: string ChangeLease(string proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Function ChangeLease(proposedLeaseId As String, accessCondition As AccessCondition, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As String
    parameters:
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.String
      description: The new lease ID.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLease*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  id: BeginChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginChangeLease(String, AccessCondition, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginChangeLease(String, AccessCondition, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginChangeLease(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginChangeLease
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1513
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to change the lease on this blob.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginChangeLease(string proposedLeaseId, AccessCondition accessCondition, AsyncCallback callback, object state)
    content.vb: Function BeginChangeLease(proposedLeaseId As String, accessCondition As AccessCondition, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: callback
      type: System.AsyncCallback
      description: An optional callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginChangeLease*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginChangeLease(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginChangeLease(String, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginChangeLease(String, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginChangeLease(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginChangeLease
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1525
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to change the lease on this blob.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginChangeLease(string proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Function BeginChangeLease(proposedLeaseId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An optional callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginChangeLease*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndChangeLease(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndChangeLease(System.IAsyncResult)
  id: EndChangeLease(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: EndChangeLease(IAsyncResult)
  nameWithType: ICloudBlob.EndChangeLease(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndChangeLease(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndChangeLease
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1532
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nEnds an asynchronous operation to change the lease on this blob.\n"
  example: []
  syntax:
    content: string EndChangeLease(IAsyncResult asyncResult)
    content.vb: Function EndChangeLease(asyncResult As IAsyncResult) As String
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
    return:
      type: System.String
      description: The new lease ID.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndChangeLease*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition)
  id: ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: ChangeLeaseAsync(String, AccessCondition)
  nameWithType: ICloudBlob.ChangeLeaseAsync(String, AccessCondition)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ChangeLeaseAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1541
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to change the lease on this blob.\n"
  example: []
  syntax:
    content: Task<string> ChangeLeaseAsync(string proposedLeaseId, AccessCondition accessCondition)
    content.vb: Function ChangeLeaseAsync(proposedLeaseId As String, accessCondition As AccessCondition) As Task(Of String)
    parameters:
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <code>string</code> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  id: ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: ChangeLeaseAsync(String, AccessCondition, CancellationToken)
  nameWithType: ICloudBlob.ChangeLeaseAsync(String, AccessCondition, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ChangeLeaseAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1550
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to change the lease on this blob.\n"
  example: []
  syntax:
    content: Task<string> ChangeLeaseAsync(string proposedLeaseId, AccessCondition accessCondition, CancellationToken cancellationToken)
    content.vb: Function ChangeLeaseAsync(proposedLeaseId As String, accessCondition As AccessCondition, cancellationToken As CancellationToken) As Task(Of String)
    parameters:
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <code>string</code> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: ChangeLeaseAsync(String, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.ChangeLeaseAsync(String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ChangeLeaseAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1560
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to change the lease on this blob.\n"
  example: []
  syntax:
    content: Task<string> ChangeLeaseAsync(string proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function ChangeLeaseAsync(proposedLeaseId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of String)
    parameters:
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <code>string</code> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: ChangeLeaseAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: ChangeLeaseAsync(String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: ICloudBlob.ChangeLeaseAsync(String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ChangeLeaseAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1571
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to change the lease on this blob.\n"
  example: []
  syntax:
    content: Task<string> ChangeLeaseAsync(string proposedLeaseId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Function ChangeLeaseAsync(proposedLeaseId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of String)
    parameters:
    - id: proposedLeaseId
      type: System.String
      description: A string representing the proposed lease ID for the new lease.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <code>string</code> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: ReleaseLease(AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.ReleaseLease(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ReleaseLease
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1581
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nReleases the lease on this blob.\n"
  example: []
  syntax:
    content: void ReleaseLease(AccessCondition accessCondition, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Sub ReleaseLease(accessCondition As AccessCondition, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLease*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  id: BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginReleaseLease(AccessCondition, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginReleaseLease(AccessCondition, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginReleaseLease
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1591
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to release the lease on this blob.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginReleaseLease(AccessCondition accessCondition, AsyncCallback callback, object state)
    content.vb: Function BeginReleaseLease(accessCondition As AccessCondition, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: callback
      type: System.AsyncCallback
      description: An optional callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginReleaseLease*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginReleaseLease(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginReleaseLease(AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginReleaseLease(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginReleaseLease
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1602
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to release the lease on this blob.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginReleaseLease(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Function BeginReleaseLease(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An optional callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginReleaseLease*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndReleaseLease(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndReleaseLease(System.IAsyncResult)
  id: EndReleaseLease(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: EndReleaseLease(IAsyncResult)
  nameWithType: ICloudBlob.EndReleaseLease(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndReleaseLease(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndReleaseLease
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1608
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nEnds an asynchronous operation to release the lease on this blob.\n"
  example: []
  syntax:
    content: void EndReleaseLease(IAsyncResult asyncResult)
    content.vb: Sub EndReleaseLease(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An IAsyncResult that references the pending asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndReleaseLease*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  id: ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: ReleaseLeaseAsync(AccessCondition)
  nameWithType: ICloudBlob.ReleaseLeaseAsync(AccessCondition)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ReleaseLeaseAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1616
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to release the lease on this blob.\n"
  example: []
  syntax:
    content: Task ReleaseLeaseAsync(AccessCondition accessCondition)
    content.vb: Function ReleaseLeaseAsync(accessCondition As AccessCondition) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  id: ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: ReleaseLeaseAsync(AccessCondition, CancellationToken)
  nameWithType: ICloudBlob.ReleaseLeaseAsync(AccessCondition, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ReleaseLeaseAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1624
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to release the lease on this blob.\n"
  example: []
  syntax:
    content: Task ReleaseLeaseAsync(AccessCondition accessCondition, CancellationToken cancellationToken)
    content.vb: Function ReleaseLeaseAsync(accessCondition As AccessCondition, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: ReleaseLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.ReleaseLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ReleaseLeaseAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1633
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to release the lease on this blob.\n"
  example: []
  syntax:
    content: Task ReleaseLeaseAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function ReleaseLeaseAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: ReleaseLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: ICloudBlob.ReleaseLeaseAsync(AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync(Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ReleaseLeaseAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1643
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to release the lease on this blob.\n"
  example: []
  syntax:
    content: Task ReleaseLeaseAsync(AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Function ReleaseLeaseAsync(accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed, including a required lease ID.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLease(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLease(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: BreakLease(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BreakLease(Nullable<TimeSpan>, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.BreakLease(Nullable<TimeSpan>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLease(System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BreakLease
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1656
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBreaks the current lease on this blob.\n"
  example: []
  syntax:
    content: TimeSpan BreakLease(TimeSpan? breakPeriod = null, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Function BreakLease(breakPeriod As TimeSpan? = Nothing, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing) As TimeSpan
    parameters:
    - id: breakPeriod
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time to allow the lease to remain,

        which will be rounded down to seconds.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time before the lease ends, to the second.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLease*
  nameWithType.vb: ICloudBlob.BreakLease(Nullable(Of TimeSpan), AccessCondition, BlobRequestOptions, OperationContext)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLease(System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: BreakLease(Nullable(Of TimeSpan), AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginBreakLease(System.Nullable{System.TimeSpan},System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginBreakLease(System.Nullable{System.TimeSpan},System.AsyncCallback,System.Object)
  id: BeginBreakLease(System.Nullable{System.TimeSpan},System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginBreakLease(Nullable<TimeSpan>, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginBreakLease(Nullable<TimeSpan>, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginBreakLease(System.Nullable<System.TimeSpan>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginBreakLease
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1667
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to break the current lease on this blob.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginBreakLease(TimeSpan? breakPeriod, AsyncCallback callback, object state)
    content.vb: Function BeginBreakLease(breakPeriod As TimeSpan?, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: breakPeriod
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time to allow the lease to remain,

        which will be rounded down to seconds.
    - id: callback
      type: System.AsyncCallback
      description: An optional callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginBreakLease*
  nameWithType.vb: ICloudBlob.BeginBreakLease(Nullable(Of TimeSpan), AsyncCallback, Object)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginBreakLease(System.Nullable(Of System.TimeSpan), System.AsyncCallback, System.Object)
  name.vb: BeginBreakLease(Nullable(Of TimeSpan), AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginBreakLease(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginBreakLease(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginBreakLease(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginBreakLease(Nullable<TimeSpan>, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginBreakLease(Nullable<TimeSpan>, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginBreakLease(System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginBreakLease
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1680
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to break the current lease on this blob.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginBreakLease(TimeSpan? breakPeriod, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Function BeginBreakLease(breakPeriod As TimeSpan?, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: breakPeriod
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time to allow the lease to remain,

        which will be rounded down to seconds.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An optional callback delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginBreakLease*
  nameWithType.vb: ICloudBlob.BeginBreakLease(Nullable(Of TimeSpan), AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginBreakLease(System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  name.vb: BeginBreakLease(Nullable(Of TimeSpan), AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndBreakLease(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndBreakLease(System.IAsyncResult)
  id: EndBreakLease(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: EndBreakLease(IAsyncResult)
  nameWithType: ICloudBlob.EndBreakLease(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndBreakLease(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndBreakLease
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1687
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nEnds an asynchronous operation to break the current lease on this blob.\n"
  example: []
  syntax:
    content: TimeSpan EndBreakLease(IAsyncResult asyncResult)
    content.vb: Function EndBreakLease(asyncResult As IAsyncResult) As TimeSpan
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An IAsyncResult that references the pending asynchronous operation.
    return:
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time before the lease ends, to the second.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndBreakLease*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan})
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan})
  id: BreakLeaseAsync(System.Nullable{System.TimeSpan})
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BreakLeaseAsync(Nullable<TimeSpan>)
  nameWithType: ICloudBlob.BreakLeaseAsync(Nullable<TimeSpan>)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable<System.TimeSpan>)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BreakLeaseAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1696
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to break the current lease on this blob.\n"
  example: []
  syntax:
    content: Task<TimeSpan> BreakLeaseAsync(TimeSpan? breakPeriod)
    content.vb: Function BreakLeaseAsync(breakPeriod As TimeSpan?) As Task(Of TimeSpan)
    parameters:
    - id: breakPeriod
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time to allow the lease to remain,

        which will be rounded down to seconds.
    return:
      type: System.Threading.Tasks.Task{System.TimeSpan}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync*
  nameWithType.vb: ICloudBlob.BreakLeaseAsync(Nullable(Of TimeSpan))
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable(Of System.TimeSpan))
  name.vb: BreakLeaseAsync(Nullable(Of TimeSpan))
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  id: BreakLeaseAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BreakLeaseAsync(Nullable<TimeSpan>, CancellationToken)
  nameWithType: ICloudBlob.BreakLeaseAsync(Nullable<TimeSpan>, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable<System.TimeSpan>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BreakLeaseAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1705
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to break the current lease on this blob.\n"
  example: []
  syntax:
    content: Task<TimeSpan> BreakLeaseAsync(TimeSpan? breakPeriod, CancellationToken cancellationToken)
    content.vb: Function BreakLeaseAsync(breakPeriod As TimeSpan?, cancellationToken As CancellationToken) As Task(Of TimeSpan)
    parameters:
    - id: breakPeriod
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time to allow the lease to remain,

        which will be rounded down to seconds.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.TimeSpan}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync*
  nameWithType.vb: ICloudBlob.BreakLeaseAsync(Nullable(Of TimeSpan), CancellationToken)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable(Of System.TimeSpan), System.Threading.CancellationToken)
  name.vb: BreakLeaseAsync(Nullable(Of TimeSpan), CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BreakLeaseAsync(Nullable<TimeSpan>, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.BreakLeaseAsync(Nullable<TimeSpan>, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BreakLeaseAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1716
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to break the current lease on this blob.\n"
  example: []
  syntax:
    content: Task<TimeSpan> BreakLeaseAsync(TimeSpan? breakPeriod, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function BreakLeaseAsync(breakPeriod As TimeSpan?, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task(Of TimeSpan)
    parameters:
    - id: breakPeriod
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time to allow the lease to remain,

        which will be rounded down to seconds.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{System.TimeSpan}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync*
  nameWithType.vb: ICloudBlob.BreakLeaseAsync(Nullable(Of TimeSpan), AccessCondition, BlobRequestOptions, OperationContext)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: BreakLeaseAsync(Nullable(Of TimeSpan), AccessCondition, BlobRequestOptions, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: BreakLeaseAsync(System.Nullable{System.TimeSpan},Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BreakLeaseAsync(Nullable<TimeSpan>, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: ICloudBlob.BreakLeaseAsync(Nullable<TimeSpan>, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable<System.TimeSpan>, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BreakLeaseAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1728
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to break the current lease on this blob.\n"
  example: []
  syntax:
    content: Task<TimeSpan> BreakLeaseAsync(TimeSpan? breakPeriod, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Function BreakLeaseAsync(breakPeriod As TimeSpan?, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of TimeSpan)
    parameters:
    - id: breakPeriod
      type: System.Nullable{System.TimeSpan}
      description: >-
        A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the amount of time to allow the lease to remain,

        which will be rounded down to seconds.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{System.TimeSpan}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object of type <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync*
  nameWithType.vb: ICloudBlob.BreakLeaseAsync(Nullable(Of TimeSpan), AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync(System.Nullable(Of System.TimeSpan), Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  name.vb: BreakLeaseAsync(Nullable(Of TimeSpan), AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopy(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopy(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AbortCopy(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: AbortCopy(String, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.AbortCopy(String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopy(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AbortCopy
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1739
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nAborts an ongoing blob copy operation.\n"
  example: []
  syntax:
    content: void AbortCopy(string copyId, AccessCondition accessCondition = null, BlobRequestOptions options = null, OperationContext operationContext = null)
    content.vb: Sub AbortCopy(copyId As String, accessCondition As AccessCondition = Nothing, options As BlobRequestOptions = Nothing, operationContext As OperationContext = Nothing)
    parameters:
    - id: copyId
      type: System.String
      description: A string identifying the copy operation.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request. If <code>null</code>, default options are applied to the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopy*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAbortCopy(System.String,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAbortCopy(System.String,System.AsyncCallback,System.Object)
  id: BeginAbortCopy(System.String,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginAbortCopy(String, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginAbortCopy(String, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAbortCopy(System.String, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginAbortCopy
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1749
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to abort an ongoing blob copy operation.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginAbortCopy(string copyId, AsyncCallback callback, object state)
    content.vb: Function BeginAbortCopy(copyId As String, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: copyId
      type: System.String
      description: A string identifying the copy operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAbortCopy*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAbortCopy(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAbortCopy(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginAbortCopy(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BeginAbortCopy(String, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  nameWithType: ICloudBlob.BeginAbortCopy(String, AccessCondition, BlobRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAbortCopy(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginAbortCopy
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1761
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nBegins an asynchronous operation to abort an ongoing blob copy operation.\n"
  example: []
  syntax:
    content: ICancellableAsyncResult BeginAbortCopy(string copyId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: Function BeginAbortCopy(copyId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: copyId
      type: System.String
      description: A string identifying the copy operation.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="Microsoft.WindowsAzure.Storage.ICancellableAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAbortCopy*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndAbortCopy(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndAbortCopy(System.IAsyncResult)
  id: EndAbortCopy(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: EndAbortCopy(IAsyncResult)
  nameWithType: ICloudBlob.EndAbortCopy(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndAbortCopy(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndAbortCopy
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1767
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nEnds an asynchronous operation to abort an ongoing blob copy operation.\n"
  example: []
  syntax:
    content: void EndAbortCopy(IAsyncResult asyncResult)
    content.vb: Sub EndAbortCopy(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the pending asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndAbortCopy*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String)
  id: AbortCopyAsync(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: AbortCopyAsync(String)
  nameWithType: ICloudBlob.AbortCopyAsync(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AbortCopyAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1775
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to abort an ongoing blob copy operation.\n"
  example: []
  syntax:
    content: Task AbortCopyAsync(string copyId)
    content.vb: Function AbortCopyAsync(copyId As String) As Task
    parameters:
    - id: copyId
      type: System.String
      description: A string identifying the copy operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String,System.Threading.CancellationToken)
  id: AbortCopyAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: AbortCopyAsync(String, CancellationToken)
  nameWithType: ICloudBlob.AbortCopyAsync(String, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AbortCopyAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1783
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to abort an ongoing blob copy operation.\n"
  example: []
  syntax:
    content: Task AbortCopyAsync(string copyId, CancellationToken cancellationToken)
    content.vb: Function AbortCopyAsync(copyId As String, cancellationToken As CancellationToken) As Task
    parameters:
    - id: copyId
      type: System.String
      description: A string identifying the copy operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: AbortCopyAsync(String, AccessCondition, BlobRequestOptions, OperationContext)
  nameWithType: ICloudBlob.AbortCopyAsync(String, AccessCondition, BlobRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AbortCopyAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1793
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to abort an ongoing blob copy operation.\n"
  example: []
  syntax:
    content: Task AbortCopyAsync(string copyId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext)
    content.vb: Function AbortCopyAsync(copyId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext) As Task
    parameters:
    - id: copyId
      type: System.String
      description: A string identifying the copy operation.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: AbortCopyAsync(System.String,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: AbortCopyAsync(String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  nameWithType: ICloudBlob.AbortCopyAsync(String, AccessCondition, BlobRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync(System.String, Microsoft.WindowsAzure.Storage.AccessCondition, Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AbortCopyAsync
    path: Lib/ClassLibraryCommon/Blob/ICloudBlob.cs
    startLine: 1804
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nInitiates an asynchronous operation to abort an ongoing blob copy operation.\n"
  example: []
  syntax:
    content: Task AbortCopyAsync(string copyId, AccessCondition accessCondition, BlobRequestOptions options, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: Function AbortCopyAsync(copyId As String, accessCondition As AccessCondition, options As BlobRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task
    parameters:
    - id: copyId
      type: System.String
      description: A string identifying the copy operation.
    - id: accessCondition
      type: Microsoft.WindowsAzure.Storage.AccessCondition
      description: An <xref href="Microsoft.WindowsAzure.Storage.AccessCondition" data-throw-if-not-resolved="false"></xref> object that represents the condition that must be met in order for the request to proceed.
    - id: options
      type: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Name
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Name
  id: Name
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ICloudBlob.Name
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Name
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Name
    path: Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the blob's name.\n"
  example: []
  syntax:
    content: string Name { get; }
    content.vb: ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: A string containing the name of the blob.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ServiceClient
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ServiceClient
  id: ServiceClient
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: ServiceClient
  nameWithType: ICloudBlob.ServiceClient
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ServiceClient
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ServiceClient
    path: Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 38
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient\" data-throw-if-not-resolved=\"false\"></xref> object that represents the Blob service.\n"
  example: []
  syntax:
    content: CloudBlobClient ServiceClient { get; }
    content.vb: ReadOnly Property ServiceClient As CloudBlobClient
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ServiceClient*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamWriteSizeInBytes
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamWriteSizeInBytes
  id: StreamWriteSizeInBytes
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: StreamWriteSizeInBytes
  nameWithType: ICloudBlob.StreamWriteSizeInBytes
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamWriteSizeInBytes
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: StreamWriteSizeInBytes
    path: Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 45
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets or sets the number of bytes to buffer when writing to a page blob stream or\nthe block size for writing to a block blob.\n"
  example: []
  syntax:
    content: int StreamWriteSizeInBytes { get; set; }
    content.vb: Property StreamWriteSizeInBytes As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of bytes to buffer or the size of a block, in bytes.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamWriteSizeInBytes*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes
  id: StreamMinimumReadSizeInBytes
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: StreamMinimumReadSizeInBytes
  nameWithType: ICloudBlob.StreamMinimumReadSizeInBytes
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: StreamMinimumReadSizeInBytes
    path: Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 51
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets or sets the minimum number of bytes to buffer when reading from a blob stream.\n"
  example: []
  syntax:
    content: int StreamMinimumReadSizeInBytes { get; set; }
    content.vb: Property StreamMinimumReadSizeInBytes As Integer
    parameters: []
    return:
      type: System.Int32
      description: The minimum number of bytes to buffer.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes*
  modifiers.csharp:
  - get
  - set
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Properties
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Properties
  id: Properties
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: ICloudBlob.Properties
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Properties
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Properties
    path: Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 57
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the blob's system properties.\n"
  example: []
  syntax:
    content: BlobProperties Properties { get; }
    content.vb: ReadOnly Property Properties As BlobProperties
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.BlobProperties" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Properties*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Metadata
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Metadata
  id: Metadata
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: ICloudBlob.Metadata
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Metadata
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Metadata
    path: Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 63
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the user-defined metadata for the blob.\n"
  example: []
  syntax:
    content: IDictionary<string, string> Metadata { get; }
    content.vb: ReadOnly Property Metadata As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: An <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref> object containing the blob's metadata as a collection of name-value pairs.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Metadata*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotTime
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotTime
  id: SnapshotTime
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: SnapshotTime
  nameWithType: ICloudBlob.SnapshotTime
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotTime
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SnapshotTime
    path: Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 72
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the date and time that the blob snapshot was taken, if this blob is a snapshot.\n"
  remarks: "\nIf the blob is not a snapshot, the value of this property is <code>null</code>.\n"
  example: []
  syntax:
    content: DateTimeOffset? SnapshotTime { get; }
    content.vb: ReadOnly Property SnapshotTime As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> containing the blob's snapshot time if the blob is a snapshot; otherwise, <code>null</code>.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotTime*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.IsSnapshot
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.IsSnapshot
  id: IsSnapshot
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: IsSnapshot
  nameWithType: ICloudBlob.IsSnapshot
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.IsSnapshot
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IsSnapshot
    path: Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 78
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets a value indicating whether this blob is a snapshot.\n"
  example: []
  syntax:
    content: bool IsSnapshot { get; }
    content.vb: ReadOnly Property IsSnapshot As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if this blob is a snapshot; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.IsSnapshot*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotQualifiedUri
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotQualifiedUri
  id: SnapshotQualifiedUri
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: SnapshotQualifiedUri
  nameWithType: ICloudBlob.SnapshotQualifiedUri
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotQualifiedUri
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SnapshotQualifiedUri
    path: Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 84
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the absolute URI to the blob, including query string information if the blob is a snapshot.\n"
  example: []
  syntax:
    content: Uri SnapshotQualifiedUri { get; }
    content.vb: ReadOnly Property SnapshotQualifiedUri As Uri
    parameters: []
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> specifying the absolute URI to the blob, including snapshot query information if the blob is a snapshot.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotQualifiedUri*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotQualifiedStorageUri
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotQualifiedStorageUri
  id: SnapshotQualifiedStorageUri
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: SnapshotQualifiedStorageUri
  nameWithType: ICloudBlob.SnapshotQualifiedStorageUri
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotQualifiedStorageUri
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SnapshotQualifiedStorageUri
    path: Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 91
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the blob's URI for both the primary and secondary locations, including query string information if the blob is a snapshot.\n"
  example: []
  syntax:
    content: StorageUri SnapshotQualifiedStorageUri { get; }
    content.vb: ReadOnly Property SnapshotQualifiedStorageUri As StorageUri
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: "An object of type <xref href=\"Microsoft.WindowsAzure.Storage.StorageUri\" data-throw-if-not-resolved=\"false\"></xref> containing the blob's URIs for both the primary and secondary locations, \nincluding snapshot query information if the blob is a snapshot."
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotQualifiedStorageUri*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.CopyState
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.CopyState
  id: CopyState
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: CopyState
  nameWithType: ICloudBlob.CopyState
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.CopyState
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CopyState
    path: Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 97
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the state of the most recent or pending copy operation.\n"
  example: []
  syntax:
    content: CopyState CopyState { get; }
    content.vb: ReadOnly Property CopyState As CopyState
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CopyState
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.CopyState" data-throw-if-not-resolved="false"></xref> object containing the copy state, or <code>null</code> if there is no copy state for the blob.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.CopyState*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BlobType
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BlobType
  id: BlobType
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: BlobType
  nameWithType: ICloudBlob.BlobType
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BlobType
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BlobType
    path: Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 103
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nGets the type of the blob.\n"
  example: []
  syntax:
    content: BlobType BlobType { get; }
    content.vb: ReadOnly Property BlobType As BlobType
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.BlobType
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BlobType" data-throw-if-not-resolved="false"></xref> enumeration value.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BlobType*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessBlobPolicy)
  nameWithType: ICloudBlob.GetSharedAccessSignature(SharedAccessBlobPolicy)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy)
  type: Method
  source:
    remote:
      path: Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetSharedAccessSignature
    path: Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 111
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nReturns a shared access signature for the blob.\n"
  remarks: The query string returned includes the leading question mark.
  example: []
  syntax:
    content: string GetSharedAccessSignature(SharedAccessBlobPolicy policy)
    content.vb: Function GetSharedAccessSignature(policy As SharedAccessBlobPolicy) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessBlobPolicy, String)
  nameWithType: ICloudBlob.GetSharedAccessSignature(SharedAccessBlobPolicy, String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, System.String)
  type: Method
  source:
    remote:
      path: Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetSharedAccessSignature
    path: Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 123
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nReturns a shared access signature for the blob.\n"
  remarks: The query string returned includes the leading question mark.
  example: []
  syntax:
    content: string GetSharedAccessSignature(SharedAccessBlobPolicy policy, string groupPolicyIdentifier)
    content.vb: Function GetSharedAccessSignature(policy As SharedAccessBlobPolicy, groupPolicyIdentifier As String) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    - id: groupPolicyIdentifier
      type: System.String
      description: A string identifying a stored access policy.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessBlobPolicy, SharedAccessBlobHeaders)
  nameWithType: ICloudBlob.GetSharedAccessSignature(SharedAccessBlobPolicy, SharedAccessBlobHeaders)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders)
  type: Method
  source:
    remote:
      path: Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetSharedAccessSignature
    path: Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 131
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nReturns a shared access signature for the blob.\n"
  example: []
  syntax:
    content: string GetSharedAccessSignature(SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers)
    content.vb: Function GetSharedAccessSignature(policy As SharedAccessBlobPolicy, headers As SharedAccessBlobHeaders) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    - id: headers
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders" data-throw-if-not-resolved="false"></xref> object specifying optional header values to set for a blob accessed with this SAS.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessBlobPolicy, SharedAccessBlobHeaders, String)
  nameWithType: ICloudBlob.GetSharedAccessSignature(SharedAccessBlobPolicy, SharedAccessBlobHeaders, String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders, System.String)
  type: Method
  source:
    remote:
      path: Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetSharedAccessSignature
    path: Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 140
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nReturns a shared access signature for the blob.\n"
  example: []
  syntax:
    content: string GetSharedAccessSignature(SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers, string groupPolicyIdentifier)
    content.vb: Function GetSharedAccessSignature(policy As SharedAccessBlobPolicy, headers As SharedAccessBlobHeaders, groupPolicyIdentifier As String) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    - id: headers
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders" data-throw-if-not-resolved="false"></xref> object specifying optional header values to set for a blob accessed with this SAS.
    - id: groupPolicyIdentifier
      type: System.String
      description: A string identifying a stored access policy.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature*
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy,Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders,System.String,System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol},Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  parent: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessBlobPolicy, SharedAccessBlobHeaders, String, Nullable<SharedAccessProtocol>, IPAddressOrRange)
  nameWithType: ICloudBlob.GetSharedAccessSignature(SharedAccessBlobPolicy, SharedAccessBlobHeaders, String, Nullable<SharedAccessProtocol>, IPAddressOrRange)
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders, System.String, System.Nullable<Microsoft.WindowsAzure.Storage.SharedAccessProtocol>, Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  type: Method
  source:
    remote:
      path: Lib/Common/Blob/ICloudBlob.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetSharedAccessSignature
    path: Lib/Common/Blob/ICloudBlob.Common.cs
    startLine: 151
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob
  summary: "\nReturns a shared access signature for the blob.\n"
  example: []
  syntax:
    content: string GetSharedAccessSignature(SharedAccessBlobPolicy policy, SharedAccessBlobHeaders headers, string groupPolicyIdentifier, SharedAccessProtocol? protocols, IPAddressOrRange ipAddressOrRange)
    content.vb: Function GetSharedAccessSignature(policy As SharedAccessBlobPolicy, headers As SharedAccessBlobHeaders, groupPolicyIdentifier As String, protocols As SharedAccessProtocol?, ipAddressOrRange As IPAddressOrRange) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    - id: headers
      type: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders" data-throw-if-not-resolved="false"></xref> object specifying optional header values to set for a blob accessed with this SAS.
    - id: groupPolicyIdentifier
      type: System.String
      description: A string identifying a stored access policy.
    - id: protocols
      type: System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol}
      description: The allowed protocols (https only, or http and https). Null if you don't want to restrict protocol.
    - id: ipAddressOrRange
      type: Microsoft.WindowsAzure.Storage.IPAddressOrRange
      description: The allowed IP address or IP address range. Null if you don't want to restrict based on IP address.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  overload: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature*
  nameWithType.vb: ICloudBlob.GetSharedAccessSignature(SharedAccessBlobPolicy, SharedAccessBlobHeaders, String, Nullable(Of SharedAccessProtocol), IPAddressOrRange)
  fullName.vb: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy, Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders, System.String, System.Nullable(Of Microsoft.WindowsAzure.Storage.SharedAccessProtocol), Microsoft.WindowsAzure.Storage.IPAddressOrRange)
  name.vb: GetSharedAccessSignature(SharedAccessBlobPolicy, SharedAccessBlobHeaders, String, Nullable(Of SharedAccessProtocol), IPAddressOrRange)
references:
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlockBlob
  nameWithType: CloudBlockBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudPageBlob
  nameWithType: CloudPageBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: ICloudBlob
  nameWithType: ICloudBlob
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob
- uid: Microsoft.WindowsAzure.Storage.Blob
  commentId: N:Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob
  nameWithType: Microsoft.WindowsAzure.Storage.Blob
  fullName: Microsoft.WindowsAzure.Storage.Blob
- uid: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.Uri
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.Uri
  parent: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
  isExternal: false
  name: Uri
  nameWithType: IListBlobItem.Uri
  fullName: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.Uri
- uid: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.StorageUri
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.StorageUri
  parent: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
  isExternal: false
  name: StorageUri
  nameWithType: IListBlobItem.StorageUri
  fullName: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.StorageUri
- uid: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.Parent
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.Parent
  parent: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
  isExternal: false
  name: Parent
  nameWithType: IListBlobItem.Parent
  fullName: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.Parent
- uid: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.Container
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.Container
  parent: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
  isExternal: false
  name: Container
  nameWithType: IListBlobItem.Container
  fullName: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem.Container
- uid: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: IListBlobItem
  nameWithType: IListBlobItem
  fullName: Microsoft.WindowsAzure.Storage.Blob.IListBlobItem
- uid: Microsoft.WindowsAzure.Storage.AccessCondition
  commentId: T:Microsoft.WindowsAzure.Storage.AccessCondition
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: AccessCondition
  nameWithType: AccessCondition
  fullName: Microsoft.WindowsAzure.Storage.AccessCondition
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobRequestOptions
  nameWithType: BlobRequestOptions
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  commentId: T:Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  nameWithType: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenRead*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenRead
  isExternal: false
  name: OpenRead
  nameWithType: ICloudBlob.OpenRead
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenRead
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Microsoft.WindowsAzure.Storage
  commentId: N:Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  nameWithType: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
  commentId: T:Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: ICancellableAsyncResult
  nameWithType: ICancellableAsyncResult
  fullName: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndOpenRead(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndOpenRead(System.IAsyncResult)
- uid: System.IO.Stream.EndRead(System.IAsyncResult)
  commentId: M:System.IO.Stream.EndRead(System.IAsyncResult)
  parent: System.IO.Stream
  isExternal: true
  name: EndRead(IAsyncResult)
  nameWithType: Stream.EndRead(IAsyncResult)
  fullName: System.IO.Stream.EndRead(System.IAsyncResult)
  spec.csharp:
  - uid: System.IO.Stream.EndRead(System.IAsyncResult)
    name: EndRead
    nameWithType: Stream.EndRead
    fullName: System.IO.Stream.EndRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.EndRead(System.IAsyncResult)
    name: EndRead
    nameWithType: Stream.EndRead
    fullName: System.IO.Stream.EndRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Stream
  isExternal: true
  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: System.IO.Stream.BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  nameWithType.vb: Stream.BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)
  fullname.vb: System.IO.Stream.BeginRead(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)
  spec.csharp:
  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginRead
    nameWithType: Stream.BeginRead
    fullName: System.IO.Stream.BeginRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginRead
    nameWithType: Stream.BeginRead
    fullName: System.IO.Stream.BeginRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginFetchAttributes(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginOpenRead*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginOpenRead
  isExternal: false
  name: BeginOpenRead
  nameWithType: ICloudBlob.BeginOpenRead
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginOpenRead
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndOpenRead*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndOpenRead
  isExternal: false
  name: EndOpenRead
  nameWithType: ICloudBlob.EndOpenRead
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndOpenRead
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync(Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync
  isExternal: false
  name: OpenReadAsync
  nameWithType: ICloudBlob.OpenReadAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.OpenReadAsync
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  commentId: T:System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Stream>
  nameWithType: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  nameWithType.vb: Task(Of Stream)
  fullname.vb: System.Threading.Tasks.Task(Of System.IO.Stream)
  name.vb: Task(Of Stream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStream*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStream
  isExternal: false
  name: UploadFromStream
  nameWithType: ICloudBlob.UploadFromStream
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStream
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromStream*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromStream
  isExternal: false
  name: BeginUploadFromStream
  nameWithType: ICloudBlob.BeginUploadFromStream
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromStream
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndUploadFromStream*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndUploadFromStream
  isExternal: false
  name: EndUploadFromStream
  nameWithType: ICloudBlob.EndUploadFromStream
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndUploadFromStream
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync
  isExternal: false
  name: UploadFromStreamAsync
  nameWithType: ICloudBlob.UploadFromStreamAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromStreamAsync
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFile*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFile
  isExternal: false
  name: UploadFromFile
  nameWithType: ICloudBlob.UploadFromFile
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromFile*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromFile
  isExternal: false
  name: BeginUploadFromFile
  nameWithType: ICloudBlob.BeginUploadFromFile
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromFile
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndUploadFromFile*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndUploadFromFile
  isExternal: false
  name: EndUploadFromFile
  nameWithType: ICloudBlob.EndUploadFromFile
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndUploadFromFile
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync
  isExternal: false
  name: UploadFromFileAsync
  nameWithType: ICloudBlob.UploadFromFileAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromFileAsync
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArray*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArray
  isExternal: false
  name: UploadFromByteArray
  nameWithType: ICloudBlob.UploadFromByteArray
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArray
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromByteArray*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromByteArray
  isExternal: false
  name: BeginUploadFromByteArray
  nameWithType: ICloudBlob.BeginUploadFromByteArray
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginUploadFromByteArray
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndUploadFromByteArray*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndUploadFromByteArray
  isExternal: false
  name: EndUploadFromByteArray
  nameWithType: ICloudBlob.EndUploadFromByteArray
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndUploadFromByteArray
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync
  isExternal: false
  name: UploadFromByteArrayAsync
  nameWithType: ICloudBlob.UploadFromByteArrayAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.UploadFromByteArrayAsync
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStream*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStream
  isExternal: false
  name: DownloadToStream
  nameWithType: ICloudBlob.DownloadToStream
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStream
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToStream*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToStream
  isExternal: false
  name: BeginDownloadToStream
  nameWithType: ICloudBlob.BeginDownloadToStream
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToStream
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadToStream*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadToStream
  isExternal: false
  name: EndDownloadToStream
  nameWithType: ICloudBlob.EndDownloadToStream
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadToStream
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync
  isExternal: false
  name: DownloadToStreamAsync
  nameWithType: ICloudBlob.DownloadToStreamAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToStreamAsync
- uid: System.IO.FileMode
  commentId: T:System.IO.FileMode
  parent: System.IO
  isExternal: true
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFile*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFile
  isExternal: false
  name: DownloadToFile
  nameWithType: ICloudBlob.DownloadToFile
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFile
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToFile*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToFile
  isExternal: false
  name: BeginDownloadToFile
  nameWithType: ICloudBlob.BeginDownloadToFile
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToFile
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadToFile*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadToFile
  isExternal: false
  name: EndDownloadToFile
  nameWithType: ICloudBlob.EndDownloadToFile
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadToFile
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync
  isExternal: false
  name: DownloadToFileAsync
  nameWithType: ICloudBlob.DownloadToFileAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToFileAsync
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArray*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArray
  isExternal: false
  name: DownloadToByteArray
  nameWithType: ICloudBlob.DownloadToByteArray
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArray
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToByteArray*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToByteArray
  isExternal: false
  name: BeginDownloadToByteArray
  nameWithType: ICloudBlob.BeginDownloadToByteArray
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadToByteArray
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadToByteArray*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadToByteArray
  isExternal: false
  name: EndDownloadToByteArray
  nameWithType: ICloudBlob.EndDownloadToByteArray
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadToByteArray
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync
  isExternal: false
  name: DownloadToByteArrayAsync
  nameWithType: ICloudBlob.DownloadToByteArrayAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadToByteArrayAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullname.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStream*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStream
  isExternal: false
  name: DownloadRangeToStream
  nameWithType: ICloudBlob.DownloadRangeToStream
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStream
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullname.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToStream*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToStream
  isExternal: false
  name: BeginDownloadRangeToStream
  nameWithType: ICloudBlob.BeginDownloadRangeToStream
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToStream
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadRangeToStream*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadRangeToStream
  isExternal: false
  name: EndDownloadRangeToStream
  nameWithType: ICloudBlob.EndDownloadRangeToStream
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadRangeToStream
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync
  isExternal: false
  name: DownloadRangeToStreamAsync
  nameWithType: ICloudBlob.DownloadRangeToStreamAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToStreamAsync
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArray*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArray
  isExternal: false
  name: DownloadRangeToByteArray
  nameWithType: ICloudBlob.DownloadRangeToByteArray
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArray
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToByteArray*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToByteArray
  isExternal: false
  name: BeginDownloadRangeToByteArray
  nameWithType: ICloudBlob.BeginDownloadRangeToByteArray
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDownloadRangeToByteArray
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadRangeToByteArray*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadRangeToByteArray
  isExternal: false
  name: EndDownloadRangeToByteArray
  nameWithType: ICloudBlob.EndDownloadRangeToByteArray
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDownloadRangeToByteArray
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync
  isExternal: false
  name: DownloadRangeToByteArrayAsync
  nameWithType: ICloudBlob.DownloadRangeToByteArrayAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DownloadRangeToByteArrayAsync
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Exists*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Exists
  isExternal: false
  name: Exists
  nameWithType: ICloudBlob.Exists
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Exists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginExists*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginExists
  isExternal: false
  name: BeginExists
  nameWithType: ICloudBlob.BeginExists
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginExists
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndExists*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndExists
  isExternal: false
  name: EndExists
  nameWithType: ICloudBlob.EndExists
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndExists
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync
  isExternal: false
  name: ExistsAsync
  nameWithType: ICloudBlob.ExistsAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ExistsAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullname.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributes*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributes
  isExternal: false
  name: FetchAttributes
  nameWithType: ICloudBlob.FetchAttributes
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributes
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginFetchAttributes*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginFetchAttributes
  isExternal: false
  name: BeginFetchAttributes
  nameWithType: ICloudBlob.BeginFetchAttributes
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginFetchAttributes
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndFetchAttributes*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndFetchAttributes
  isExternal: false
  name: EndFetchAttributes
  nameWithType: ICloudBlob.EndFetchAttributes
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndFetchAttributes
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync
  isExternal: false
  name: FetchAttributesAsync
  nameWithType: ICloudBlob.FetchAttributesAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.FetchAttributesAsync
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadata*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadata
  isExternal: false
  name: SetMetadata
  nameWithType: ICloudBlob.SetMetadata
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadata
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetMetadata*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetMetadata
  isExternal: false
  name: BeginSetMetadata
  nameWithType: ICloudBlob.BeginSetMetadata
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetMetadata
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndSetMetadata*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndSetMetadata
  isExternal: false
  name: EndSetMetadata
  nameWithType: ICloudBlob.EndSetMetadata
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndSetMetadata
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync
  isExternal: false
  name: SetMetadataAsync
  nameWithType: ICloudBlob.SetMetadataAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetMetadataAsync
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetProperties*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetProperties
  isExternal: false
  name: SetProperties
  nameWithType: ICloudBlob.SetProperties
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetProperties
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetProperties*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetProperties
  isExternal: false
  name: BeginSetProperties
  nameWithType: ICloudBlob.BeginSetProperties
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginSetProperties
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndSetProperties*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndSetProperties
  isExternal: false
  name: EndSetProperties
  nameWithType: ICloudBlob.EndSetProperties
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndSetProperties
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync
  isExternal: false
  name: SetPropertiesAsync
  nameWithType: ICloudBlob.SetPropertiesAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SetPropertiesAsync
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Delete*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Delete
  isExternal: false
  name: Delete
  nameWithType: ICloudBlob.Delete
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Delete
- uid: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: DeleteSnapshotsOption
  nameWithType: DeleteSnapshotsOption
  fullName: Microsoft.WindowsAzure.Storage.Blob.DeleteSnapshotsOption
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDelete*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDelete
  isExternal: false
  name: BeginDelete
  nameWithType: ICloudBlob.BeginDelete
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDelete
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDelete*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDelete
  isExternal: false
  name: EndDelete
  nameWithType: ICloudBlob.EndDelete
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDelete
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync
  isExternal: false
  name: DeleteAsync
  nameWithType: ICloudBlob.DeleteAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteAsync
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExists*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExists
  isExternal: false
  name: DeleteIfExists
  nameWithType: ICloudBlob.DeleteIfExists
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExists
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDeleteIfExists*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDeleteIfExists
  isExternal: false
  name: BeginDeleteIfExists
  nameWithType: ICloudBlob.BeginDeleteIfExists
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginDeleteIfExists
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDeleteIfExists*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDeleteIfExists
  isExternal: false
  name: EndDeleteIfExists
  nameWithType: ICloudBlob.EndDeleteIfExists
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndDeleteIfExists
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync
  isExternal: false
  name: DeleteIfExistsAsync
  nameWithType: ICloudBlob.DeleteIfExistsAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.DeleteIfExistsAsync
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLease*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLease
  isExternal: false
  name: AcquireLease
  nameWithType: ICloudBlob.AcquireLease
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLease
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAcquireLease*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAcquireLease
  isExternal: false
  name: BeginAcquireLease
  nameWithType: ICloudBlob.BeginAcquireLease
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAcquireLease
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndAcquireLease*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndAcquireLease
  isExternal: false
  name: EndAcquireLease
  nameWithType: ICloudBlob.EndAcquireLease
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndAcquireLease
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync
  isExternal: false
  name: AcquireLeaseAsync
  nameWithType: ICloudBlob.AcquireLeaseAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AcquireLeaseAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullname.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLease*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLease
  isExternal: false
  name: RenewLease
  nameWithType: ICloudBlob.RenewLease
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLease
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginRenewLease*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginRenewLease
  isExternal: false
  name: BeginRenewLease
  nameWithType: ICloudBlob.BeginRenewLease
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginRenewLease
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndRenewLease*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndRenewLease
  isExternal: false
  name: EndRenewLease
  nameWithType: ICloudBlob.EndRenewLease
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndRenewLease
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync
  isExternal: false
  name: RenewLeaseAsync
  nameWithType: ICloudBlob.RenewLeaseAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.RenewLeaseAsync
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLease*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLease
  isExternal: false
  name: ChangeLease
  nameWithType: ICloudBlob.ChangeLease
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLease
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginChangeLease*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginChangeLease
  isExternal: false
  name: BeginChangeLease
  nameWithType: ICloudBlob.BeginChangeLease
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginChangeLease
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndChangeLease*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndChangeLease
  isExternal: false
  name: EndChangeLease
  nameWithType: ICloudBlob.EndChangeLease
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndChangeLease
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync
  isExternal: false
  name: ChangeLeaseAsync
  nameWithType: ICloudBlob.ChangeLeaseAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ChangeLeaseAsync
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLease*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLease
  isExternal: false
  name: ReleaseLease
  nameWithType: ICloudBlob.ReleaseLease
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLease
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginReleaseLease*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginReleaseLease
  isExternal: false
  name: BeginReleaseLease
  nameWithType: ICloudBlob.BeginReleaseLease
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginReleaseLease
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndReleaseLease*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndReleaseLease
  isExternal: false
  name: EndReleaseLease
  nameWithType: ICloudBlob.EndReleaseLease
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndReleaseLease
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync
  isExternal: false
  name: ReleaseLeaseAsync
  nameWithType: ICloudBlob.ReleaseLeaseAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ReleaseLeaseAsync
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLease*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLease
  isExternal: false
  name: BreakLease
  nameWithType: ICloudBlob.BreakLease
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLease
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginBreakLease*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginBreakLease
  isExternal: false
  name: BeginBreakLease
  nameWithType: ICloudBlob.BeginBreakLease
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginBreakLease
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndBreakLease*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndBreakLease
  isExternal: false
  name: EndBreakLease
  nameWithType: ICloudBlob.EndBreakLease
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndBreakLease
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync
  isExternal: false
  name: BreakLeaseAsync
  nameWithType: ICloudBlob.BreakLeaseAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BreakLeaseAsync
- uid: System.Threading.Tasks.Task{System.TimeSpan}
  commentId: T:System.Threading.Tasks.Task{System.TimeSpan}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TimeSpan>
  nameWithType: Task<TimeSpan>
  fullName: System.Threading.Tasks.Task<System.TimeSpan>
  nameWithType.vb: Task(Of TimeSpan)
  fullname.vb: System.Threading.Tasks.Task(Of System.TimeSpan)
  name.vb: Task(Of TimeSpan)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopy*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopy
  isExternal: false
  name: AbortCopy
  nameWithType: ICloudBlob.AbortCopy
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopy
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAbortCopy*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAbortCopy
  isExternal: false
  name: BeginAbortCopy
  nameWithType: ICloudBlob.BeginAbortCopy
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BeginAbortCopy
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndAbortCopy*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndAbortCopy
  isExternal: false
  name: EndAbortCopy
  nameWithType: ICloudBlob.EndAbortCopy
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.EndAbortCopy
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync
  isExternal: false
  name: AbortCopyAsync
  nameWithType: ICloudBlob.AbortCopyAsync
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.AbortCopyAsync
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Name*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Name
  isExternal: false
  name: Name
  nameWithType: ICloudBlob.Name
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Name
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlobClient
  nameWithType: CloudBlobClient
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ServiceClient*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ServiceClient
  isExternal: false
  name: ServiceClient
  nameWithType: ICloudBlob.ServiceClient
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.ServiceClient
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamWriteSizeInBytes*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamWriteSizeInBytes
  isExternal: false
  name: StreamWriteSizeInBytes
  nameWithType: ICloudBlob.StreamWriteSizeInBytes
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamWriteSizeInBytes
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes
  isExternal: false
  name: StreamMinimumReadSizeInBytes
  nameWithType: ICloudBlob.StreamMinimumReadSizeInBytes
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.StreamMinimumReadSizeInBytes
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobProperties
  nameWithType: BlobProperties
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Properties*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Properties
  isExternal: false
  name: Properties
  nameWithType: ICloudBlob.Properties
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Properties
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Metadata*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Metadata
  isExternal: false
  name: Metadata
  nameWithType: ICloudBlob.Metadata
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.Metadata
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotTime*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotTime
  isExternal: false
  name: SnapshotTime
  nameWithType: ICloudBlob.SnapshotTime
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotTime
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullname.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.IsSnapshot*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.IsSnapshot
  isExternal: false
  name: IsSnapshot
  nameWithType: ICloudBlob.IsSnapshot
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.IsSnapshot
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotQualifiedUri*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotQualifiedUri
  isExternal: false
  name: SnapshotQualifiedUri
  nameWithType: ICloudBlob.SnapshotQualifiedUri
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotQualifiedUri
- uid: Microsoft.WindowsAzure.Storage.StorageUri
  commentId: T:Microsoft.WindowsAzure.Storage.StorageUri
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: StorageUri
  nameWithType: StorageUri
  fullName: Microsoft.WindowsAzure.Storage.StorageUri
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotQualifiedStorageUri*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotQualifiedStorageUri
  isExternal: false
  name: SnapshotQualifiedStorageUri
  nameWithType: ICloudBlob.SnapshotQualifiedStorageUri
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.SnapshotQualifiedStorageUri
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.CopyState
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.CopyState
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.CopyState*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.CopyState
  isExternal: false
  name: CopyState
  nameWithType: ICloudBlob.CopyState
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.CopyState
- uid: Microsoft.WindowsAzure.Storage.Blob.CopyState
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CopyState
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CopyState
  nameWithType: CopyState
  fullName: Microsoft.WindowsAzure.Storage.Blob.CopyState
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BlobType
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BlobType
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BlobType*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BlobType
  isExternal: false
  name: BlobType
  nameWithType: ICloudBlob.BlobType
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.BlobType
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobType
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.BlobType
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobType
  nameWithType: BlobType
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobType
- uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: SharedAccessBlobPolicy
  nameWithType: SharedAccessBlobPolicy
  fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobPolicy
- uid: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature
  isExternal: false
  name: GetSharedAccessSignature
  nameWithType: ICloudBlob.GetSharedAccessSignature
  fullName: Microsoft.WindowsAzure.Storage.Blob.ICloudBlob.GetSharedAccessSignature
- uid: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: SharedAccessBlobHeaders
  nameWithType: SharedAccessBlobHeaders
  fullName: Microsoft.WindowsAzure.Storage.Blob.SharedAccessBlobHeaders
- uid: System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol}
  commentId: T:System.Nullable{Microsoft.WindowsAzure.Storage.SharedAccessProtocol}
  parent: System
  definition: System.Nullable`1
  name: Nullable<SharedAccessProtocol>
  nameWithType: Nullable<SharedAccessProtocol>
  fullName: System.Nullable<Microsoft.WindowsAzure.Storage.SharedAccessProtocol>
  nameWithType.vb: Nullable(Of SharedAccessProtocol)
  fullname.vb: System.Nullable(Of Microsoft.WindowsAzure.Storage.SharedAccessProtocol)
  name.vb: Nullable(Of SharedAccessProtocol)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
    name: SharedAccessProtocol
    nameWithType: SharedAccessProtocol
    fullName: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
    name: SharedAccessProtocol
    nameWithType: SharedAccessProtocol
    fullName: Microsoft.WindowsAzure.Storage.SharedAccessProtocol
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.IPAddressOrRange
  commentId: T:Microsoft.WindowsAzure.Storage.IPAddressOrRange
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: IPAddressOrRange
  nameWithType: IPAddressOrRange
  fullName: Microsoft.WindowsAzure.Storage.IPAddressOrRange
