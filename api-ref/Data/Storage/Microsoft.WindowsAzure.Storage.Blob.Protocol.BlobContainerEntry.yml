### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry
  id: BlobContainerEntry
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol
  children:
  - Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Metadata
  - Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Name
  - Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Properties
  - Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Uri
  langs:
  - csharp
  - vb
  name: BlobContainerEntry
  nameWithType: BlobContainerEntry
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry
  type: Class
  source:
    remote:
      path: Lib/Common/Blob/Protocol/BlobContainerEntry.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BlobContainerEntry
    path: Lib/Common/Blob/Protocol/BlobContainerEntry.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\nRepresents a container item returned in the XML response for a container listing operation.\n"
  example: []
  syntax:
    content: public sealed class BlobContainerEntry
    content.vb: Public NotInheritable Class BlobContainerEntry
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Metadata
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Metadata
  id: Metadata
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: BlobContainerEntry.Metadata
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Metadata
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/Protocol/BlobContainerEntry.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Metadata
    path: Lib/Common/Blob/Protocol/BlobContainerEntry.cs
    startLine: 47
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\nGets the user-defined metadata for the container.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> Metadata { get; }
    content.vb: Public ReadOnly Property Metadata As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: The container's metadata, as a collection of name-value pairs.
  overload: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Metadata*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Properties
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Properties
  id: Properties
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: BlobContainerEntry.Properties
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Properties
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/Protocol/BlobContainerEntry.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Properties
    path: Lib/Common/Blob/Protocol/BlobContainerEntry.cs
    startLine: 53
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\nGets the container's system properties.\n"
  example: []
  syntax:
    content: public BlobContainerProperties Properties { get; }
    content.vb: Public ReadOnly Property Properties As BlobContainerProperties
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties
      description: The container's properties.
  overload: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Properties*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Name
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Name
  id: Name
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: BlobContainerEntry.Name
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Name
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/Protocol/BlobContainerEntry.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Name
    path: Lib/Common/Blob/Protocol/BlobContainerEntry.cs
    startLine: 59
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\nGets the name of the container.\n"
  example: []
  syntax:
    content: public string Name { get; }
    content.vb: Public ReadOnly Property Name As String
    parameters: []
    return:
      type: System.String
      description: The container's name.
  overload: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Uri
  commentId: P:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Uri
  id: Uri
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: BlobContainerEntry.Uri
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Uri
  type: Property
  source:
    remote:
      path: Lib/Common/Blob/Protocol/BlobContainerEntry.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Uri
    path: Lib/Common/Blob/Protocol/BlobContainerEntry.cs
    startLine: 65
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\nGets the container's URI.\n"
  example: []
  syntax:
    content: public Uri Uri { get; }
    content.vb: Public ReadOnly Property Uri As Uri
    parameters: []
    return:
      type: System.Uri
      description: The absolute URI to the container.
  overload: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Uri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol
  commentId: N:Microsoft.WindowsAzure.Storage.Blob.Protocol
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob.Protocol
  nameWithType: Microsoft.WindowsAzure.Storage.Blob.Protocol
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Metadata*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Metadata
  isExternal: false
  name: Metadata
  nameWithType: BlobContainerEntry.Metadata
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Metadata
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Properties*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Properties
  isExternal: false
  name: Properties
  nameWithType: BlobContainerEntry.Properties
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Properties
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobContainerProperties
  nameWithType: BlobContainerProperties
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobContainerProperties
- uid: Microsoft.WindowsAzure.Storage.Blob
  commentId: N:Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob
  nameWithType: Microsoft.WindowsAzure.Storage.Blob
  fullName: Microsoft.WindowsAzure.Storage.Blob
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Name*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Name
  isExternal: false
  name: Name
  nameWithType: BlobContainerEntry.Name
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Uri*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Uri
  isExternal: false
  name: Uri
  nameWithType: BlobContainerEntry.Uri
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobContainerEntry.Uri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
