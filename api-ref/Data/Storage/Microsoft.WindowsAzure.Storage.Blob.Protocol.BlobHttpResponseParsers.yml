### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers
  id: BlobHttpResponseParsers
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol
  children:
  - Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetCopyAttributes(System.Net.HttpWebResponse)
  - Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseDuration(System.Net.HttpWebResponse)
  - Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseId(System.Net.HttpWebResponse)
  - Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseState(System.Net.HttpWebResponse)
  - Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseStatus(System.Net.HttpWebResponse)
  - Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetMetadata(System.Net.HttpWebResponse)
  - Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetProperties(System.Net.HttpWebResponse)
  - Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetRemainingLeaseTime(System.Net.HttpWebResponse)
  - Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetRequestId(System.Net.HttpWebResponse)
  - Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetServerEncrypted(System.String)
  - Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetSnapshotTime(System.Net.HttpWebResponse)
  - Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.ReadServiceProperties(System.IO.Stream)
  - Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.ReadServiceStats(System.IO.Stream)
  langs:
  - csharp
  - vb
  name: BlobHttpResponseParsers
  nameWithType: BlobHttpResponseParsers
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers
  type: Class
  source:
    remote:
      path: Lib/Common/Blob/Protocol/BlobHttpResponseParsers.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BlobHttpResponseParsers
    path: Lib/Common/Blob/Protocol/BlobHttpResponseParsers.Common.cs
    startLine: 31
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\nProvides a set of methods for parsing a response containing blob data from the Blob service.\n"
  example: []
  syntax:
    content: public static class BlobHttpResponseParsers
    content.vb: Public Module BlobHttpResponseParsers
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetRequestId(System.Net.HttpWebResponse)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetRequestId(System.Net.HttpWebResponse)
  id: GetRequestId(System.Net.HttpWebResponse)
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers
  langs:
  - csharp
  - vb
  name: GetRequestId(HttpWebResponse)
  nameWithType: BlobHttpResponseParsers.GetRequestId(HttpWebResponse)
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetRequestId(System.Net.HttpWebResponse)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/Protocol/BlobHttpResponseParsers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetRequestId
    path: Lib/ClassLibraryCommon/Blob/Protocol/BlobHttpResponseParsers.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\nGets the request ID from the response.\n"
  example: []
  syntax:
    content: public static string GetRequestId(HttpWebResponse response)
    content.vb: Public Shared Function GetRequestId(response As HttpWebResponse) As String
    parameters:
    - id: response
      type: System.Net.HttpWebResponse
      description: The web response.
    return:
      type: System.String
      description: A unique value associated with the request.
  overload: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetRequestId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetProperties(System.Net.HttpWebResponse)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetProperties(System.Net.HttpWebResponse)
  id: GetProperties(System.Net.HttpWebResponse)
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers
  langs:
  - csharp
  - vb
  name: GetProperties(HttpWebResponse)
  nameWithType: BlobHttpResponseParsers.GetProperties(HttpWebResponse)
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetProperties(System.Net.HttpWebResponse)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/Protocol/BlobHttpResponseParsers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetProperties
    path: Lib/ClassLibraryCommon/Blob/Protocol/BlobHttpResponseParsers.cs
    startLine: 49
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\nGets the blob's properties from the response.\n"
  example: []
  syntax:
    content: public static BlobProperties GetProperties(HttpWebResponse response)
    content.vb: Public Shared Function GetProperties(response As HttpWebResponse) As BlobProperties
    parameters:
    - id: response
      type: System.Net.HttpWebResponse
      description: The web response.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
      description: The blob's properties.
  overload: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetProperties*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseStatus(System.Net.HttpWebResponse)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseStatus(System.Net.HttpWebResponse)
  id: GetLeaseStatus(System.Net.HttpWebResponse)
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers
  langs:
  - csharp
  - vb
  name: GetLeaseStatus(HttpWebResponse)
  nameWithType: BlobHttpResponseParsers.GetLeaseStatus(HttpWebResponse)
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseStatus(System.Net.HttpWebResponse)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/Protocol/BlobHttpResponseParsers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetLeaseStatus
    path: Lib/ClassLibraryCommon/Blob/Protocol/BlobHttpResponseParsers.cs
    startLine: 132
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\nExtracts the lease status from a web response.\n"
  remarks: If the appropriate header is not present, a status of <xref href="Microsoft.WindowsAzure.Storage.Blob.LeaseStatus.Unspecified" data-throw-if-not-resolved="false"></xref> is returned.
  example: []
  syntax:
    content: public static LeaseStatus GetLeaseStatus(HttpWebResponse response)
    content.vb: Public Shared Function GetLeaseStatus(response As HttpWebResponse) As LeaseStatus
    parameters:
    - id: response
      type: System.Net.HttpWebResponse
      description: The web response.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.LeaseStatus
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.LeaseStatus" data-throw-if-not-resolved="false"></xref> enumeration from the web response.
  overload: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseStatus*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The header contains an unrecognized value.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseState(System.Net.HttpWebResponse)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseState(System.Net.HttpWebResponse)
  id: GetLeaseState(System.Net.HttpWebResponse)
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers
  langs:
  - csharp
  - vb
  name: GetLeaseState(HttpWebResponse)
  nameWithType: BlobHttpResponseParsers.GetLeaseState(HttpWebResponse)
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseState(System.Net.HttpWebResponse)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/Protocol/BlobHttpResponseParsers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetLeaseState
    path: Lib/ClassLibraryCommon/Blob/Protocol/BlobHttpResponseParsers.cs
    startLine: 147
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\nExtracts the lease state from a web response.\n"
  remarks: If the appropriate header is not present, a status of <xref href="Microsoft.WindowsAzure.Storage.Blob.LeaseState.Unspecified" data-throw-if-not-resolved="false"></xref> is returned.
  example: []
  syntax:
    content: public static LeaseState GetLeaseState(HttpWebResponse response)
    content.vb: Public Shared Function GetLeaseState(response As HttpWebResponse) As LeaseState
    parameters:
    - id: response
      type: System.Net.HttpWebResponse
      description: The web response.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.LeaseState
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.LeaseState" data-throw-if-not-resolved="false"></xref> enumeration from the web response.
  overload: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The header contains an unrecognized value.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseDuration(System.Net.HttpWebResponse)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseDuration(System.Net.HttpWebResponse)
  id: GetLeaseDuration(System.Net.HttpWebResponse)
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers
  langs:
  - csharp
  - vb
  name: GetLeaseDuration(HttpWebResponse)
  nameWithType: BlobHttpResponseParsers.GetLeaseDuration(HttpWebResponse)
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseDuration(System.Net.HttpWebResponse)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/Protocol/BlobHttpResponseParsers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetLeaseDuration
    path: Lib/ClassLibraryCommon/Blob/Protocol/BlobHttpResponseParsers.cs
    startLine: 162
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\nExtracts the lease duration from a web response.\n"
  remarks: If the appropriate header is not present, a status of <xref href="Microsoft.WindowsAzure.Storage.Blob.LeaseDuration.Unspecified" data-throw-if-not-resolved="false"></xref> is returned.
  example: []
  syntax:
    content: public static LeaseDuration GetLeaseDuration(HttpWebResponse response)
    content.vb: Public Shared Function GetLeaseDuration(response As HttpWebResponse) As LeaseDuration
    parameters:
    - id: response
      type: System.Net.HttpWebResponse
      description: The web response.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.LeaseDuration
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.LeaseDuration" data-throw-if-not-resolved="false"></xref> enumeration from the web response.
  overload: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseDuration*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The header contains an unrecognized value.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseId(System.Net.HttpWebResponse)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseId(System.Net.HttpWebResponse)
  id: GetLeaseId(System.Net.HttpWebResponse)
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers
  langs:
  - csharp
  - vb
  name: GetLeaseId(HttpWebResponse)
  nameWithType: BlobHttpResponseParsers.GetLeaseId(HttpWebResponse)
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseId(System.Net.HttpWebResponse)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/Protocol/BlobHttpResponseParsers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetLeaseId
    path: Lib/ClassLibraryCommon/Blob/Protocol/BlobHttpResponseParsers.cs
    startLine: 175
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\nExtracts the lease ID header from a web response.\n"
  example: []
  syntax:
    content: public static string GetLeaseId(HttpWebResponse response)
    content.vb: Public Shared Function GetLeaseId(response As HttpWebResponse) As String
    parameters:
    - id: response
      type: System.Net.HttpWebResponse
      description: The web response.
    return:
      type: System.String
      description: The lease ID.
  overload: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetRemainingLeaseTime(System.Net.HttpWebResponse)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetRemainingLeaseTime(System.Net.HttpWebResponse)
  id: GetRemainingLeaseTime(System.Net.HttpWebResponse)
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers
  langs:
  - csharp
  - vb
  name: GetRemainingLeaseTime(HttpWebResponse)
  nameWithType: BlobHttpResponseParsers.GetRemainingLeaseTime(HttpWebResponse)
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetRemainingLeaseTime(System.Net.HttpWebResponse)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/Protocol/BlobHttpResponseParsers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetRemainingLeaseTime
    path: Lib/ClassLibraryCommon/Blob/Protocol/BlobHttpResponseParsers.cs
    startLine: 187
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\nExtracts the remaining lease time from a web response.\n"
  example: []
  syntax:
    content: public static int ? GetRemainingLeaseTime(HttpWebResponse response)
    content.vb: Public Shared Function GetRemainingLeaseTime(response As HttpWebResponse) As Integer?
    parameters:
    - id: response
      type: System.Net.HttpWebResponse
      description: The web response.
    return:
      type: System.Nullable{System.Int32}
      description: The remaining lease time, in seconds.
  overload: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetRemainingLeaseTime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetMetadata(System.Net.HttpWebResponse)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetMetadata(System.Net.HttpWebResponse)
  id: GetMetadata(System.Net.HttpWebResponse)
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers
  langs:
  - csharp
  - vb
  name: GetMetadata(HttpWebResponse)
  nameWithType: BlobHttpResponseParsers.GetMetadata(HttpWebResponse)
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetMetadata(System.Net.HttpWebResponse)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/Protocol/BlobHttpResponseParsers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetMetadata
    path: Lib/ClassLibraryCommon/Blob/Protocol/BlobHttpResponseParsers.cs
    startLine: 207
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\nGets the user-defined metadata.\n"
  example: []
  syntax:
    content: public static IDictionary<string, string> GetMetadata(HttpWebResponse response)
    content.vb: Public Shared Function GetMetadata(response As HttpWebResponse) As IDictionary(Of String, String)
    parameters:
    - id: response
      type: System.Net.HttpWebResponse
      description: The response from server.
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: A <xref href="System.Collections.IDictionary" data-throw-if-not-resolved="false"></xref> of the metadata.
  overload: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetMetadata*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetCopyAttributes(System.Net.HttpWebResponse)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetCopyAttributes(System.Net.HttpWebResponse)
  id: GetCopyAttributes(System.Net.HttpWebResponse)
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers
  langs:
  - csharp
  - vb
  name: GetCopyAttributes(HttpWebResponse)
  nameWithType: BlobHttpResponseParsers.GetCopyAttributes(HttpWebResponse)
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetCopyAttributes(System.Net.HttpWebResponse)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/Protocol/BlobHttpResponseParsers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetCopyAttributes
    path: Lib/ClassLibraryCommon/Blob/Protocol/BlobHttpResponseParsers.cs
    startLine: 217
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\nExtracts a <xref href=\"Microsoft.WindowsAzure.Storage.Blob.CopyState\" data-throw-if-not-resolved=\"false\"></xref> object from the headers of a web response.\n"
  example: []
  syntax:
    content: public static CopyState GetCopyAttributes(HttpWebResponse response)
    content.vb: Public Shared Function GetCopyAttributes(response As HttpWebResponse) As CopyState
    parameters:
    - id: response
      type: System.Net.HttpWebResponse
      description: The HTTP web response.
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CopyState
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CopyState" data-throw-if-not-resolved="false"></xref> object, or <code>null</code> if the web response does not include copy state.
  overload: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetCopyAttributes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetSnapshotTime(System.Net.HttpWebResponse)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetSnapshotTime(System.Net.HttpWebResponse)
  id: GetSnapshotTime(System.Net.HttpWebResponse)
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers
  langs:
  - csharp
  - vb
  name: GetSnapshotTime(HttpWebResponse)
  nameWithType: BlobHttpResponseParsers.GetSnapshotTime(HttpWebResponse)
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetSnapshotTime(System.Net.HttpWebResponse)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Blob/Protocol/BlobHttpResponseParsers.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetSnapshotTime
    path: Lib/ClassLibraryCommon/Blob/Protocol/BlobHttpResponseParsers.cs
    startLine: 243
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\nGets the snapshot timestamp from the response.\n"
  example: []
  syntax:
    content: public static string GetSnapshotTime(HttpWebResponse response)
    content.vb: Public Shared Function GetSnapshotTime(response As HttpWebResponse) As String
    parameters:
    - id: response
      type: System.Net.HttpWebResponse
      description: The web response.
    return:
      type: System.String
      description: The snapshot timestamp.
  overload: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetSnapshotTime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.ReadServiceProperties(System.IO.Stream)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.ReadServiceProperties(System.IO.Stream)
  id: ReadServiceProperties(System.IO.Stream)
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers
  langs:
  - csharp
  - vb
  name: ReadServiceProperties(Stream)
  nameWithType: BlobHttpResponseParsers.ReadServiceProperties(Stream)
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.ReadServiceProperties(System.IO.Stream)
  type: Method
  source:
    remote:
      path: Lib/Common/Blob/Protocol/BlobHttpResponseParsers.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ReadServiceProperties
    path: Lib/Common/Blob/Protocol/BlobHttpResponseParsers.Common.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\nReads service properties from a stream.\n"
  example: []
  syntax:
    content: public static ServiceProperties ReadServiceProperties(Stream inputStream)
    content.vb: Public Shared Function ReadServiceProperties(inputStream As Stream) As ServiceProperties
    parameters:
    - id: inputStream
      type: System.IO.Stream
      description: The stream from which to read the service properties.
    return:
      type: Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceProperties
      description: The service properties stored in the stream.
  overload: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.ReadServiceProperties*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.ReadServiceStats(System.IO.Stream)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.ReadServiceStats(System.IO.Stream)
  id: ReadServiceStats(System.IO.Stream)
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers
  langs:
  - csharp
  - vb
  name: ReadServiceStats(Stream)
  nameWithType: BlobHttpResponseParsers.ReadServiceStats(Stream)
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.ReadServiceStats(System.IO.Stream)
  type: Method
  source:
    remote:
      path: Lib/Common/Blob/Protocol/BlobHttpResponseParsers.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ReadServiceStats
    path: Lib/Common/Blob/Protocol/BlobHttpResponseParsers.Common.cs
    startLine: 50
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\nReads service stats from a stream.\n"
  example: []
  syntax:
    content: public static ServiceStats ReadServiceStats(Stream inputStream)
    content.vb: Public Shared Function ReadServiceStats(inputStream As Stream) As ServiceStats
    parameters:
    - id: inputStream
      type: System.IO.Stream
      description: The stream from which to read the service stats.
    return:
      type: Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceStats
      description: The service stats stored in the stream.
  overload: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.ReadServiceStats*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetServerEncrypted(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetServerEncrypted(System.String)
  id: GetServerEncrypted(System.String)
  parent: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers
  langs:
  - csharp
  - vb
  name: GetServerEncrypted(String)
  nameWithType: BlobHttpResponseParsers.GetServerEncrypted(String)
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetServerEncrypted(System.String)
  type: Method
  source:
    remote:
      path: Lib/Common/Blob/Protocol/BlobHttpResponseParsers.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetServerEncrypted
    path: Lib/Common/Blob/Protocol/BlobHttpResponseParsers.Common.cs
    startLine: 217
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Blob.Protocol
  summary: "\nDetermines if a blob is listed as server-side encypted.\n"
  example: []
  syntax:
    content: public static bool GetServerEncrypted(string encryptionHeader)
    content.vb: Public Shared Function GetServerEncrypted(encryptionHeader As String) As Boolean
    parameters:
    - id: encryptionHeader
      type: System.String
      description: String giving the status of server encryption.
    return:
      type: System.Boolean
      description: <code>true</code> if blob encrypted or <code>false</code> if not.
  overload: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetServerEncrypted*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol
  commentId: N:Microsoft.WindowsAzure.Storage.Blob.Protocol
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob.Protocol
  nameWithType: Microsoft.WindowsAzure.Storage.Blob.Protocol
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetRequestId*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetRequestId
  isExternal: false
  name: GetRequestId
  nameWithType: BlobHttpResponseParsers.GetRequestId
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetRequestId
- uid: System.Net.HttpWebResponse
  commentId: T:System.Net.HttpWebResponse
  parent: System.Net
  isExternal: true
  name: HttpWebResponse
  nameWithType: HttpWebResponse
  fullName: System.Net.HttpWebResponse
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net
  commentId: N:System.Net
  isExternal: false
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetProperties*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetProperties
  isExternal: false
  name: GetProperties
  nameWithType: BlobHttpResponseParsers.GetProperties
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetProperties
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.BlobProperties
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: BlobProperties
  nameWithType: BlobProperties
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobProperties
- uid: Microsoft.WindowsAzure.Storage.Blob
  commentId: N:Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob
  nameWithType: Microsoft.WindowsAzure.Storage.Blob
  fullName: Microsoft.WindowsAzure.Storage.Blob
- uid: Microsoft.WindowsAzure.Storage.Blob.LeaseStatus
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.LeaseStatus
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: LeaseStatus
  nameWithType: LeaseStatus
  fullName: Microsoft.WindowsAzure.Storage.Blob.LeaseStatus
- uid: Microsoft.WindowsAzure.Storage.Blob.LeaseStatus.Unspecified
  commentId: F:Microsoft.WindowsAzure.Storage.Blob.LeaseStatus.Unspecified
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseStatus*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseStatus
  isExternal: false
  name: GetLeaseStatus
  nameWithType: BlobHttpResponseParsers.GetLeaseStatus
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseStatus
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: Microsoft.WindowsAzure.Storage.Blob.LeaseState
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.LeaseState
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: LeaseState
  nameWithType: LeaseState
  fullName: Microsoft.WindowsAzure.Storage.Blob.LeaseState
- uid: Microsoft.WindowsAzure.Storage.Blob.LeaseState.Unspecified
  commentId: F:Microsoft.WindowsAzure.Storage.Blob.LeaseState.Unspecified
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseState*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseState
  isExternal: false
  name: GetLeaseState
  nameWithType: BlobHttpResponseParsers.GetLeaseState
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseState
- uid: Microsoft.WindowsAzure.Storage.Blob.LeaseDuration
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.LeaseDuration
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: LeaseDuration
  nameWithType: LeaseDuration
  fullName: Microsoft.WindowsAzure.Storage.Blob.LeaseDuration
- uid: Microsoft.WindowsAzure.Storage.Blob.LeaseDuration.Unspecified
  commentId: F:Microsoft.WindowsAzure.Storage.Blob.LeaseDuration.Unspecified
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseDuration*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseDuration
  isExternal: false
  name: GetLeaseDuration
  nameWithType: BlobHttpResponseParsers.GetLeaseDuration
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseDuration
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseId*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseId
  isExternal: false
  name: GetLeaseId
  nameWithType: BlobHttpResponseParsers.GetLeaseId
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetLeaseId
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetRemainingLeaseTime*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetRemainingLeaseTime
  isExternal: false
  name: GetRemainingLeaseTime
  nameWithType: BlobHttpResponseParsers.GetRemainingLeaseTime
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetRemainingLeaseTime
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IDictionary
  commentId: T:System.Collections.IDictionary
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetMetadata*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetMetadata
  isExternal: false
  name: GetMetadata
  nameWithType: BlobHttpResponseParsers.GetMetadata
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetMetadata
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.WindowsAzure.Storage.Blob.CopyState
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CopyState
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CopyState
  nameWithType: CopyState
  fullName: Microsoft.WindowsAzure.Storage.Blob.CopyState
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetCopyAttributes*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetCopyAttributes
  isExternal: false
  name: GetCopyAttributes
  nameWithType: BlobHttpResponseParsers.GetCopyAttributes
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetCopyAttributes
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetSnapshotTime*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetSnapshotTime
  isExternal: false
  name: GetSnapshotTime
  nameWithType: BlobHttpResponseParsers.GetSnapshotTime
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetSnapshotTime
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.ReadServiceProperties*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.ReadServiceProperties
  isExternal: false
  name: ReadServiceProperties
  nameWithType: BlobHttpResponseParsers.ReadServiceProperties
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.ReadServiceProperties
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceProperties
  commentId: T:Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceProperties
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol
  isExternal: false
  name: ServiceProperties
  nameWithType: ServiceProperties
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceProperties
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol
  commentId: N:Microsoft.WindowsAzure.Storage.Shared.Protocol
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Shared.Protocol
  nameWithType: Microsoft.WindowsAzure.Storage.Shared.Protocol
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.ReadServiceStats*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.ReadServiceStats
  isExternal: false
  name: ReadServiceStats
  nameWithType: BlobHttpResponseParsers.ReadServiceStats
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.ReadServiceStats
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceStats
  commentId: T:Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceStats
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol
  isExternal: false
  name: ServiceStats
  nameWithType: ServiceStats
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.ServiceStats
- uid: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetServerEncrypted*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetServerEncrypted
  isExternal: false
  name: GetServerEncrypted
  nameWithType: BlobHttpResponseParsers.GetServerEncrypted
  fullName: Microsoft.WindowsAzure.Storage.Blob.Protocol.BlobHttpResponseParsers.GetServerEncrypted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
