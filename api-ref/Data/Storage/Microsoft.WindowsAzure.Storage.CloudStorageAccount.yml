### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  commentId: T:Microsoft.WindowsAzure.Storage.CloudStorageAccount
  id: CloudStorageAccount
  parent: Microsoft.WindowsAzure.Storage
  children:
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.#ctor(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials,Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.StorageUri)
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.#ctor(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials,System.Boolean)
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.#ctor(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials,System.String,System.Boolean)
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.#ctor(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials,System.String,System.String,System.Boolean)
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.#ctor(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials,System.Uri,System.Uri,System.Uri,System.Uri)
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.BlobEndpoint
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.BlobStorageUri
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudAnalyticsClient
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudBlobClient
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudFileClient
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudQueueClient
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudTableClient
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.Credentials
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.DevelopmentStorageAccount
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.FileEndpoint
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.FileStorageUri
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.SharedAccessAccountPolicy)
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.Parse(System.String)
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.QueueEndpoint
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.QueueStorageUri
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.TableEndpoint
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.TableStorageUri
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.ToString
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.ToString(System.Boolean)
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.TryParse(System.String,Microsoft.WindowsAzure.Storage.CloudStorageAccount@)
  - Microsoft.WindowsAzure.Storage.CloudStorageAccount.UseV1MD5
  langs:
  - csharp
  - vb
  name: CloudStorageAccount
  nameWithType: CloudStorageAccount
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  type: Class
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CloudStorageAccount
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 41
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nRepresents a Microsoft Azure Storage account.\n"
  example: []
  syntax:
    content: public sealed class CloudStorageAccount
    content.vb: Public NotInheritable Class CloudStorageAccount
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.UseV1MD5
  commentId: P:Microsoft.WindowsAzure.Storage.CloudStorageAccount.UseV1MD5
  id: UseV1MD5
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: UseV1MD5
  nameWithType: CloudStorageAccount.UseV1MD5
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.UseV1MD5
  type: Property
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UseV1MD5
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 55
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets or sets a value indicating whether the FISMA MD5 setting will be used.\n"
  example: []
  syntax:
    content: public static bool UseV1MD5 { get; set; }
    content.vb: Public Shared Property UseV1MD5 As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: <code>false</code> to use the FISMA MD5 setting; <code>true</code> to use the .NET default implementation.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.UseV1MD5*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.#ctor(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials,System.Uri,System.Uri,System.Uri,System.Uri)
  commentId: M:Microsoft.WindowsAzure.Storage.CloudStorageAccount.#ctor(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials,System.Uri,System.Uri,System.Uri,System.Uri)
  id: '#ctor(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials,System.Uri,System.Uri,System.Uri,System.Uri)'
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: CloudStorageAccount(StorageCredentials, Uri, Uri, Uri, Uri)
  nameWithType: CloudStorageAccount.CloudStorageAccount(StorageCredentials, Uri, Uri, Uri, Uri)
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CloudStorageAccount(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials, System.Uri, System.Uri, System.Uri, System.Uri)
  type: Constructor
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 237
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.CloudStorageAccount\" data-throw-if-not-resolved=\"false\"></xref> class using the specified\ncredentials and service endpoints.\n"
  example: []
  syntax:
    content: public CloudStorageAccount(StorageCredentials storageCredentials, Uri blobEndpoint, Uri queueEndpoint, Uri tableEndpoint, Uri fileEndpoint)
    content.vb: Public Sub New(storageCredentials As StorageCredentials, blobEndpoint As Uri, queueEndpoint As Uri, tableEndpoint As Uri, fileEndpoint As Uri)
    parameters:
    - id: storageCredentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
    - id: blobEndpoint
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> specifying the primary Blob service endpoint.
    - id: queueEndpoint
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> specifying the primary Queue service endpoint.
    - id: tableEndpoint
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> specifying the primary Table service endpoint.
    - id: fileEndpoint
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> specifying the primary File service endpoint.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.#ctor(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials,Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.StorageUri)
  commentId: M:Microsoft.WindowsAzure.Storage.CloudStorageAccount.#ctor(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials,Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.StorageUri)
  id: '#ctor(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials,Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.StorageUri,Microsoft.WindowsAzure.Storage.StorageUri)'
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: CloudStorageAccount(StorageCredentials, StorageUri, StorageUri, StorageUri, StorageUri)
  nameWithType: CloudStorageAccount.CloudStorageAccount(StorageCredentials, StorageUri, StorageUri, StorageUri, StorageUri)
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CloudStorageAccount(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials, Microsoft.WindowsAzure.Storage.StorageUri, Microsoft.WindowsAzure.Storage.StorageUri, Microsoft.WindowsAzure.Storage.StorageUri, Microsoft.WindowsAzure.Storage.StorageUri)
  type: Constructor
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 260
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.CloudStorageAccount\" data-throw-if-not-resolved=\"false\"></xref> class using the specified\naccount credentials and service endpoints.\n"
  example: []
  syntax:
    content: public CloudStorageAccount(StorageCredentials storageCredentials, StorageUri blobStorageUri, StorageUri queueStorageUri, StorageUri tableStorageUri, StorageUri fileStorageUri)
    content.vb: Public Sub New(storageCredentials As StorageCredentials, blobStorageUri As StorageUri, queueStorageUri As StorageUri, tableStorageUri As StorageUri, fileStorageUri As StorageUri)
    parameters:
    - id: storageCredentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
    - id: blobStorageUri
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: A <xref href="Microsoft.WindowsAzure.Storage.StorageUri" data-throw-if-not-resolved="false"></xref> specifying the Blob service endpoint or endpoints.
    - id: queueStorageUri
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: A <xref href="Microsoft.WindowsAzure.Storage.StorageUri" data-throw-if-not-resolved="false"></xref> specifying the Queue service endpoint or endpoints.
    - id: tableStorageUri
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: A <xref href="Microsoft.WindowsAzure.Storage.StorageUri" data-throw-if-not-resolved="false"></xref> specifying the Table service endpoint or endpoints.
    - id: fileStorageUri
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: A <xref href="Microsoft.WindowsAzure.Storage.StorageUri" data-throw-if-not-resolved="false"></xref> specifying the File service endpoint or endpoints.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.#ctor(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials,System.Boolean)
  commentId: M:Microsoft.WindowsAzure.Storage.CloudStorageAccount.#ctor(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials,System.Boolean)
  id: '#ctor(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials,System.Boolean)'
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: CloudStorageAccount(StorageCredentials, Boolean)
  nameWithType: CloudStorageAccount.CloudStorageAccount(StorageCredentials, Boolean)
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CloudStorageAccount(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 278
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.CloudStorageAccount\" data-throw-if-not-resolved=\"false\"></xref> class using the specified\ncredentials, and specifies whether to use HTTP or HTTPS to connect to the storage services. \n"
  remarks: Using HTTPS to connect to the storage services is recommended.
  example: []
  syntax:
    content: public CloudStorageAccount(StorageCredentials storageCredentials, bool useHttps)
    content.vb: Public Sub New(storageCredentials As StorageCredentials, useHttps As Boolean)
    parameters:
    - id: storageCredentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
    - id: useHttps
      type: System.Boolean
      description: <code>true</code> to use HTTPS to connect to storage service endpoints; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.#ctor(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials,System.String,System.Boolean)
  commentId: M:Microsoft.WindowsAzure.Storage.CloudStorageAccount.#ctor(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials,System.String,System.Boolean)
  id: '#ctor(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials,System.String,System.Boolean)'
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: CloudStorageAccount(StorageCredentials, String, Boolean)
  nameWithType: CloudStorageAccount.CloudStorageAccount(StorageCredentials, String, Boolean)
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CloudStorageAccount(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials, System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 291
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.CloudStorageAccount\" data-throw-if-not-resolved=\"false\"></xref> class using the specified\ncredentials and endpoint suffix, and specifies whether to use HTTP or HTTPS to connect to the storage services.\n"
  remarks: Using HTTPS to connect to the storage services is recommended.
  example: []
  syntax:
    content: public CloudStorageAccount(StorageCredentials storageCredentials, string endpointSuffix, bool useHttps)
    content.vb: Public Sub New(storageCredentials As StorageCredentials, endpointSuffix As String, useHttps As Boolean)
    parameters:
    - id: storageCredentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
    - id: endpointSuffix
      type: System.String
      description: The DNS endpoint suffix for all storage services, e.g. "core.windows.net".
    - id: useHttps
      type: System.Boolean
      description: <code>true</code> to use HTTPS to connect to storage service endpoints; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.#ctor(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials,System.String,System.String,System.Boolean)
  commentId: M:Microsoft.WindowsAzure.Storage.CloudStorageAccount.#ctor(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials,System.String,System.String,System.Boolean)
  id: '#ctor(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials,System.String,System.String,System.Boolean)'
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: CloudStorageAccount(StorageCredentials, String, String, Boolean)
  nameWithType: CloudStorageAccount.CloudStorageAccount(StorageCredentials, String, String, Boolean)
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CloudStorageAccount(Microsoft.WindowsAzure.Storage.Auth.StorageCredentials, System.String, System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 305
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.CloudStorageAccount\" data-throw-if-not-resolved=\"false\"></xref> class using the specified\ncredentials and endpoint suffix, and specifies whether to use HTTP or HTTPS to connect to the storage services.\n"
  remarks: Using HTTPS to connect to the storage services is recommended.
  example: []
  syntax:
    content: public CloudStorageAccount(StorageCredentials storageCredentials, string accountName, string endpointSuffix, bool useHttps)
    content.vb: Public Sub New(storageCredentials As StorageCredentials, accountName As String, endpointSuffix As String, useHttps As Boolean)
    parameters:
    - id: storageCredentials
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
    - id: accountName
      type: System.String
      description: The name of the account.
    - id: endpointSuffix
      type: System.String
      description: The DNS endpoint suffix for all storage services, e.g. "core.windows.net".
    - id: useHttps
      type: System.Boolean
      description: <code>true</code> to use HTTPS to connect to storage service endpoints; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.DevelopmentStorageAccount
  commentId: P:Microsoft.WindowsAzure.Storage.CloudStorageAccount.DevelopmentStorageAccount
  id: DevelopmentStorageAccount
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: DevelopmentStorageAccount
  nameWithType: CloudStorageAccount.DevelopmentStorageAccount
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.DevelopmentStorageAccount
  type: Property
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DevelopmentStorageAccount
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 339
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets a <xref href=\"Microsoft.WindowsAzure.Storage.CloudStorageAccount\" data-throw-if-not-resolved=\"false\"></xref> object that references the well-known development storage account.\n"
  example: []
  syntax:
    content: public static CloudStorageAccount DevelopmentStorageAccount { get; }
    content.vb: Public Shared ReadOnly Property DevelopmentStorageAccount As CloudStorageAccount
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.CloudStorageAccount
      description: A <xref href="Microsoft.WindowsAzure.Storage.CloudStorageAccount" data-throw-if-not-resolved="false"></xref> object representing the development storage account.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.DevelopmentStorageAccount*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.BlobEndpoint
  commentId: P:Microsoft.WindowsAzure.Storage.CloudStorageAccount.BlobEndpoint
  id: BlobEndpoint
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: BlobEndpoint
  nameWithType: CloudStorageAccount.BlobEndpoint
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.BlobEndpoint
  type: Property
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BlobEndpoint
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 376
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets the primary endpoint for the Blob service, as configured for the storage account.\n"
  example: []
  syntax:
    content: public Uri BlobEndpoint { get; }
    content.vb: Public ReadOnly Property BlobEndpoint As Uri
    parameters: []
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> containing the primary Blob service endpoint.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.BlobEndpoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.QueueEndpoint
  commentId: P:Microsoft.WindowsAzure.Storage.CloudStorageAccount.QueueEndpoint
  id: QueueEndpoint
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: QueueEndpoint
  nameWithType: CloudStorageAccount.QueueEndpoint
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.QueueEndpoint
  type: Property
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: QueueEndpoint
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 393
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets the primary endpoint for the Queue service, as configured for the storage account.\n"
  example: []
  syntax:
    content: public Uri QueueEndpoint { get; }
    content.vb: Public ReadOnly Property QueueEndpoint As Uri
    parameters: []
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> containing the primary Queue service endpoint.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.QueueEndpoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.TableEndpoint
  commentId: P:Microsoft.WindowsAzure.Storage.CloudStorageAccount.TableEndpoint
  id: TableEndpoint
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: TableEndpoint
  nameWithType: CloudStorageAccount.TableEndpoint
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.TableEndpoint
  type: Property
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: TableEndpoint
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 410
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets the primary endpoint for the Table service, as configured for the storage account.\n"
  example: []
  syntax:
    content: public Uri TableEndpoint { get; }
    content.vb: Public ReadOnly Property TableEndpoint As Uri
    parameters: []
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> containing the primary Table service endpoint.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.TableEndpoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.FileEndpoint
  commentId: P:Microsoft.WindowsAzure.Storage.CloudStorageAccount.FileEndpoint
  id: FileEndpoint
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: FileEndpoint
  nameWithType: CloudStorageAccount.FileEndpoint
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.FileEndpoint
  type: Property
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: FileEndpoint
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 427
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets the primary endpoint for the File service, as configured for the storage account.\n"
  example: []
  syntax:
    content: public Uri FileEndpoint { get; }
    content.vb: Public ReadOnly Property FileEndpoint As Uri
    parameters: []
    return:
      type: System.Uri
      description: A <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> containing the primary File service endpoint.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.FileEndpoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.BlobStorageUri
  commentId: P:Microsoft.WindowsAzure.Storage.CloudStorageAccount.BlobStorageUri
  id: BlobStorageUri
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: BlobStorageUri
  nameWithType: CloudStorageAccount.BlobStorageUri
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.BlobStorageUri
  type: Property
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BlobStorageUri
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 444
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets the endpoints for the Blob service at the primary and secondary location, as configured for the storage account.\n"
  example: []
  syntax:
    content: public StorageUri BlobStorageUri { get; }
    content.vb: Public ReadOnly Property BlobStorageUri As StorageUri
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: A <xref href="Microsoft.WindowsAzure.Storage.StorageUri" data-throw-if-not-resolved="false"></xref> containing the Blob service endpoints.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.BlobStorageUri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.QueueStorageUri
  commentId: P:Microsoft.WindowsAzure.Storage.CloudStorageAccount.QueueStorageUri
  id: QueueStorageUri
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: QueueStorageUri
  nameWithType: CloudStorageAccount.QueueStorageUri
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.QueueStorageUri
  type: Property
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: QueueStorageUri
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 450
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets the endpoints for the Queue service at the primary and secondary location, as configured for the storage account.\n"
  example: []
  syntax:
    content: public StorageUri QueueStorageUri { get; }
    content.vb: Public ReadOnly Property QueueStorageUri As StorageUri
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: A <xref href="Microsoft.WindowsAzure.Storage.StorageUri" data-throw-if-not-resolved="false"></xref> containing the Queue service endpoints.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.QueueStorageUri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.TableStorageUri
  commentId: P:Microsoft.WindowsAzure.Storage.CloudStorageAccount.TableStorageUri
  id: TableStorageUri
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: TableStorageUri
  nameWithType: CloudStorageAccount.TableStorageUri
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.TableStorageUri
  type: Property
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: TableStorageUri
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 456
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets the endpoints for the Table service at the primary and secondary location, as configured for the storage account.\n"
  example: []
  syntax:
    content: public StorageUri TableStorageUri { get; }
    content.vb: Public ReadOnly Property TableStorageUri As StorageUri
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: A <xref href="Microsoft.WindowsAzure.Storage.StorageUri" data-throw-if-not-resolved="false"></xref> containing the Table service endpoints.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.TableStorageUri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.FileStorageUri
  commentId: P:Microsoft.WindowsAzure.Storage.CloudStorageAccount.FileStorageUri
  id: FileStorageUri
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: FileStorageUri
  nameWithType: CloudStorageAccount.FileStorageUri
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.FileStorageUri
  type: Property
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: FileStorageUri
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 462
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets the endpoints for the File service at the primary and secondary location, as configured for the storage account.\n"
  example: []
  syntax:
    content: public StorageUri FileStorageUri { get; }
    content.vb: Public ReadOnly Property FileStorageUri As StorageUri
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.StorageUri
      description: A <xref href="Microsoft.WindowsAzure.Storage.StorageUri" data-throw-if-not-resolved="false"></xref> containing the File service endpoints.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.FileStorageUri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.Credentials
  commentId: P:Microsoft.WindowsAzure.Storage.CloudStorageAccount.Credentials
  id: Credentials
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: Credentials
  nameWithType: CloudStorageAccount.Credentials
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.Credentials
  type: Property
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Credentials
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 468
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets the credentials used to create this <xref href=\"Microsoft.WindowsAzure.Storage.CloudStorageAccount\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public StorageCredentials Credentials { get; }
    content.vb: Public ReadOnly Property Credentials As StorageCredentials
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
      description: A <xref href="Microsoft.WindowsAzure.Storage.Auth.StorageCredentials" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.Credentials*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.Parse(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.CloudStorageAccount.Parse(System.String)
  id: Parse(System.String)
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: Parse(String)
  nameWithType: CloudStorageAccount.Parse(String)
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.Parse(System.String)
  type: Method
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Parse
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 479
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nParses a connection string and returns a <xref href=\"Microsoft.WindowsAzure.Storage.CloudStorageAccount\" data-throw-if-not-resolved=\"false\"></xref> created\nfrom the connection string.\n"
  example: []
  syntax:
    content: public static CloudStorageAccount Parse(string connectionString)
    content.vb: Public Shared Function Parse(connectionString As String) As CloudStorageAccount
    parameters:
    - id: connectionString
      type: System.String
      description: A valid connection string.
    return:
      type: Microsoft.WindowsAzure.Storage.CloudStorageAccount
      description: A <xref href="Microsoft.WindowsAzure.Storage.CloudStorageAccount" data-throw-if-not-resolved="false"></xref> object constructed from the values provided in the connection string.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.Parse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <em>connectionString</em> is null or empty.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: Thrown if <em>connectionString</em> is not a valid connection string.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <em>connectionString</em> cannot be parsed.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.TryParse(System.String,Microsoft.WindowsAzure.Storage.CloudStorageAccount@)
  commentId: M:Microsoft.WindowsAzure.Storage.CloudStorageAccount.TryParse(System.String,Microsoft.WindowsAzure.Storage.CloudStorageAccount@)
  id: TryParse(System.String,Microsoft.WindowsAzure.Storage.CloudStorageAccount@)
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: TryParse(String, out CloudStorageAccount)
  nameWithType: CloudStorageAccount.TryParse(String, out CloudStorageAccount)
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.TryParse(System.String, out Microsoft.WindowsAzure.Storage.CloudStorageAccount)
  type: Method
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: TryParse
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 503
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nIndicates whether a connection string can be parsed to return a <xref href=\"Microsoft.WindowsAzure.Storage.CloudStorageAccount\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public static bool TryParse(string connectionString, out CloudStorageAccount account)
    content.vb: Public Shared Function TryParse(connectionString As String, ByRef account As CloudStorageAccount) As Boolean
    parameters:
    - id: connectionString
      type: System.String
      description: The connection string to parse.
    - id: account
      type: Microsoft.WindowsAzure.Storage.CloudStorageAccount
      description: >-
        A <xref href="Microsoft.WindowsAzure.Storage.CloudStorageAccount" data-throw-if-not-resolved="false"></xref> object to hold the instance returned if

        the connection string can be parsed.
    return:
      type: System.Boolean
      description: <strong>true</strong> if the connection string was successfully parsed; otherwise, <strong>false</strong>.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.TryParse*
  nameWithType.vb: CloudStorageAccount.TryParse(String, ByRef CloudStorageAccount)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.CloudStorageAccount.TryParse(System.String, ByRef Microsoft.WindowsAzure.Storage.CloudStorageAccount)
  name.vb: TryParse(String, ByRef CloudStorageAccount)
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudTableClient
  commentId: M:Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudTableClient
  id: CreateCloudTableClient
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: CreateCloudTableClient()
  nameWithType: CloudStorageAccount.CreateCloudTableClient()
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudTableClient()
  type: Method
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateCloudTableClient
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 526
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nCreates the Table service client.\n"
  example: []
  syntax:
    content: public CloudTableClient CreateCloudTableClient()
    content.vb: Public Function CreateCloudTableClient As CloudTableClient
    return:
      type: Microsoft.WindowsAzure.Storage.Table.CloudTableClient
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.CloudTableClient" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudTableClient*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudQueueClient
  commentId: M:Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudQueueClient
  id: CreateCloudQueueClient
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: CreateCloudQueueClient()
  nameWithType: CloudStorageAccount.CreateCloudQueueClient()
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudQueueClient()
  type: Method
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateCloudQueueClient
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 545
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nCreates the Queue service client.\n"
  example: []
  syntax:
    content: public CloudQueueClient CreateCloudQueueClient()
    content.vb: Public Function CreateCloudQueueClient As CloudQueueClient
    return:
      type: Microsoft.WindowsAzure.Storage.Queue.CloudQueueClient
      description: A <xref href="Microsoft.WindowsAzure.Storage.Queue.CloudQueueClient" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudQueueClient*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudBlobClient
  commentId: M:Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudBlobClient
  id: CreateCloudBlobClient
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: CreateCloudBlobClient()
  nameWithType: CloudStorageAccount.CreateCloudBlobClient()
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudBlobClient()
  type: Method
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateCloudBlobClient
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 564
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nCreates the Blob service client.\n"
  example: []
  syntax:
    content: public CloudBlobClient CreateCloudBlobClient()
    content.vb: Public Function CreateCloudBlobClient As CloudBlobClient
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
      description: A <xref href="Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudBlobClient*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudAnalyticsClient
  commentId: M:Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudAnalyticsClient
  id: CreateCloudAnalyticsClient
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: CreateCloudAnalyticsClient()
  nameWithType: CloudStorageAccount.CreateCloudAnalyticsClient()
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudAnalyticsClient()
  type: Method
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateCloudAnalyticsClient
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 579
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nCreates an analytics client.\n"
  example: []
  syntax:
    content: public CloudAnalyticsClient CreateCloudAnalyticsClient()
    content.vb: Public Function CreateCloudAnalyticsClient As CloudAnalyticsClient
    return:
      type: Microsoft.WindowsAzure.Storage.Analytics.CloudAnalyticsClient
      description: A <xref href="Microsoft.WindowsAzure.Storage.Analytics.CloudAnalyticsClient" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudAnalyticsClient*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudFileClient
  commentId: M:Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudFileClient
  id: CreateCloudFileClient
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: CreateCloudFileClient()
  nameWithType: CloudStorageAccount.CreateCloudFileClient()
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudFileClient()
  type: Method
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateCloudFileClient
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 604
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nCreates the File service client.\n"
  example: []
  syntax:
    content: public CloudFileClient CreateCloudFileClient()
    content.vb: Public Function CreateCloudFileClient As CloudFileClient
    return:
      type: Microsoft.WindowsAzure.Storage.File.CloudFileClient
      description: A client object that specifies the File service endpoint.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudFileClient*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.SharedAccessAccountPolicy)
  commentId: M:Microsoft.WindowsAzure.Storage.CloudStorageAccount.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.SharedAccessAccountPolicy)
  id: GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.SharedAccessAccountPolicy)
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: GetSharedAccessSignature(SharedAccessAccountPolicy)
  nameWithType: CloudStorageAccount.GetSharedAccessSignature(SharedAccessAccountPolicy)
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.GetSharedAccessSignature(Microsoft.WindowsAzure.Storage.SharedAccessAccountPolicy)
  type: Method
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetSharedAccessSignature
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 625
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nReturns a shared access signature for the account.\n"
  remarks: The query string returned includes the leading question mark.
  example: []
  syntax:
    content: public string GetSharedAccessSignature(SharedAccessAccountPolicy policy)
    content.vb: Public Function GetSharedAccessSignature(policy As SharedAccessAccountPolicy) As String
    parameters:
    - id: policy
      type: Microsoft.WindowsAzure.Storage.SharedAccessAccountPolicy
      description: A <xref href="Microsoft.WindowsAzure.Storage.SharedAccessAccountPolicy" data-throw-if-not-resolved="false"></xref> object specifying the access policy for the shared access signature.
    return:
      type: System.String
      description: A shared access signature, as a URI query string.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.GetSharedAccessSignature*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.ToString
  commentId: M:Microsoft.WindowsAzure.Storage.CloudStorageAccount.ToString
  id: ToString
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CloudStorageAccount.ToString()
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.ToString()
  type: Method
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ToString
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 644
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nReturns a connection string for this storage account, without sensitive data.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A connection string.
  overridden: System.Object.ToString
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.ToString(System.Boolean)
  commentId: M:Microsoft.WindowsAzure.Storage.CloudStorageAccount.ToString(System.Boolean)
  id: ToString(System.Boolean)
  parent: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  langs:
  - csharp
  - vb
  name: ToString(Boolean)
  nameWithType: CloudStorageAccount.ToString(Boolean)
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.ToString(System.Boolean)
  type: Method
  source:
    remote:
      path: Lib/Common/CloudStorageAccount.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ToString
    path: Lib/Common/CloudStorageAccount.cs
    startLine: 654
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nReturns a connection string for the storage account, optionally with sensitive data.\n"
  example: []
  syntax:
    content: public string ToString(bool exportSecrets)
    content.vb: Public Function ToString(exportSecrets As Boolean) As String
    parameters:
    - id: exportSecrets
      type: System.Boolean
      description: <code>True</code> to include sensitive data in the string; otherwise, <code>false</code>.
    return:
      type: System.String
      description: A connection string.
  overload: Microsoft.WindowsAzure.Storage.CloudStorageAccount.ToString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage
  commentId: N:Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  nameWithType: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.UseV1MD5*
  commentId: Overload:Microsoft.WindowsAzure.Storage.CloudStorageAccount.UseV1MD5
  isExternal: false
  name: UseV1MD5
  nameWithType: CloudStorageAccount.UseV1MD5
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.UseV1MD5
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount
  commentId: T:Microsoft.WindowsAzure.Storage.CloudStorageAccount
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: CloudStorageAccount
  nameWithType: CloudStorageAccount
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount
- uid: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
  commentId: T:Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
  parent: Microsoft.WindowsAzure.Storage.Auth
  isExternal: false
  name: StorageCredentials
  nameWithType: StorageCredentials
  fullName: Microsoft.WindowsAzure.Storage.Auth.StorageCredentials
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.CloudStorageAccount.#ctor
  isExternal: false
  name: CloudStorageAccount
  nameWithType: CloudStorageAccount.CloudStorageAccount
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CloudStorageAccount
- uid: Microsoft.WindowsAzure.Storage.Auth
  commentId: N:Microsoft.WindowsAzure.Storage.Auth
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Auth
  nameWithType: Microsoft.WindowsAzure.Storage.Auth
  fullName: Microsoft.WindowsAzure.Storage.Auth
- uid: Microsoft.WindowsAzure.Storage.StorageUri
  commentId: T:Microsoft.WindowsAzure.Storage.StorageUri
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: StorageUri
  nameWithType: StorageUri
  fullName: Microsoft.WindowsAzure.Storage.StorageUri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.DevelopmentStorageAccount*
  commentId: Overload:Microsoft.WindowsAzure.Storage.CloudStorageAccount.DevelopmentStorageAccount
  isExternal: false
  name: DevelopmentStorageAccount
  nameWithType: CloudStorageAccount.DevelopmentStorageAccount
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.DevelopmentStorageAccount
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.BlobEndpoint*
  commentId: Overload:Microsoft.WindowsAzure.Storage.CloudStorageAccount.BlobEndpoint
  isExternal: false
  name: BlobEndpoint
  nameWithType: CloudStorageAccount.BlobEndpoint
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.BlobEndpoint
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.QueueEndpoint*
  commentId: Overload:Microsoft.WindowsAzure.Storage.CloudStorageAccount.QueueEndpoint
  isExternal: false
  name: QueueEndpoint
  nameWithType: CloudStorageAccount.QueueEndpoint
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.QueueEndpoint
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.TableEndpoint*
  commentId: Overload:Microsoft.WindowsAzure.Storage.CloudStorageAccount.TableEndpoint
  isExternal: false
  name: TableEndpoint
  nameWithType: CloudStorageAccount.TableEndpoint
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.TableEndpoint
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.FileEndpoint*
  commentId: Overload:Microsoft.WindowsAzure.Storage.CloudStorageAccount.FileEndpoint
  isExternal: false
  name: FileEndpoint
  nameWithType: CloudStorageAccount.FileEndpoint
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.FileEndpoint
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.BlobStorageUri*
  commentId: Overload:Microsoft.WindowsAzure.Storage.CloudStorageAccount.BlobStorageUri
  isExternal: false
  name: BlobStorageUri
  nameWithType: CloudStorageAccount.BlobStorageUri
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.BlobStorageUri
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.QueueStorageUri*
  commentId: Overload:Microsoft.WindowsAzure.Storage.CloudStorageAccount.QueueStorageUri
  isExternal: false
  name: QueueStorageUri
  nameWithType: CloudStorageAccount.QueueStorageUri
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.QueueStorageUri
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.TableStorageUri*
  commentId: Overload:Microsoft.WindowsAzure.Storage.CloudStorageAccount.TableStorageUri
  isExternal: false
  name: TableStorageUri
  nameWithType: CloudStorageAccount.TableStorageUri
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.TableStorageUri
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.FileStorageUri*
  commentId: Overload:Microsoft.WindowsAzure.Storage.CloudStorageAccount.FileStorageUri
  isExternal: false
  name: FileStorageUri
  nameWithType: CloudStorageAccount.FileStorageUri
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.FileStorageUri
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.Credentials*
  commentId: Overload:Microsoft.WindowsAzure.Storage.CloudStorageAccount.Credentials
  isExternal: false
  name: Credentials
  nameWithType: CloudStorageAccount.Credentials
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.Credentials
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.Parse*
  commentId: Overload:Microsoft.WindowsAzure.Storage.CloudStorageAccount.Parse
  isExternal: false
  name: Parse
  nameWithType: CloudStorageAccount.Parse
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.Parse
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
- uid: System.FormatException
  commentId: T:System.FormatException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.TryParse*
  commentId: Overload:Microsoft.WindowsAzure.Storage.CloudStorageAccount.TryParse
  isExternal: false
  name: TryParse
  nameWithType: CloudStorageAccount.TryParse
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.TryParse
- uid: Microsoft.WindowsAzure.Storage.Table.CloudTableClient
  commentId: T:Microsoft.WindowsAzure.Storage.Table.CloudTableClient
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: CloudTableClient
  nameWithType: CloudTableClient
  fullName: Microsoft.WindowsAzure.Storage.Table.CloudTableClient
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudTableClient*
  commentId: Overload:Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudTableClient
  isExternal: false
  name: CreateCloudTableClient
  nameWithType: CloudStorageAccount.CreateCloudTableClient
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudTableClient
- uid: Microsoft.WindowsAzure.Storage.Table
  commentId: N:Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table
  nameWithType: Microsoft.WindowsAzure.Storage.Table
  fullName: Microsoft.WindowsAzure.Storage.Table
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueClient
  commentId: T:Microsoft.WindowsAzure.Storage.Queue.CloudQueueClient
  parent: Microsoft.WindowsAzure.Storage.Queue
  isExternal: false
  name: CloudQueueClient
  nameWithType: CloudQueueClient
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueClient
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudQueueClient*
  commentId: Overload:Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudQueueClient
  isExternal: false
  name: CreateCloudQueueClient
  nameWithType: CloudStorageAccount.CreateCloudQueueClient
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudQueueClient
- uid: Microsoft.WindowsAzure.Storage.Queue
  commentId: N:Microsoft.WindowsAzure.Storage.Queue
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Queue
  nameWithType: Microsoft.WindowsAzure.Storage.Queue
  fullName: Microsoft.WindowsAzure.Storage.Queue
- uid: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: CloudBlobClient
  nameWithType: CloudBlobClient
  fullName: Microsoft.WindowsAzure.Storage.Blob.CloudBlobClient
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudBlobClient*
  commentId: Overload:Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudBlobClient
  isExternal: false
  name: CreateCloudBlobClient
  nameWithType: CloudStorageAccount.CreateCloudBlobClient
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudBlobClient
- uid: Microsoft.WindowsAzure.Storage.Blob
  commentId: N:Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob
  nameWithType: Microsoft.WindowsAzure.Storage.Blob
  fullName: Microsoft.WindowsAzure.Storage.Blob
- uid: Microsoft.WindowsAzure.Storage.Analytics.CloudAnalyticsClient
  commentId: T:Microsoft.WindowsAzure.Storage.Analytics.CloudAnalyticsClient
  parent: Microsoft.WindowsAzure.Storage.Analytics
  isExternal: false
  name: CloudAnalyticsClient
  nameWithType: CloudAnalyticsClient
  fullName: Microsoft.WindowsAzure.Storage.Analytics.CloudAnalyticsClient
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudAnalyticsClient*
  commentId: Overload:Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudAnalyticsClient
  isExternal: false
  name: CreateCloudAnalyticsClient
  nameWithType: CloudStorageAccount.CreateCloudAnalyticsClient
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudAnalyticsClient
- uid: Microsoft.WindowsAzure.Storage.Analytics
  commentId: N:Microsoft.WindowsAzure.Storage.Analytics
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Analytics
  nameWithType: Microsoft.WindowsAzure.Storage.Analytics
  fullName: Microsoft.WindowsAzure.Storage.Analytics
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudFileClient*
  commentId: Overload:Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudFileClient
  isExternal: false
  name: CreateCloudFileClient
  nameWithType: CloudStorageAccount.CreateCloudFileClient
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.CreateCloudFileClient
- uid: Microsoft.WindowsAzure.Storage.File.CloudFileClient
  commentId: T:Microsoft.WindowsAzure.Storage.File.CloudFileClient
  parent: Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: CloudFileClient
  nameWithType: CloudFileClient
  fullName: Microsoft.WindowsAzure.Storage.File.CloudFileClient
- uid: Microsoft.WindowsAzure.Storage.File
  commentId: N:Microsoft.WindowsAzure.Storage.File
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.File
  nameWithType: Microsoft.WindowsAzure.Storage.File
  fullName: Microsoft.WindowsAzure.Storage.File
- uid: Microsoft.WindowsAzure.Storage.SharedAccessAccountPolicy
  commentId: T:Microsoft.WindowsAzure.Storage.SharedAccessAccountPolicy
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: SharedAccessAccountPolicy
  nameWithType: SharedAccessAccountPolicy
  fullName: Microsoft.WindowsAzure.Storage.SharedAccessAccountPolicy
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.GetSharedAccessSignature*
  commentId: Overload:Microsoft.WindowsAzure.Storage.CloudStorageAccount.GetSharedAccessSignature
  isExternal: false
  name: GetSharedAccessSignature
  nameWithType: CloudStorageAccount.GetSharedAccessSignature
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.GetSharedAccessSignature
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.CloudStorageAccount.ToString*
  commentId: Overload:Microsoft.WindowsAzure.Storage.CloudStorageAccount.ToString
  isExternal: false
  name: ToString
  nameWithType: CloudStorageAccount.ToString
  fullName: Microsoft.WindowsAzure.Storage.CloudStorageAccount.ToString
