### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  commentId: T:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  id: MultiBufferMemoryStream
  parent: Microsoft.WindowsAzure.Storage.Core
  children:
  - Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.#ctor(Microsoft.WindowsAzure.Storage.IBufferManager,System.Int32)
  - Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginFastCopyTo(System.IO.Stream,System.Nullable{System.DateTime},System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.CanRead
  - Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.CanSeek
  - Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.CanWrite
  - Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.ComputeMD5Hash
  - Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Dispose(System.Boolean)
  - Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.EndFastCopyTo(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.EndRead(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.EndWrite(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.FastCopyTo(System.IO.Stream,System.Nullable{System.DateTime})
  - Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Flush
  - Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Length
  - Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Position
  - Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Read(System.Byte[],System.Int32,System.Int32)
  - Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
  - Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.SetLength(System.Int64)
  - Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Write(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: MultiBufferMemoryStream
  nameWithType: MultiBufferMemoryStream
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  type: Class
  source:
    remote:
      path: Lib/Common/Core/MultiBufferMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: MultiBufferMemoryStream
    path: Lib/Common/Core/MultiBufferMemoryStream.cs
    startLine: 34
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nCreates a multi-buffer stream whose backing store is memory.\n"
  example: []
  syntax:
    content: 'public class MultiBufferMemoryStream : Stream, IDisposable'
    content.vb: >-
      Public Class MultiBufferMemoryStream
          Inherits Stream
          Implements IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.IO.Stream
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.IO.Stream.Null
  - System.IO.Stream.CopyTo(System.IO.Stream)
  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  - System.IO.Stream.Close
  - System.IO.Stream.Dispose
  - System.IO.Stream.CreateWaitHandle
  - System.IO.Stream.ReadByte
  - System.IO.Stream.WriteByte(System.Byte)
  - System.IO.Stream.Synchronized(System.IO.Stream)
  - System.IO.Stream.ObjectInvariant
  - System.IO.Stream.CanTimeout
  - System.IO.Stream.ReadTimeout
  - System.IO.Stream.WriteTimeout
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.#ctor(Microsoft.WindowsAzure.Storage.IBufferManager,System.Int32)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.#ctor(Microsoft.WindowsAzure.Storage.IBufferManager,System.Int32)
  id: '#ctor(Microsoft.WindowsAzure.Storage.IBufferManager,System.Int32)'
  parent: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  langs:
  - csharp
  - vb
  name: MultiBufferMemoryStream(IBufferManager, Int32)
  nameWithType: MultiBufferMemoryStream.MultiBufferMemoryStream(IBufferManager, Int32)
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.MultiBufferMemoryStream(Microsoft.WindowsAzure.Storage.IBufferManager, System.Int32)
  type: Constructor
  source:
    remote:
      path: Lib/Common/Core/MultiBufferMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Core/MultiBufferMemoryStream.cs
    startLine: 83
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream\" data-throw-if-not-resolved=\"false\"></xref> class with the specified buffer manager.\n"
  example: []
  syntax:
    content: public MultiBufferMemoryStream(IBufferManager bufferManager, int bufferSize = 65536)
    content.vb: Public Sub New(bufferManager As IBufferManager, bufferSize As Integer = 65536)
    parameters:
    - id: bufferManager
      type: Microsoft.WindowsAzure.Storage.IBufferManager
      description: The <xref href="Microsoft.WindowsAzure.Storage.IBufferManager" data-throw-if-not-resolved="false"></xref> to use to acquire and return buffers for the stream. May be <code>null</code>.
    - id: bufferSize
      type: System.Int32
      description: The buffer size to use for each block. The default size is 64 KB. Note that this parameter is disregarded when an <xref href="Microsoft.WindowsAzure.Storage.IBufferManager" data-throw-if-not-resolved="false"></xref> is specified.
  overload: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.CanRead
  commentId: P:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.CanRead
  id: CanRead
  parent: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  langs:
  - csharp
  - vb
  name: CanRead
  nameWithType: MultiBufferMemoryStream.CanRead
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.CanRead
  type: Property
  source:
    remote:
      path: Lib/Common/Core/MultiBufferMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CanRead
    path: Lib/Common/Core/MultiBufferMemoryStream.cs
    startLine: 100
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nGets a value indicating whether the current stream supports reading.\n"
  example: []
  syntax:
    content: public override bool CanRead { get; }
    content.vb: Public Overrides ReadOnly Property CanRead As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if the stream supports reading; otherwise, <code>false</code>.
  overridden: System.IO.Stream.CanRead
  overload: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.CanRead*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.CanSeek
  commentId: P:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.CanSeek
  id: CanSeek
  parent: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  langs:
  - csharp
  - vb
  name: CanSeek
  nameWithType: MultiBufferMemoryStream.CanSeek
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.CanSeek
  type: Property
  source:
    remote:
      path: Lib/Common/Core/MultiBufferMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CanSeek
    path: Lib/Common/Core/MultiBufferMemoryStream.cs
    startLine: 112
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nGets a value indicating whether the current stream supports seeking.\n"
  example: []
  syntax:
    content: public override bool CanSeek { get; }
    content.vb: Public Overrides ReadOnly Property CanSeek As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if the stream supports seeking; otherwise, <code>false</code>.
  overridden: System.IO.Stream.CanSeek
  overload: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.CanSeek*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.CanWrite
  commentId: P:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.CanWrite
  id: CanWrite
  parent: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  langs:
  - csharp
  - vb
  name: CanWrite
  nameWithType: MultiBufferMemoryStream.CanWrite
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.CanWrite
  type: Property
  source:
    remote:
      path: Lib/Common/Core/MultiBufferMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CanWrite
    path: Lib/Common/Core/MultiBufferMemoryStream.cs
    startLine: 124
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nGets a value indicating whether the current stream supports writing.\n"
  example: []
  syntax:
    content: public override bool CanWrite { get; }
    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if the stream supports writing; otherwise, <code>false</code>.
  overridden: System.IO.Stream.CanWrite
  overload: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.CanWrite*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Length
  commentId: P:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Length
  id: Length
  parent: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: MultiBufferMemoryStream.Length
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Length
  type: Property
  source:
    remote:
      path: Lib/Common/Core/MultiBufferMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Length
    path: Lib/Common/Core/MultiBufferMemoryStream.cs
    startLine: 136
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nGets the length in bytes of the stream.\n"
  example: []
  syntax:
    content: public override long Length { get; }
    content.vb: Public Overrides ReadOnly Property Length As Long
    parameters: []
    return:
      type: System.Int64
      description: A long value representing the length of the stream in bytes.
  overridden: System.IO.Stream.Length
  overload: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Length*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Position
  commentId: P:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Position
  id: Position
  parent: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: MultiBufferMemoryStream.Position
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Position
  type: Property
  source:
    remote:
      path: Lib/Common/Core/MultiBufferMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Position
    path: Lib/Common/Core/MultiBufferMemoryStream.cs
    startLine: 148
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nGets or sets the position within the current stream.\n"
  example: []
  syntax:
    content: public override long Position { get; set; }
    content.vb: Public Overrides Property Position As Long
    parameters: []
    return:
      type: System.Int64
      description: The current position within the stream.
  overridden: System.IO.Stream.Position
  overload: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Position*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  langs:
  - csharp
  - vb
  name: Read(Byte[], Int32, Int32)
  nameWithType: MultiBufferMemoryStream.Read(Byte[], Int32, Int32)
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Read(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Lib/Common/Core/MultiBufferMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Read
    path: Lib/Common/Core/MultiBufferMemoryStream.cs
    startLine: 168
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nReads a block of bytes from the current stream and writes the data to a buffer.\n"
  example: []
  syntax:
    content: public override int Read(byte[] buffer, int offset, int count)
    content.vb: Public Overrides Function Read(buffer As Byte(), offset As Integer, count As Integer) As Integer
    parameters:
    - id: buffer
      type: System.Byte[]
      description: When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.
    - id: offset
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin storing the data read from the current stream.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to be read.
    return:
      type: System.Int32
      description: The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the stream has been reached.
  overridden: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
  overload: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Read*
  nameWithType.vb: MultiBufferMemoryStream.Read(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  langs:
  - csharp
  - vb
  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: MultiBufferMemoryStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/Common/Core/MultiBufferMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginRead
    path: Lib/Common/Core/MultiBufferMemoryStream.cs
    startLine: 187
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nBegins an asynchronous read operation.\n"
  example: []
  syntax:
    content: public override IAsyncResult BeginRead(byte[] buffer, int offset, int count, AsyncCallback callback, object state)
    content.vb: Public Overrides Function BeginRead(buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: buffer
      type: System.Byte[]
      description: When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.
    - id: offset
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin storing the data read from the current stream.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to be read.
    - id: callback
      type: System.AsyncCallback
      description: An optional asynchronous callback, to be called when the read is complete.
    - id: state
      type: System.Object
      description: A user-provided object that distinguishes this particular asynchronous read request from other requests.
    return:
      type: System.IAsyncResult
      description: An IAsyncResult that represents the asynchronous read, which could still be pending.
  overridden: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  overload: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginRead*
  nameWithType.vb: MultiBufferMemoryStream.BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginRead(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.EndRead(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  langs:
  - csharp
  - vb
  name: EndRead(IAsyncResult)
  nameWithType: MultiBufferMemoryStream.EndRead(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.EndRead(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/Common/Core/MultiBufferMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndRead
    path: Lib/Common/Core/MultiBufferMemoryStream.cs
    startLine: 213
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nWaits for the pending asynchronous read to complete.\n"
  example: []
  syntax:
    content: public override int EndRead(IAsyncResult asyncResult)
    content.vb: Public Overrides Function EndRead(asyncResult As IAsyncResult) As Integer
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: The reference to the pending asynchronous request to finish.
    return:
      type: System.Int32
      description: The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the stream has been reached.
  overridden: System.IO.Stream.EndRead(System.IAsyncResult)
  overload: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.EndRead*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  langs:
  - csharp
  - vb
  name: Seek(Int64, SeekOrigin)
  nameWithType: MultiBufferMemoryStream.Seek(Int64, SeekOrigin)
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Seek(System.Int64, System.IO.SeekOrigin)
  type: Method
  source:
    remote:
      path: Lib/Common/Core/MultiBufferMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Seek
    path: Lib/Common/Core/MultiBufferMemoryStream.cs
    startLine: 243
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nSets the position within the current stream.\n"
  example: []
  syntax:
    content: public override long Seek(long offset, SeekOrigin origin)
    content.vb: Public Overrides Function Seek(offset As Long, origin As SeekOrigin) As Long
    parameters:
    - id: offset
      type: System.Int64
      description: A byte offset relative to the origin parameter.
    - id: origin
      type: System.IO.SeekOrigin
      description: A value of type System.IO.SeekOrigin indicating the reference point used to obtain the new position.
    return:
      type: System.Int64
      description: The new position within the current stream.
  overridden: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
  overload: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Seek*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <em>offset</em> is invalid for SeekOrigin.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.SetLength(System.Int64)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  langs:
  - csharp
  - vb
  name: SetLength(Int64)
  nameWithType: MultiBufferMemoryStream.SetLength(Int64)
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.SetLength(System.Int64)
  type: Method
  source:
    remote:
      path: Lib/Common/Core/MultiBufferMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetLength
    path: Lib/Common/Core/MultiBufferMemoryStream.cs
    startLine: 276
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nSets the length of the current stream.\n"
  example: []
  syntax:
    content: public override void SetLength(long value)
    content.vb: Public Overrides Sub SetLength(value As Long)
    parameters:
    - id: value
      type: System.Int64
      description: The desired length of the current stream in bytes.
  overridden: System.IO.Stream.SetLength(System.Int64)
  overload: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.SetLength*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: If the <em>value</em> is negative.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  langs:
  - csharp
  - vb
  name: Write(Byte[], Int32, Int32)
  nameWithType: MultiBufferMemoryStream.Write(Byte[], Int32, Int32)
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Write(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: Lib/Common/Core/MultiBufferMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Write
    path: Lib/Common/Core/MultiBufferMemoryStream.cs
    startLine: 289
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nWrites a block of bytes to the current stream using data read from a buffer.\n"
  example: []
  syntax:
    content: public override void Write(byte[] buffer, int offset, int count)
    content.vb: Public Overrides Sub Write(buffer As Byte(), offset As Integer, count As Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer to write data from.
    - id: offset
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin copying bytes to the current stream.
    - id: count
      type: System.Int32
      description: 'The number of bytes to write. '
  overridden: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
  overload: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Write*
  nameWithType.vb: MultiBufferMemoryStream.Write(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  langs:
  - csharp
  - vb
  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: MultiBufferMemoryStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/Common/Core/MultiBufferMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginWrite
    path: Lib/Common/Core/MultiBufferMemoryStream.cs
    startLine: 317
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nBegins an asynchronous write operation.\n"
  example: []
  syntax:
    content: public override IAsyncResult BeginWrite(byte[] buffer, int offset, int count, AsyncCallback callback, object state)
    content.vb: Public Overrides Function BeginWrite(buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer to write data from.
    - id: offset
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin copying bytes to the current stream.
    - id: count
      type: System.Int32
      description: The number of bytes to write.
    - id: callback
      type: System.AsyncCallback
      description: An optional asynchronous callback, to be called when the write is complete.
    - id: state
      type: System.Object
      description: A user-provided object that distinguishes this particular asynchronous write request from other requests.
    return:
      type: System.IAsyncResult
      description: An IAsyncResult that represents the asynchronous write, which could still be pending.
  overridden: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  overload: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginWrite*
  nameWithType.vb: MultiBufferMemoryStream.BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginWrite(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.EndWrite(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  langs:
  - csharp
  - vb
  name: EndWrite(IAsyncResult)
  nameWithType: MultiBufferMemoryStream.EndWrite(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.EndWrite(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/Common/Core/MultiBufferMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndWrite
    path: Lib/Common/Core/MultiBufferMemoryStream.cs
    startLine: 342
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nEnds an asynchronous write operation.\n"
  example: []
  syntax:
    content: public override void EndWrite(IAsyncResult asyncResult)
    content.vb: Public Overrides Sub EndWrite(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: The reference to the pending asynchronous request to finish.
  overridden: System.IO.Stream.EndWrite(System.IAsyncResult)
  overload: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.EndWrite*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Flush
  commentId: M:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Flush
  id: Flush
  parent: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: MultiBufferMemoryStream.Flush()
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Flush()
  type: Method
  source:
    remote:
      path: Lib/Common/Core/MultiBufferMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Flush
    path: Lib/Common/Core/MultiBufferMemoryStream.cs
    startLine: 367
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nDoes not perform any operation, as the stream is an in-memory stream.\n"
  example: []
  syntax:
    content: public override void Flush()
    content.vb: Public Overrides Sub Flush
  overridden: System.IO.Stream.Flush
  overload: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Flush*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.FastCopyTo(System.IO.Stream,System.Nullable{System.DateTime})
  commentId: M:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.FastCopyTo(System.IO.Stream,System.Nullable{System.DateTime})
  id: FastCopyTo(System.IO.Stream,System.Nullable{System.DateTime})
  parent: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  langs:
  - csharp
  - vb
  name: FastCopyTo(Stream, Nullable<DateTime>)
  nameWithType: MultiBufferMemoryStream.FastCopyTo(Stream, Nullable<DateTime>)
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.FastCopyTo(System.IO.Stream, System.Nullable<System.DateTime>)
  type: Method
  source:
    remote:
      path: Lib/Common/Core/MultiBufferMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: FastCopyTo
    path: Lib/Common/Core/MultiBufferMemoryStream.cs
    startLine: 390
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nReads the bytes from the current stream and writes them to another stream. This method writes directly to the destination stream, \nrather than copying the data into a temporary buffer.\n"
  example: []
  syntax:
    content: public void FastCopyTo(Stream destination, DateTime? expiryTime)
    content.vb: Public Sub FastCopyTo(destination As Stream, expiryTime As Date?)
    parameters:
    - id: destination
      type: System.IO.Stream
      description: The stream to which the contents of the current stream will be copied.
    - id: expiryTime
      type: System.Nullable{System.DateTime}
      description: A DateTime indicating the expiry time.
  overload: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.FastCopyTo*
  nameWithType.vb: MultiBufferMemoryStream.FastCopyTo(Stream, Nullable(Of DateTime))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.FastCopyTo(System.IO.Stream, System.Nullable(Of System.DateTime))
  name.vb: FastCopyTo(Stream, Nullable(Of DateTime))
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginFastCopyTo(System.IO.Stream,System.Nullable{System.DateTime},System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginFastCopyTo(System.IO.Stream,System.Nullable{System.DateTime},System.AsyncCallback,System.Object)
  id: BeginFastCopyTo(System.IO.Stream,System.Nullable{System.DateTime},System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  langs:
  - csharp
  - vb
  name: BeginFastCopyTo(Stream, Nullable<DateTime>, AsyncCallback, Object)
  nameWithType: MultiBufferMemoryStream.BeginFastCopyTo(Stream, Nullable<DateTime>, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginFastCopyTo(System.IO.Stream, System.Nullable<System.DateTime>, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/Common/Core/MultiBufferMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginFastCopyTo
    path: Lib/Common/Core/MultiBufferMemoryStream.cs
    startLine: 436
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nBegins an asynchronous fast-copy operation.\n"
  example: []
  syntax:
    content: public IAsyncResult BeginFastCopyTo(Stream destination, DateTime? expiryTime, AsyncCallback callback, object state)
    content.vb: Public Function BeginFastCopyTo(destination As Stream, expiryTime As Date?, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: destination
      type: System.IO.Stream
      description: The stream to which the contents of the current stream will be copied.
    - id: expiryTime
      type: System.Nullable{System.DateTime}
      description: DateTime indicating the expiry time.
    - id: callback
      type: System.AsyncCallback
      description: An optional asynchronous callback, to be called when the copy is complete.
    - id: state
      type: System.Object
      description: A user-provided object that distinguishes this particular asynchronous copy request from other requests.
    return:
      type: System.IAsyncResult
      description: An IAsyncResult that represents the asynchronous copy, which could still be pending.
  overload: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginFastCopyTo*
  nameWithType.vb: MultiBufferMemoryStream.BeginFastCopyTo(Stream, Nullable(Of DateTime), AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginFastCopyTo(System.IO.Stream, System.Nullable(Of System.DateTime), System.AsyncCallback, System.Object)
  name.vb: BeginFastCopyTo(Stream, Nullable(Of DateTime), AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.EndFastCopyTo(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.EndFastCopyTo(System.IAsyncResult)
  id: EndFastCopyTo(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  langs:
  - csharp
  - vb
  name: EndFastCopyTo(IAsyncResult)
  nameWithType: MultiBufferMemoryStream.EndFastCopyTo(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.EndFastCopyTo(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/Common/Core/MultiBufferMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndFastCopyTo
    path: Lib/Common/Core/MultiBufferMemoryStream.cs
    startLine: 539
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nEnds an asynchronous copy operation.\n"
  example: []
  syntax:
    content: public void EndFastCopyTo(IAsyncResult asyncResult)
    content.vb: Public Sub EndFastCopyTo(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: The reference to the pending asynchronous request to finish.
  overload: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.EndFastCopyTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.ComputeMD5Hash
  commentId: M:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.ComputeMD5Hash
  id: ComputeMD5Hash
  parent: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  langs:
  - csharp
  - vb
  name: ComputeMD5Hash()
  nameWithType: MultiBufferMemoryStream.ComputeMD5Hash()
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.ComputeMD5Hash()
  type: Method
  source:
    remote:
      path: Lib/Common/Core/MultiBufferMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ComputeMD5Hash
    path: Lib/Common/Core/MultiBufferMemoryStream.cs
    startLine: 598
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nComputes the hash value for this stream.\n"
  example: []
  syntax:
    content: public string ComputeMD5Hash()
    content.vb: Public Function ComputeMD5Hash As String
    return:
      type: System.String
      description: String representation of the computed hash value.
  overload: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.ComputeMD5Hash*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Dispose(System.Boolean)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: MultiBufferMemoryStream.Dispose(Boolean)
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: Lib/Common/Core/MultiBufferMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Dispose
    path: Lib/Common/Core/MultiBufferMemoryStream.cs
    startLine: 751
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nReleases all resources used by the <xref href=\"Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: protected override void Dispose(bool disposing)
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: true to release both managed and unmanaged resources; false to release only unmanaged resources.
  overridden: System.IO.Stream.Dispose(System.Boolean)
  overload: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Dispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.WindowsAzure.Storage.Core
  commentId: N:Microsoft.WindowsAzure.Storage.Core
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Core
  nameWithType: Microsoft.WindowsAzure.Storage.Core
  fullName: Microsoft.WindowsAzure.Storage.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.IO.Stream.Null
  commentId: F:System.IO.Stream.Null
  parent: System.IO.Stream
  isExternal: true
  name: Null
  nameWithType: Stream.Null
  fullName: System.IO.Stream.Null
- uid: System.IO.Stream.CopyTo(System.IO.Stream)
  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: true
  name: CopyTo(Stream)
  nameWithType: Stream.CopyTo(Stream)
  fullName: System.IO.Stream.CopyTo(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream)
    name: CopyTo
    nameWithType: Stream.CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream)
    name: CopyTo
    nameWithType: Stream.CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: CopyTo(Stream, Int32)
  nameWithType: Stream.CopyTo(Stream, Int32)
  fullName: System.IO.Stream.CopyTo(System.IO.Stream, System.Int32)
  spec.csharp:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
    name: CopyTo
    nameWithType: Stream.CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
    name: CopyTo
    nameWithType: Stream.CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.Close
  commentId: M:System.IO.Stream.Close
  parent: System.IO.Stream
  isExternal: true
  name: Close()
  nameWithType: Stream.Close()
  fullName: System.IO.Stream.Close()
  spec.csharp:
  - uid: System.IO.Stream.Close
    name: Close
    nameWithType: Stream.Close
    fullName: System.IO.Stream.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Close
    name: Close
    nameWithType: Stream.Close
    fullName: System.IO.Stream.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.Dispose
  commentId: M:System.IO.Stream.Dispose
  parent: System.IO.Stream
  isExternal: true
  name: Dispose()
  nameWithType: Stream.Dispose()
  fullName: System.IO.Stream.Dispose()
  spec.csharp:
  - uid: System.IO.Stream.Dispose
    name: Dispose
    nameWithType: Stream.Dispose
    fullName: System.IO.Stream.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Dispose
    name: Dispose
    nameWithType: Stream.Dispose
    fullName: System.IO.Stream.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.CreateWaitHandle
  commentId: M:System.IO.Stream.CreateWaitHandle
  parent: System.IO.Stream
  isExternal: true
  name: CreateWaitHandle()
  nameWithType: Stream.CreateWaitHandle()
  fullName: System.IO.Stream.CreateWaitHandle()
  spec.csharp:
  - uid: System.IO.Stream.CreateWaitHandle
    name: CreateWaitHandle
    nameWithType: Stream.CreateWaitHandle
    fullName: System.IO.Stream.CreateWaitHandle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CreateWaitHandle
    name: CreateWaitHandle
    nameWithType: Stream.CreateWaitHandle
    fullName: System.IO.Stream.CreateWaitHandle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.ReadByte
  commentId: M:System.IO.Stream.ReadByte
  parent: System.IO.Stream
  isExternal: true
  name: ReadByte()
  nameWithType: Stream.ReadByte()
  fullName: System.IO.Stream.ReadByte()
  spec.csharp:
  - uid: System.IO.Stream.ReadByte
    name: ReadByte
    nameWithType: Stream.ReadByte
    fullName: System.IO.Stream.ReadByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.ReadByte
    name: ReadByte
    nameWithType: Stream.ReadByte
    fullName: System.IO.Stream.ReadByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.WriteByte(System.Byte)
  commentId: M:System.IO.Stream.WriteByte(System.Byte)
  parent: System.IO.Stream
  isExternal: true
  name: WriteByte(Byte)
  nameWithType: Stream.WriteByte(Byte)
  fullName: System.IO.Stream.WriteByte(System.Byte)
  spec.csharp:
  - uid: System.IO.Stream.WriteByte(System.Byte)
    name: WriteByte
    nameWithType: Stream.WriteByte
    fullName: System.IO.Stream.WriteByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.WriteByte(System.Byte)
    name: WriteByte
    nameWithType: Stream.WriteByte
    fullName: System.IO.Stream.WriteByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.Synchronized(System.IO.Stream)
  commentId: M:System.IO.Stream.Synchronized(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: true
  name: Synchronized(Stream)
  nameWithType: Stream.Synchronized(Stream)
  fullName: System.IO.Stream.Synchronized(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.Synchronized(System.IO.Stream)
    name: Synchronized
    nameWithType: Stream.Synchronized
    fullName: System.IO.Stream.Synchronized
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Synchronized(System.IO.Stream)
    name: Synchronized
    nameWithType: Stream.Synchronized
    fullName: System.IO.Stream.Synchronized
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.ObjectInvariant
  commentId: M:System.IO.Stream.ObjectInvariant
  parent: System.IO.Stream
  isExternal: true
  name: ObjectInvariant()
  nameWithType: Stream.ObjectInvariant()
  fullName: System.IO.Stream.ObjectInvariant()
  spec.csharp:
  - uid: System.IO.Stream.ObjectInvariant
    name: ObjectInvariant
    nameWithType: Stream.ObjectInvariant
    fullName: System.IO.Stream.ObjectInvariant
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.ObjectInvariant
    name: ObjectInvariant
    nameWithType: Stream.ObjectInvariant
    fullName: System.IO.Stream.ObjectInvariant
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.CanTimeout
  commentId: P:System.IO.Stream.CanTimeout
  parent: System.IO.Stream
  isExternal: true
  name: CanTimeout
  nameWithType: Stream.CanTimeout
  fullName: System.IO.Stream.CanTimeout
- uid: System.IO.Stream.ReadTimeout
  commentId: P:System.IO.Stream.ReadTimeout
  parent: System.IO.Stream
  isExternal: true
  name: ReadTimeout
  nameWithType: Stream.ReadTimeout
  fullName: System.IO.Stream.ReadTimeout
- uid: System.IO.Stream.WriteTimeout
  commentId: P:System.IO.Stream.WriteTimeout
  parent: System.IO.Stream
  isExternal: true
  name: WriteTimeout
  nameWithType: Stream.WriteTimeout
  fullName: System.IO.Stream.WriteTimeout
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.InitializeLifetimeService
  commentId: M:System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: MarshalByRefObject.InitializeLifetimeService
    fullName: System.MarshalByRefObject.InitializeLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: MarshalByRefObject.InitializeLifetimeService
    fullName: System.MarshalByRefObject.InitializeLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  commentId: M:System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: true
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: System.MarshalByRefObject.CreateObjRef(System.Type)
  spec.csharp:
  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)
    name: CreateObjRef
    nameWithType: MarshalByRefObject.CreateObjRef
    fullName: System.MarshalByRefObject.CreateObjRef
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)
    name: CreateObjRef
    nameWithType: MarshalByRefObject.CreateObjRef
    fullName: System.MarshalByRefObject.CreateObjRef
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  commentId: T:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
  isExternal: false
  name: MultiBufferMemoryStream
  nameWithType: MultiBufferMemoryStream
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream
- uid: Microsoft.WindowsAzure.Storage.IBufferManager
  commentId: T:Microsoft.WindowsAzure.Storage.IBufferManager
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: IBufferManager
  nameWithType: IBufferManager
  fullName: Microsoft.WindowsAzure.Storage.IBufferManager
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.#ctor
  isExternal: false
  name: MultiBufferMemoryStream
  nameWithType: MultiBufferMemoryStream.MultiBufferMemoryStream
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.MultiBufferMemoryStream
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.WindowsAzure.Storage
  commentId: N:Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  nameWithType: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.IO.Stream.CanRead
  commentId: P:System.IO.Stream.CanRead
  parent: System.IO.Stream
  isExternal: true
  name: CanRead
  nameWithType: Stream.CanRead
  fullName: System.IO.Stream.CanRead
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.CanRead*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.CanRead
  isExternal: false
  name: CanRead
  nameWithType: MultiBufferMemoryStream.CanRead
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.CanRead
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Stream.CanSeek
  commentId: P:System.IO.Stream.CanSeek
  parent: System.IO.Stream
  isExternal: true
  name: CanSeek
  nameWithType: Stream.CanSeek
  fullName: System.IO.Stream.CanSeek
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.CanSeek*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.CanSeek
  isExternal: false
  name: CanSeek
  nameWithType: MultiBufferMemoryStream.CanSeek
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.CanSeek
- uid: System.IO.Stream.CanWrite
  commentId: P:System.IO.Stream.CanWrite
  parent: System.IO.Stream
  isExternal: true
  name: CanWrite
  nameWithType: Stream.CanWrite
  fullName: System.IO.Stream.CanWrite
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.CanWrite*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.CanWrite
  isExternal: false
  name: CanWrite
  nameWithType: MultiBufferMemoryStream.CanWrite
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.CanWrite
- uid: System.IO.Stream.Length
  commentId: P:System.IO.Stream.Length
  parent: System.IO.Stream
  isExternal: true
  name: Length
  nameWithType: Stream.Length
  fullName: System.IO.Stream.Length
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Length*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Length
  isExternal: false
  name: Length
  nameWithType: MultiBufferMemoryStream.Length
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Length
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Stream.Position
  commentId: P:System.IO.Stream.Position
  parent: System.IO.Stream
  isExternal: true
  name: Position
  nameWithType: Stream.Position
  fullName: System.IO.Stream.Position
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Position*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Position
  isExternal: false
  name: Position
  nameWithType: MultiBufferMemoryStream.Position
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Position
- uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: Read(Byte[], Int32, Int32)
  nameWithType: Stream.Read(Byte[], Int32, Int32)
  fullName: System.IO.Stream.Read(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: Stream.Read(Byte(), Int32, Int32)
  fullname.vb: System.IO.Stream.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    nameWithType: Stream.Read
    fullName: System.IO.Stream.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    nameWithType: Stream.Read
    fullName: System.IO.Stream.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Read*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Read
  isExternal: false
  name: Read
  nameWithType: MultiBufferMemoryStream.Read
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Read
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Stream
  isExternal: true
  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: System.IO.Stream.BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  nameWithType.vb: Stream.BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)
  fullname.vb: System.IO.Stream.BeginRead(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)
  spec.csharp:
  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginRead
    nameWithType: Stream.BeginRead
    fullName: System.IO.Stream.BeginRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginRead
    nameWithType: Stream.BeginRead
    fullName: System.IO.Stream.BeginRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginRead*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginRead
  isExternal: false
  name: BeginRead
  nameWithType: MultiBufferMemoryStream.BeginRead
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginRead
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.IO.Stream.EndRead(System.IAsyncResult)
  commentId: M:System.IO.Stream.EndRead(System.IAsyncResult)
  parent: System.IO.Stream
  isExternal: true
  name: EndRead(IAsyncResult)
  nameWithType: Stream.EndRead(IAsyncResult)
  fullName: System.IO.Stream.EndRead(System.IAsyncResult)
  spec.csharp:
  - uid: System.IO.Stream.EndRead(System.IAsyncResult)
    name: EndRead
    nameWithType: Stream.EndRead
    fullName: System.IO.Stream.EndRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.EndRead(System.IAsyncResult)
    name: EndRead
    nameWithType: Stream.EndRead
    fullName: System.IO.Stream.EndRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.EndRead*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.EndRead
  isExternal: false
  name: EndRead
  nameWithType: MultiBufferMemoryStream.EndRead
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.EndRead
- uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
  commentId: M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Stream
  isExternal: true
  name: Seek(Int64, SeekOrigin)
  nameWithType: Stream.Seek(Int64, SeekOrigin)
  fullName: System.IO.Stream.Seek(System.Int64, System.IO.SeekOrigin)
  spec.csharp:
  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    nameWithType: Stream.Seek
    fullName: System.IO.Stream.Seek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    nameWithType: SeekOrigin
    fullName: System.IO.SeekOrigin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    nameWithType: Stream.Seek
    fullName: System.IO.Stream.Seek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    nameWithType: SeekOrigin
    fullName: System.IO.SeekOrigin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Seek*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Seek
  isExternal: false
  name: Seek
  nameWithType: MultiBufferMemoryStream.Seek
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Seek
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
- uid: System.IO.SeekOrigin
  commentId: T:System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.IO.Stream.SetLength(System.Int64)
  commentId: M:System.IO.Stream.SetLength(System.Int64)
  parent: System.IO.Stream
  isExternal: true
  name: SetLength(Int64)
  nameWithType: Stream.SetLength(Int64)
  fullName: System.IO.Stream.SetLength(System.Int64)
  spec.csharp:
  - uid: System.IO.Stream.SetLength(System.Int64)
    name: SetLength
    nameWithType: Stream.SetLength
    fullName: System.IO.Stream.SetLength
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.SetLength(System.Int64)
    name: SetLength
    nameWithType: Stream.SetLength
    fullName: System.IO.Stream.SetLength
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.SetLength*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.SetLength
  isExternal: false
  name: SetLength
  nameWithType: MultiBufferMemoryStream.SetLength
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.SetLength
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
- uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: Write(Byte[], Int32, Int32)
  nameWithType: Stream.Write(Byte[], Int32, Int32)
  fullName: System.IO.Stream.Write(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: Stream.Write(Byte(), Int32, Int32)
  fullname.vb: System.IO.Stream.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    nameWithType: Stream.Write
    fullName: System.IO.Stream.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    nameWithType: Stream.Write
    fullName: System.IO.Stream.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Write*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Write
  isExternal: false
  name: Write
  nameWithType: MultiBufferMemoryStream.Write
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Write
- uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Stream
  isExternal: true
  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: System.IO.Stream.BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  nameWithType.vb: Stream.BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)
  fullname.vb: System.IO.Stream.BeginWrite(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)
  spec.csharp:
  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginWrite
    nameWithType: Stream.BeginWrite
    fullName: System.IO.Stream.BeginWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginWrite
    nameWithType: Stream.BeginWrite
    fullName: System.IO.Stream.BeginWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginWrite*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginWrite
  isExternal: false
  name: BeginWrite
  nameWithType: MultiBufferMemoryStream.BeginWrite
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginWrite
- uid: System.IO.Stream.EndWrite(System.IAsyncResult)
  commentId: M:System.IO.Stream.EndWrite(System.IAsyncResult)
  parent: System.IO.Stream
  isExternal: true
  name: EndWrite(IAsyncResult)
  nameWithType: Stream.EndWrite(IAsyncResult)
  fullName: System.IO.Stream.EndWrite(System.IAsyncResult)
  spec.csharp:
  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)
    name: EndWrite
    nameWithType: Stream.EndWrite
    fullName: System.IO.Stream.EndWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)
    name: EndWrite
    nameWithType: Stream.EndWrite
    fullName: System.IO.Stream.EndWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.EndWrite*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.EndWrite
  isExternal: false
  name: EndWrite
  nameWithType: MultiBufferMemoryStream.EndWrite
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.EndWrite
- uid: System.IO.Stream.Flush
  commentId: M:System.IO.Stream.Flush
  parent: System.IO.Stream
  isExternal: true
  name: Flush()
  nameWithType: Stream.Flush()
  fullName: System.IO.Stream.Flush()
  spec.csharp:
  - uid: System.IO.Stream.Flush
    name: Flush
    nameWithType: Stream.Flush
    fullName: System.IO.Stream.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Flush
    name: Flush
    nameWithType: Stream.Flush
    fullName: System.IO.Stream.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Flush*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Flush
  isExternal: false
  name: Flush
  nameWithType: MultiBufferMemoryStream.Flush
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Flush
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.FastCopyTo*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.FastCopyTo
  isExternal: false
  name: FastCopyTo
  nameWithType: MultiBufferMemoryStream.FastCopyTo
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.FastCopyTo
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullname.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginFastCopyTo*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginFastCopyTo
  isExternal: false
  name: BeginFastCopyTo
  nameWithType: MultiBufferMemoryStream.BeginFastCopyTo
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.BeginFastCopyTo
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.EndFastCopyTo*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.EndFastCopyTo
  isExternal: false
  name: EndFastCopyTo
  nameWithType: MultiBufferMemoryStream.EndFastCopyTo
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.EndFastCopyTo
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.ComputeMD5Hash*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.ComputeMD5Hash
  isExternal: false
  name: ComputeMD5Hash
  nameWithType: MultiBufferMemoryStream.ComputeMD5Hash
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.ComputeMD5Hash
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Stream.Dispose(System.Boolean)
  commentId: M:System.IO.Stream.Dispose(System.Boolean)
  parent: System.IO.Stream
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: Stream.Dispose(Boolean)
  fullName: System.IO.Stream.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.IO.Stream.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Stream.Dispose
    fullName: System.IO.Stream.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Dispose(System.Boolean)
    name: Dispose
    nameWithType: Stream.Dispose
    fullName: System.IO.Stream.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Dispose*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Dispose
  isExternal: false
  name: Dispose
  nameWithType: MultiBufferMemoryStream.Dispose
  fullName: Microsoft.WindowsAzure.Storage.Core.MultiBufferMemoryStream.Dispose
