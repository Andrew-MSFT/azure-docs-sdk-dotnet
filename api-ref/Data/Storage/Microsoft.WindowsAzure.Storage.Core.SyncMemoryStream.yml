### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream
  commentId: T:Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream
  id: SyncMemoryStream
  parent: Microsoft.WindowsAzure.Storage.Core
  children:
  - Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor
  - Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor(System.Byte[])
  - Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor(System.Byte[],System.Int32)
  - Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)
  - Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.EndRead(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.EndWrite(System.IAsyncResult)
  langs:
  - csharp
  - vb
  name: SyncMemoryStream
  nameWithType: SyncMemoryStream
  fullName: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream
  type: Class
  source:
    remote:
      path: Lib/Common/Core/SyncMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SyncMemoryStream
    path: Lib/Common/Core/SyncMemoryStream.cs
    startLine: 27
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nThis class provides APM Read/Write overrides for memory stream to improve performance.\n"
  example: []
  syntax:
    content: 'public class SyncMemoryStream : MemoryStream, IDisposable'
    content.vb: >-
      Public Class SyncMemoryStream
          Inherits MemoryStream
          Implements IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.IO.Stream
  - System.IO.MemoryStream
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.IO.MemoryStream.Dispose(System.Boolean)
  - System.IO.MemoryStream.Flush
  - System.IO.MemoryStream.GetBuffer
  - System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.MemoryStream.ReadByte
  - System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.MemoryStream.SetLength(System.Int64)
  - System.IO.MemoryStream.ToArray
  - System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.MemoryStream.WriteByte(System.Byte)
  - System.IO.MemoryStream.WriteTo(System.IO.Stream)
  - System.IO.MemoryStream.ObjectInvariant
  - System.IO.MemoryStream.CanRead
  - System.IO.MemoryStream.CanSeek
  - System.IO.MemoryStream.CanWrite
  - System.IO.MemoryStream.Capacity
  - System.IO.MemoryStream.Length
  - System.IO.MemoryStream.Position
  - System.IO.Stream.Null
  - System.IO.Stream.CopyTo(System.IO.Stream)
  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  - System.IO.Stream.Close
  - System.IO.Stream.Dispose
  - System.IO.Stream.CreateWaitHandle
  - System.IO.Stream.Synchronized(System.IO.Stream)
  - System.IO.Stream.CanTimeout
  - System.IO.Stream.ReadTimeout
  - System.IO.Stream.WriteTimeout
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream
  langs:
  - csharp
  - vb
  name: SyncMemoryStream()
  nameWithType: SyncMemoryStream.SyncMemoryStream()
  fullName: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.SyncMemoryStream()
  type: Constructor
  source:
    remote:
      path: Lib/Common/Core/SyncMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Core/SyncMemoryStream.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nInitializes a new instance of the SyncMemoryStream class with an expandable capacity initialized to zero.\n"
  example: []
  syntax:
    content: public SyncMemoryStream()
    content.vb: Public Sub New
  overload: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor(System.Byte[])
  commentId: M:Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream
  langs:
  - csharp
  - vb
  name: SyncMemoryStream(Byte[])
  nameWithType: SyncMemoryStream.SyncMemoryStream(Byte[])
  fullName: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.SyncMemoryStream(System.Byte[])
  type: Constructor
  source:
    remote:
      path: Lib/Common/Core/SyncMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Core/SyncMemoryStream.cs
    startLine: 41
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nInitializes a new non-resizable instance of the SyncMemoryStream class based on the specified byte array. \n"
  example: []
  syntax:
    content: public SyncMemoryStream(byte[] buffer)
    content.vb: Public Sub New(buffer As Byte())
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The array of unsigned bytes from which to create the current stream.
  overload: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor*
  nameWithType.vb: SyncMemoryStream.SyncMemoryStream(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.SyncMemoryStream(System.Byte())
  name.vb: SyncMemoryStream(Byte())
- uid: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor(System.Byte[],System.Int32)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor(System.Byte[],System.Int32)
  id: '#ctor(System.Byte[],System.Int32)'
  parent: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream
  langs:
  - csharp
  - vb
  name: SyncMemoryStream(Byte[], Int32)
  nameWithType: SyncMemoryStream.SyncMemoryStream(Byte[], Int32)
  fullName: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.SyncMemoryStream(System.Byte[], System.Int32)
  type: Constructor
  source:
    remote:
      path: Lib/Common/Core/SyncMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Core/SyncMemoryStream.cs
    startLine: 51
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nInitializes a new non-resizable instance of the SyncMemoryStream class based on the specified region (index) of a byte array. \n"
  example: []
  syntax:
    content: public SyncMemoryStream(byte[] buffer, int index)
    content.vb: Public Sub New(buffer As Byte(), index As Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The array of unsigned bytes from which to create the current stream.
    - id: index
      type: System.Int32
      description: The index into buffer at which the stream begins.
  overload: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor*
  nameWithType.vb: SyncMemoryStream.SyncMemoryStream(Byte(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.SyncMemoryStream(System.Byte(), System.Int32)
  name.vb: SyncMemoryStream(Byte(), Int32)
- uid: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)
  id: '#ctor(System.Byte[],System.Int32,System.Int32)'
  parent: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream
  langs:
  - csharp
  - vb
  name: SyncMemoryStream(Byte[], Int32, Int32)
  nameWithType: SyncMemoryStream.SyncMemoryStream(Byte[], Int32, Int32)
  fullName: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.SyncMemoryStream(System.Byte[], System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: Lib/Common/Core/SyncMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Core/SyncMemoryStream.cs
    startLine: 62
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nInitializes a new non-resizable instance of the SyncMemoryStream class based on the specified region (index) of a byte array. \n"
  example: []
  syntax:
    content: public SyncMemoryStream(byte[] buffer, int index, int count)
    content.vb: Public Sub New(buffer As Byte(), index As Integer, count As Integer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The array of unsigned bytes from which to create the current stream.
    - id: index
      type: System.Int32
      description: The index into buffer at which the stream begins.
    - id: count
      type: System.Int32
      description: The length of the stream in bytes.
  overload: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor*
  nameWithType.vb: SyncMemoryStream.SyncMemoryStream(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.SyncMemoryStream(System.Byte(), System.Int32, System.Int32)
  name.vb: SyncMemoryStream(Byte(), Int32, Int32)
- uid: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream
  langs:
  - csharp
  - vb
  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: SyncMemoryStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/Common/Core/SyncMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginRead
    path: Lib/Common/Core/SyncMemoryStream.cs
    startLine: 77
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nBegins an asynchronous read operation.\n"
  example: []
  syntax:
    content: public override IAsyncResult BeginRead(byte[] buffer, int offset, int count, AsyncCallback callback, object state)
    content.vb: Public Overrides Function BeginRead(buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: buffer
      type: System.Byte[]
      description: When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.
    - id: offset
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin storing the data read from the current stream.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to be read.
    - id: callback
      type: System.AsyncCallback
      description: An optional asynchronous callback, to be called when the read is complete.
    - id: state
      type: System.Object
      description: A user-provided object that distinguishes this particular asynchronous read request from other requests.
    return:
      type: System.IAsyncResult
      description: An IAsyncResult that represents the asynchronous read, which could still be pending.
  overridden: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  overload: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.BeginRead*
  nameWithType.vb: SyncMemoryStream.BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.BeginRead(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.EndRead(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream
  langs:
  - csharp
  - vb
  name: EndRead(IAsyncResult)
  nameWithType: SyncMemoryStream.EndRead(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.EndRead(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/Common/Core/SyncMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndRead
    path: Lib/Common/Core/SyncMemoryStream.cs
    startLine: 104
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nWaits for the pending asynchronous read to complete.\n"
  example: []
  syntax:
    content: public override int EndRead(IAsyncResult asyncResult)
    content.vb: Public Overrides Function EndRead(asyncResult As IAsyncResult) As Integer
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: The reference to the pending asynchronous request to finish.
    return:
      type: System.Int32
      description: The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the stream has been reached.
  overridden: System.IO.Stream.EndRead(System.IAsyncResult)
  overload: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.EndRead*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream
  langs:
  - csharp
  - vb
  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: SyncMemoryStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/Common/Core/SyncMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginWrite
    path: Lib/Common/Core/SyncMemoryStream.cs
    startLine: 120
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nBegins an asynchronous write operation.\n"
  example: []
  syntax:
    content: public override IAsyncResult BeginWrite(byte[] buffer, int offset, int count, AsyncCallback callback, object state)
    content.vb: Public Overrides Function BeginWrite(buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer to write data from.
    - id: offset
      type: System.Int32
      description: The zero-based byte offset in buffer at which to begin copying bytes to the current stream.
    - id: count
      type: System.Int32
      description: The number of bytes to write.
    - id: callback
      type: System.AsyncCallback
      description: An optional asynchronous callback, to be called when the write is complete.
    - id: state
      type: System.Object
      description: A user-provided object that distinguishes this particular asynchronous write request from other requests.
    return:
      type: System.IAsyncResult
      description: An IAsyncResult that represents the asynchronous write, which could still be pending.
  overridden: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  overload: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.BeginWrite*
  nameWithType.vb: SyncMemoryStream.BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.BeginWrite(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)
- uid: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.EndWrite(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream
  langs:
  - csharp
  - vb
  name: EndWrite(IAsyncResult)
  nameWithType: SyncMemoryStream.EndWrite(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.EndWrite(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/Common/Core/SyncMemoryStream.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndWrite
    path: Lib/Common/Core/SyncMemoryStream.cs
    startLine: 146
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Core
  summary: "\nEnds an asynchronous write operation.\n"
  example: []
  syntax:
    content: public override void EndWrite(IAsyncResult asyncResult)
    content.vb: Public Overrides Sub EndWrite(asyncResult As IAsyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: The reference to the pending asynchronous request to finish.
  overridden: System.IO.Stream.EndWrite(System.IAsyncResult)
  overload: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.EndWrite*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.WindowsAzure.Storage.Core
  commentId: N:Microsoft.WindowsAzure.Storage.Core
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Core
  nameWithType: Microsoft.WindowsAzure.Storage.Core
  fullName: Microsoft.WindowsAzure.Storage.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.MemoryStream
  commentId: T:System.IO.MemoryStream
  parent: System.IO
  isExternal: true
  name: MemoryStream
  nameWithType: MemoryStream
  fullName: System.IO.MemoryStream
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.IO.MemoryStream.Dispose(System.Boolean)
  commentId: M:System.IO.MemoryStream.Dispose(System.Boolean)
  parent: System.IO.MemoryStream
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: MemoryStream.Dispose(Boolean)
  fullName: System.IO.MemoryStream.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.IO.MemoryStream.Dispose(System.Boolean)
    name: Dispose
    nameWithType: MemoryStream.Dispose
    fullName: System.IO.MemoryStream.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.Dispose(System.Boolean)
    name: Dispose
    nameWithType: MemoryStream.Dispose
    fullName: System.IO.MemoryStream.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.Flush
  commentId: M:System.IO.MemoryStream.Flush
  parent: System.IO.MemoryStream
  isExternal: true
  name: Flush()
  nameWithType: MemoryStream.Flush()
  fullName: System.IO.MemoryStream.Flush()
  spec.csharp:
  - uid: System.IO.MemoryStream.Flush
    name: Flush
    nameWithType: MemoryStream.Flush
    fullName: System.IO.MemoryStream.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.Flush
    name: Flush
    nameWithType: MemoryStream.Flush
    fullName: System.IO.MemoryStream.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.GetBuffer
  commentId: M:System.IO.MemoryStream.GetBuffer
  parent: System.IO.MemoryStream
  isExternal: true
  name: GetBuffer()
  nameWithType: MemoryStream.GetBuffer()
  fullName: System.IO.MemoryStream.GetBuffer()
  spec.csharp:
  - uid: System.IO.MemoryStream.GetBuffer
    name: GetBuffer
    nameWithType: MemoryStream.GetBuffer
    fullName: System.IO.MemoryStream.GetBuffer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.GetBuffer
    name: GetBuffer
    nameWithType: MemoryStream.GetBuffer
    fullName: System.IO.MemoryStream.GetBuffer
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.MemoryStream
  isExternal: true
  name: Read(Byte[], Int32, Int32)
  nameWithType: MemoryStream.Read(Byte[], Int32, Int32)
  fullName: System.IO.MemoryStream.Read(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: MemoryStream.Read(Byte(), Int32, Int32)
  fullname.vb: System.IO.MemoryStream.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    nameWithType: MemoryStream.Read
    fullName: System.IO.MemoryStream.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    nameWithType: MemoryStream.Read
    fullName: System.IO.MemoryStream.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.ReadByte
  commentId: M:System.IO.MemoryStream.ReadByte
  parent: System.IO.MemoryStream
  isExternal: true
  name: ReadByte()
  nameWithType: MemoryStream.ReadByte()
  fullName: System.IO.MemoryStream.ReadByte()
  spec.csharp:
  - uid: System.IO.MemoryStream.ReadByte
    name: ReadByte
    nameWithType: MemoryStream.ReadByte
    fullName: System.IO.MemoryStream.ReadByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.ReadByte
    name: ReadByte
    nameWithType: MemoryStream.ReadByte
    fullName: System.IO.MemoryStream.ReadByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
  commentId: M:System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.MemoryStream
  isExternal: true
  name: Seek(Int64, SeekOrigin)
  nameWithType: MemoryStream.Seek(Int64, SeekOrigin)
  fullName: System.IO.MemoryStream.Seek(System.Int64, System.IO.SeekOrigin)
  spec.csharp:
  - uid: System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    nameWithType: MemoryStream.Seek
    fullName: System.IO.MemoryStream.Seek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    nameWithType: SeekOrigin
    fullName: System.IO.SeekOrigin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    nameWithType: MemoryStream.Seek
    fullName: System.IO.MemoryStream.Seek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    nameWithType: SeekOrigin
    fullName: System.IO.SeekOrigin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.SetLength(System.Int64)
  commentId: M:System.IO.MemoryStream.SetLength(System.Int64)
  parent: System.IO.MemoryStream
  isExternal: true
  name: SetLength(Int64)
  nameWithType: MemoryStream.SetLength(Int64)
  fullName: System.IO.MemoryStream.SetLength(System.Int64)
  spec.csharp:
  - uid: System.IO.MemoryStream.SetLength(System.Int64)
    name: SetLength
    nameWithType: MemoryStream.SetLength
    fullName: System.IO.MemoryStream.SetLength
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.SetLength(System.Int64)
    name: SetLength
    nameWithType: MemoryStream.SetLength
    fullName: System.IO.MemoryStream.SetLength
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.ToArray
  commentId: M:System.IO.MemoryStream.ToArray
  parent: System.IO.MemoryStream
  isExternal: true
  name: ToArray()
  nameWithType: MemoryStream.ToArray()
  fullName: System.IO.MemoryStream.ToArray()
  spec.csharp:
  - uid: System.IO.MemoryStream.ToArray
    name: ToArray
    nameWithType: MemoryStream.ToArray
    fullName: System.IO.MemoryStream.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.ToArray
    name: ToArray
    nameWithType: MemoryStream.ToArray
    fullName: System.IO.MemoryStream.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.MemoryStream
  isExternal: true
  name: Write(Byte[], Int32, Int32)
  nameWithType: MemoryStream.Write(Byte[], Int32, Int32)
  fullName: System.IO.MemoryStream.Write(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: MemoryStream.Write(Byte(), Int32, Int32)
  fullname.vb: System.IO.MemoryStream.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    nameWithType: MemoryStream.Write
    fullName: System.IO.MemoryStream.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    nameWithType: MemoryStream.Write
    fullName: System.IO.MemoryStream.Write
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.WriteByte(System.Byte)
  commentId: M:System.IO.MemoryStream.WriteByte(System.Byte)
  parent: System.IO.MemoryStream
  isExternal: true
  name: WriteByte(Byte)
  nameWithType: MemoryStream.WriteByte(Byte)
  fullName: System.IO.MemoryStream.WriteByte(System.Byte)
  spec.csharp:
  - uid: System.IO.MemoryStream.WriteByte(System.Byte)
    name: WriteByte
    nameWithType: MemoryStream.WriteByte
    fullName: System.IO.MemoryStream.WriteByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.WriteByte(System.Byte)
    name: WriteByte
    nameWithType: MemoryStream.WriteByte
    fullName: System.IO.MemoryStream.WriteByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.WriteTo(System.IO.Stream)
  commentId: M:System.IO.MemoryStream.WriteTo(System.IO.Stream)
  parent: System.IO.MemoryStream
  isExternal: true
  name: WriteTo(Stream)
  nameWithType: MemoryStream.WriteTo(Stream)
  fullName: System.IO.MemoryStream.WriteTo(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.MemoryStream.WriteTo(System.IO.Stream)
    name: WriteTo
    nameWithType: MemoryStream.WriteTo
    fullName: System.IO.MemoryStream.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.WriteTo(System.IO.Stream)
    name: WriteTo
    nameWithType: MemoryStream.WriteTo
    fullName: System.IO.MemoryStream.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.ObjectInvariant
  commentId: M:System.IO.MemoryStream.ObjectInvariant
  parent: System.IO.MemoryStream
  isExternal: true
  name: ObjectInvariant()
  nameWithType: MemoryStream.ObjectInvariant()
  fullName: System.IO.MemoryStream.ObjectInvariant()
  spec.csharp:
  - uid: System.IO.MemoryStream.ObjectInvariant
    name: ObjectInvariant
    nameWithType: MemoryStream.ObjectInvariant
    fullName: System.IO.MemoryStream.ObjectInvariant
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.MemoryStream.ObjectInvariant
    name: ObjectInvariant
    nameWithType: MemoryStream.ObjectInvariant
    fullName: System.IO.MemoryStream.ObjectInvariant
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.MemoryStream.CanRead
  commentId: P:System.IO.MemoryStream.CanRead
  parent: System.IO.MemoryStream
  isExternal: true
  name: CanRead
  nameWithType: MemoryStream.CanRead
  fullName: System.IO.MemoryStream.CanRead
- uid: System.IO.MemoryStream.CanSeek
  commentId: P:System.IO.MemoryStream.CanSeek
  parent: System.IO.MemoryStream
  isExternal: true
  name: CanSeek
  nameWithType: MemoryStream.CanSeek
  fullName: System.IO.MemoryStream.CanSeek
- uid: System.IO.MemoryStream.CanWrite
  commentId: P:System.IO.MemoryStream.CanWrite
  parent: System.IO.MemoryStream
  isExternal: true
  name: CanWrite
  nameWithType: MemoryStream.CanWrite
  fullName: System.IO.MemoryStream.CanWrite
- uid: System.IO.MemoryStream.Capacity
  commentId: P:System.IO.MemoryStream.Capacity
  parent: System.IO.MemoryStream
  isExternal: true
  name: Capacity
  nameWithType: MemoryStream.Capacity
  fullName: System.IO.MemoryStream.Capacity
- uid: System.IO.MemoryStream.Length
  commentId: P:System.IO.MemoryStream.Length
  parent: System.IO.MemoryStream
  isExternal: true
  name: Length
  nameWithType: MemoryStream.Length
  fullName: System.IO.MemoryStream.Length
- uid: System.IO.MemoryStream.Position
  commentId: P:System.IO.MemoryStream.Position
  parent: System.IO.MemoryStream
  isExternal: true
  name: Position
  nameWithType: MemoryStream.Position
  fullName: System.IO.MemoryStream.Position
- uid: System.IO.Stream.Null
  commentId: F:System.IO.Stream.Null
  parent: System.IO.Stream
  isExternal: true
  name: Null
  nameWithType: Stream.Null
  fullName: System.IO.Stream.Null
- uid: System.IO.Stream.CopyTo(System.IO.Stream)
  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: true
  name: CopyTo(Stream)
  nameWithType: Stream.CopyTo(Stream)
  fullName: System.IO.Stream.CopyTo(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream)
    name: CopyTo
    nameWithType: Stream.CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream)
    name: CopyTo
    nameWithType: Stream.CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  name: CopyTo(Stream, Int32)
  nameWithType: Stream.CopyTo(Stream, Int32)
  fullName: System.IO.Stream.CopyTo(System.IO.Stream, System.Int32)
  spec.csharp:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
    name: CopyTo
    nameWithType: Stream.CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
    name: CopyTo
    nameWithType: Stream.CopyTo
    fullName: System.IO.Stream.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.Close
  commentId: M:System.IO.Stream.Close
  parent: System.IO.Stream
  isExternal: true
  name: Close()
  nameWithType: Stream.Close()
  fullName: System.IO.Stream.Close()
  spec.csharp:
  - uid: System.IO.Stream.Close
    name: Close
    nameWithType: Stream.Close
    fullName: System.IO.Stream.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Close
    name: Close
    nameWithType: Stream.Close
    fullName: System.IO.Stream.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.Dispose
  commentId: M:System.IO.Stream.Dispose
  parent: System.IO.Stream
  isExternal: true
  name: Dispose()
  nameWithType: Stream.Dispose()
  fullName: System.IO.Stream.Dispose()
  spec.csharp:
  - uid: System.IO.Stream.Dispose
    name: Dispose
    nameWithType: Stream.Dispose
    fullName: System.IO.Stream.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Dispose
    name: Dispose
    nameWithType: Stream.Dispose
    fullName: System.IO.Stream.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.CreateWaitHandle
  commentId: M:System.IO.Stream.CreateWaitHandle
  parent: System.IO.Stream
  isExternal: true
  name: CreateWaitHandle()
  nameWithType: Stream.CreateWaitHandle()
  fullName: System.IO.Stream.CreateWaitHandle()
  spec.csharp:
  - uid: System.IO.Stream.CreateWaitHandle
    name: CreateWaitHandle
    nameWithType: Stream.CreateWaitHandle
    fullName: System.IO.Stream.CreateWaitHandle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.CreateWaitHandle
    name: CreateWaitHandle
    nameWithType: Stream.CreateWaitHandle
    fullName: System.IO.Stream.CreateWaitHandle
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.Synchronized(System.IO.Stream)
  commentId: M:System.IO.Stream.Synchronized(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: true
  name: Synchronized(Stream)
  nameWithType: Stream.Synchronized(Stream)
  fullName: System.IO.Stream.Synchronized(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.Synchronized(System.IO.Stream)
    name: Synchronized
    nameWithType: Stream.Synchronized
    fullName: System.IO.Stream.Synchronized
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.Synchronized(System.IO.Stream)
    name: Synchronized
    nameWithType: Stream.Synchronized
    fullName: System.IO.Stream.Synchronized
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream.CanTimeout
  commentId: P:System.IO.Stream.CanTimeout
  parent: System.IO.Stream
  isExternal: true
  name: CanTimeout
  nameWithType: Stream.CanTimeout
  fullName: System.IO.Stream.CanTimeout
- uid: System.IO.Stream.ReadTimeout
  commentId: P:System.IO.Stream.ReadTimeout
  parent: System.IO.Stream
  isExternal: true
  name: ReadTimeout
  nameWithType: Stream.ReadTimeout
  fullName: System.IO.Stream.ReadTimeout
- uid: System.IO.Stream.WriteTimeout
  commentId: P:System.IO.Stream.WriteTimeout
  parent: System.IO.Stream
  isExternal: true
  name: WriteTimeout
  nameWithType: Stream.WriteTimeout
  fullName: System.IO.Stream.WriteTimeout
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.InitializeLifetimeService
  commentId: M:System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: MarshalByRefObject.InitializeLifetimeService
    fullName: System.MarshalByRefObject.InitializeLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: MarshalByRefObject.InitializeLifetimeService
    fullName: System.MarshalByRefObject.InitializeLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  commentId: M:System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: true
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: System.MarshalByRefObject.CreateObjRef(System.Type)
  spec.csharp:
  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)
    name: CreateObjRef
    nameWithType: MarshalByRefObject.CreateObjRef
    fullName: System.MarshalByRefObject.CreateObjRef
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.CreateObjRef(System.Type)
    name: CreateObjRef
    nameWithType: MarshalByRefObject.CreateObjRef
    fullName: System.MarshalByRefObject.CreateObjRef
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.#ctor
  isExternal: false
  name: SyncMemoryStream
  nameWithType: SyncMemoryStream.SyncMemoryStream
  fullName: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.SyncMemoryStream
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Stream
  isExternal: true
  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: Stream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: System.IO.Stream.BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  nameWithType.vb: Stream.BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)
  fullname.vb: System.IO.Stream.BeginRead(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginRead(Byte(), Int32, Int32, AsyncCallback, Object)
  spec.csharp:
  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginRead
    nameWithType: Stream.BeginRead
    fullName: System.IO.Stream.BeginRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginRead
    nameWithType: Stream.BeginRead
    fullName: System.IO.Stream.BeginRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.BeginRead*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.BeginRead
  isExternal: false
  name: BeginRead
  nameWithType: SyncMemoryStream.BeginRead
  fullName: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.BeginRead
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.IO.Stream.EndRead(System.IAsyncResult)
  commentId: M:System.IO.Stream.EndRead(System.IAsyncResult)
  parent: System.IO.Stream
  isExternal: true
  name: EndRead(IAsyncResult)
  nameWithType: Stream.EndRead(IAsyncResult)
  fullName: System.IO.Stream.EndRead(System.IAsyncResult)
  spec.csharp:
  - uid: System.IO.Stream.EndRead(System.IAsyncResult)
    name: EndRead
    nameWithType: Stream.EndRead
    fullName: System.IO.Stream.EndRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.EndRead(System.IAsyncResult)
    name: EndRead
    nameWithType: Stream.EndRead
    fullName: System.IO.Stream.EndRead
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.EndRead*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.EndRead
  isExternal: false
  name: EndRead
  nameWithType: SyncMemoryStream.EndRead
  fullName: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.EndRead
- uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Stream
  isExternal: true
  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  nameWithType: Stream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)
  fullName: System.IO.Stream.BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)
  nameWithType.vb: Stream.BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)
  fullname.vb: System.IO.Stream.BeginWrite(System.Byte(), System.Int32, System.Int32, System.AsyncCallback, System.Object)
  name.vb: BeginWrite(Byte(), Int32, Int32, AsyncCallback, Object)
  spec.csharp:
  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginWrite
    nameWithType: Stream.BeginWrite
    fullName: System.IO.Stream.BeginWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginWrite
    nameWithType: Stream.BeginWrite
    fullName: System.IO.Stream.BeginWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.AsyncCallback
    name: AsyncCallback
    nameWithType: AsyncCallback
    fullName: System.AsyncCallback
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.BeginWrite*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.BeginWrite
  isExternal: false
  name: BeginWrite
  nameWithType: SyncMemoryStream.BeginWrite
  fullName: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.BeginWrite
- uid: System.IO.Stream.EndWrite(System.IAsyncResult)
  commentId: M:System.IO.Stream.EndWrite(System.IAsyncResult)
  parent: System.IO.Stream
  isExternal: true
  name: EndWrite(IAsyncResult)
  nameWithType: Stream.EndWrite(IAsyncResult)
  fullName: System.IO.Stream.EndWrite(System.IAsyncResult)
  spec.csharp:
  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)
    name: EndWrite
    nameWithType: Stream.EndWrite
    fullName: System.IO.Stream.EndWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)
    name: EndWrite
    nameWithType: Stream.EndWrite
    fullName: System.IO.Stream.EndWrite
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    nameWithType: IAsyncResult
    fullName: System.IAsyncResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.EndWrite*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.EndWrite
  isExternal: false
  name: EndWrite
  nameWithType: SyncMemoryStream.EndWrite
  fullName: Microsoft.WindowsAzure.Storage.Core.SyncMemoryStream.EndWrite
