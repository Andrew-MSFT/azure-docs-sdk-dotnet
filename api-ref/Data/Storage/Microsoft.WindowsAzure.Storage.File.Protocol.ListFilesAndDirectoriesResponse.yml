### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse
  commentId: T:Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse
  id: ListFilesAndDirectoriesResponse
  parent: Microsoft.WindowsAzure.Storage.File.Protocol
  children:
  - Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.#ctor(System.IO.Stream)
  - Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.Files
  - Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.ListingContext
  - Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.Marker
  - Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.MaxResults
  - Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.NextMarker
  - Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.ParseXml
  langs:
  - csharp
  - vb
  name: ListFilesAndDirectoriesResponse
  nameWithType: ListFilesAndDirectoriesResponse
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse
  type: Class
  source:
    remote:
      path: Lib/Common/File/Protocol/ListFilesAndDirectoriesResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ListFilesAndDirectoriesResponse
    path: Lib/Common/File/Protocol/ListFilesAndDirectoriesResponse.cs
    startLine: 32
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File.Protocol
  summary: "\nProvides methods for parsing the response from a file listing operation.\n"
  example: []
  syntax:
    content: 'public sealed class ListFilesAndDirectoriesResponse : ResponseParsingBase<IListFileEntry>, IDisposable'
    content.vb: >-
      Public NotInheritable Class ListFilesAndDirectoriesResponse
          Inherits ResponseParsingBase(Of IListFileEntry)
          Implements IDisposable
  inheritance:
  - System.Object
  - Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase{Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry}
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.#ctor(System.IO.Stream)
  commentId: M:Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse
  langs:
  - csharp
  - vb
  name: ListFilesAndDirectoriesResponse(Stream)
  nameWithType: ListFilesAndDirectoriesResponse.ListFilesAndDirectoriesResponse(Stream)
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.ListFilesAndDirectoriesResponse(System.IO.Stream)
  type: Constructor
  source:
    remote:
      path: Lib/Common/File/Protocol/ListFilesAndDirectoriesResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/File/Protocol/ListFilesAndDirectoriesResponse.cs
    startLine: 70
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File.Protocol
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ListFilesAndDirectoriesResponse(Stream stream)
    content.vb: Public Sub New(stream As Stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream to be parsed.
  overload: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.ListingContext
  commentId: P:Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.ListingContext
  id: ListingContext
  parent: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse
  langs:
  - csharp
  - vb
  name: ListingContext
  nameWithType: ListFilesAndDirectoriesResponse.ListingContext
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.ListingContext
  type: Property
  source:
    remote:
      path: Lib/Common/File/Protocol/ListFilesAndDirectoriesResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ListingContext
    path: Lib/Common/File/Protocol/ListFilesAndDirectoriesResponse.cs
    startLine: 79
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File.Protocol
  summary: "\nGets the listing context from the XML response.\n"
  example: []
  syntax:
    content: public FileListingContext ListingContext { get; }
    content.vb: Public ReadOnly Property ListingContext As FileListingContext
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.File.Protocol.FileListingContext
      description: A set of parameters for the listing operation.
  overload: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.ListingContext*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.Files
  commentId: P:Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.Files
  id: Files
  parent: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse
  langs:
  - csharp
  - vb
  name: Files
  nameWithType: ListFilesAndDirectoriesResponse.Files
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.Files
  type: Property
  source:
    remote:
      path: Lib/Common/File/Protocol/ListFilesAndDirectoriesResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Files
    path: Lib/Common/File/Protocol/ListFilesAndDirectoriesResponse.cs
    startLine: 93
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File.Protocol
  summary: "\nGets an enumerable collection of objects that implement <xref href=\"Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry\" data-throw-if-not-resolved=\"false\"></xref> from the response.\n"
  example: []
  syntax:
    content: public IEnumerable<IListFileEntry> Files { get; }
    content.vb: Public ReadOnly Property Files As IEnumerable(Of IListFileEntry)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry}
      description: An enumerable collection of objects that implement <xref href="Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.Files*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.Marker
  commentId: P:Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.Marker
  id: Marker
  parent: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse
  langs:
  - csharp
  - vb
  name: Marker
  nameWithType: ListFilesAndDirectoriesResponse.Marker
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.Marker
  type: Property
  source:
    remote:
      path: Lib/Common/File/Protocol/ListFilesAndDirectoriesResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Marker
    path: Lib/Common/File/Protocol/ListFilesAndDirectoriesResponse.cs
    startLine: 105
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File.Protocol
  summary: "\nGets the Marker value provided for the listing operation from the XML response.\n"
  example: []
  syntax:
    content: public string Marker { get; }
    content.vb: Public ReadOnly Property Marker As String
    parameters: []
    return:
      type: System.String
      description: The Marker value.
  overload: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.Marker*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.MaxResults
  commentId: P:Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.MaxResults
  id: MaxResults
  parent: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse
  langs:
  - csharp
  - vb
  name: MaxResults
  nameWithType: ListFilesAndDirectoriesResponse.MaxResults
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.MaxResults
  type: Property
  source:
    remote:
      path: Lib/Common/File/Protocol/ListFilesAndDirectoriesResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: MaxResults
    path: Lib/Common/File/Protocol/ListFilesAndDirectoriesResponse.cs
    startLine: 119
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File.Protocol
  summary: "\nGets the MaxResults value provided for the listing operation from the XML response.\n"
  example: []
  syntax:
    content: public int MaxResults { get; }
    content.vb: Public ReadOnly Property MaxResults As Integer
    parameters: []
    return:
      type: System.Int32
      description: The MaxResults value.
  overload: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.MaxResults*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.NextMarker
  commentId: P:Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.NextMarker
  id: NextMarker
  parent: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse
  langs:
  - csharp
  - vb
  name: NextMarker
  nameWithType: ListFilesAndDirectoriesResponse.NextMarker
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.NextMarker
  type: Property
  source:
    remote:
      path: Lib/Common/File/Protocol/ListFilesAndDirectoriesResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: NextMarker
    path: Lib/Common/File/Protocol/ListFilesAndDirectoriesResponse.cs
    startLine: 133
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File.Protocol
  summary: "\nGets the NextMarker value from the XML response, if the listing was not complete.\n"
  example: []
  syntax:
    content: public string NextMarker { get; }
    content.vb: Public ReadOnly Property NextMarker As String
    parameters: []
    return:
      type: System.String
      description: The NextMarker value.
  overload: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.NextMarker*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.ParseXml
  commentId: M:Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.ParseXml
  id: ParseXml
  parent: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse
  langs:
  - csharp
  - vb
  name: ParseXml()
  nameWithType: ListFilesAndDirectoriesResponse.ParseXml()
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.ParseXml()
  type: Method
  source:
    remote:
      path: Lib/Common/File/Protocol/ListFilesAndDirectoriesResponse.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ParseXml
    path: Lib/Common/File/Protocol/ListFilesAndDirectoriesResponse.cs
    startLine: 280
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.File.Protocol
  summary: "\nParses the response XML for a file listing operation.\n"
  example: []
  syntax:
    content: protected override IEnumerable<IListFileEntry> ParseXml()
    content.vb: Protected Overrides Function ParseXml As IEnumerable(Of IListFileEntry)
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry}
      description: An enumerable collection of objects that implement <xref href="Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry" data-throw-if-not-resolved="false"></xref>.
  overridden: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase{Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry}.ParseXml
  overload: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.ParseXml*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Microsoft.WindowsAzure.Storage.File.Protocol
  commentId: N:Microsoft.WindowsAzure.Storage.File.Protocol
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.File.Protocol
  nameWithType: Microsoft.WindowsAzure.Storage.File.Protocol
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase{Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry}
  commentId: T:Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase{Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry}
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol
  definition: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase`1
  name: ResponseParsingBase<IListFileEntry>
  nameWithType: ResponseParsingBase<IListFileEntry>
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase<Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry>
  nameWithType.vb: ResponseParsingBase(Of IListFileEntry)
  fullname.vb: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase(Of Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry)
  name.vb: ResponseParsingBase(Of IListFileEntry)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase`1
    name: ResponseParsingBase
    nameWithType: ResponseParsingBase
    fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry
    name: IListFileEntry
    nameWithType: IListFileEntry
    fullName: Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase`1
    name: ResponseParsingBase
    nameWithType: ResponseParsingBase
    fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry
    name: IListFileEntry
    nameWithType: IListFileEntry
    fullName: Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase`1
  commentId: T:Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase`1
  isExternal: false
  name: ResponseParsingBase<T>
  nameWithType: ResponseParsingBase<T>
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase<T>
  nameWithType.vb: ResponseParsingBase(Of T)
  fullname.vb: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase(Of T)
  name.vb: ResponseParsingBase(Of T)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase`1
    name: ResponseParsingBase
    nameWithType: ResponseParsingBase
    fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase`1
    name: ResponseParsingBase
    nameWithType: ResponseParsingBase
    fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol
  commentId: N:Microsoft.WindowsAzure.Storage.Shared.Protocol
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Shared.Protocol
  nameWithType: Microsoft.WindowsAzure.Storage.Shared.Protocol
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse
  commentId: T:Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse
  isExternal: false
  name: ListFilesAndDirectoriesResponse
  nameWithType: ListFilesAndDirectoriesResponse
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.#ctor
  isExternal: false
  name: ListFilesAndDirectoriesResponse
  nameWithType: ListFilesAndDirectoriesResponse.ListFilesAndDirectoriesResponse
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.ListFilesAndDirectoriesResponse
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: false
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.ListingContext*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.ListingContext
  isExternal: false
  name: ListingContext
  nameWithType: ListFilesAndDirectoriesResponse.ListingContext
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.ListingContext
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.FileListingContext
  commentId: T:Microsoft.WindowsAzure.Storage.File.Protocol.FileListingContext
  parent: Microsoft.WindowsAzure.Storage.File.Protocol
  isExternal: false
  name: FileListingContext
  nameWithType: FileListingContext
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.FileListingContext
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry
  commentId: T:Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry
  parent: Microsoft.WindowsAzure.Storage.File.Protocol
  isExternal: false
  name: IListFileEntry
  nameWithType: IListFileEntry
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.Files*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.Files
  isExternal: false
  name: Files
  nameWithType: ListFilesAndDirectoriesResponse.Files
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.Files
- uid: System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IListFileEntry>
  nameWithType: IEnumerable<IListFileEntry>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry>
  nameWithType.vb: IEnumerable(Of IListFileEntry)
  fullname.vb: System.Collections.Generic.IEnumerable(Of Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry)
  name.vb: IEnumerable(Of IListFileEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry
    name: IListFileEntry
    nameWithType: IListFileEntry
    fullName: Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry
    name: IListFileEntry
    nameWithType: IListFileEntry
    fullName: Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.Marker*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.Marker
  isExternal: false
  name: Marker
  nameWithType: ListFilesAndDirectoriesResponse.Marker
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.Marker
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.MaxResults*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.MaxResults
  isExternal: false
  name: MaxResults
  nameWithType: ListFilesAndDirectoriesResponse.MaxResults
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.MaxResults
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.NextMarker*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.NextMarker
  isExternal: false
  name: NextMarker
  nameWithType: ListFilesAndDirectoriesResponse.NextMarker
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.NextMarker
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase{Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry}.ParseXml
  commentId: M:Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase{Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry}.ParseXml
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase{Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry}
  definition: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase`1.ParseXml
  name: ParseXml()
  nameWithType: ResponseParsingBase<IListFileEntry>.ParseXml()
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase<Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry>.ParseXml()
  nameWithType.vb: ResponseParsingBase(Of IListFileEntry).ParseXml()
  fullname.vb: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase(Of Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry).ParseXml()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase`1.ParseXml
    name: ParseXml
    nameWithType: ResponseParsingBase<IListFileEntry>.ParseXml
    fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase<Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry>.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase`1.ParseXml
    name: ParseXml
    nameWithType: ResponseParsingBase(Of IListFileEntry).ParseXml
    fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase(Of Microsoft.WindowsAzure.Storage.File.Protocol.IListFileEntry).ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.ParseXml*
  commentId: Overload:Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.ParseXml
  isExternal: false
  name: ParseXml
  nameWithType: ListFilesAndDirectoriesResponse.ParseXml
  fullName: Microsoft.WindowsAzure.Storage.File.Protocol.ListFilesAndDirectoriesResponse.ParseXml
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase`1.ParseXml
  commentId: M:Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase`1.ParseXml
  isExternal: false
  name: ParseXml()
  nameWithType: ResponseParsingBase<T>.ParseXml()
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase<T>.ParseXml()
  nameWithType.vb: ResponseParsingBase(Of T).ParseXml()
  fullname.vb: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase(Of T).ParseXml()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase`1.ParseXml
    name: ParseXml
    nameWithType: ResponseParsingBase<T>.ParseXml
    fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase<T>.ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase`1.ParseXml
    name: ParseXml
    nameWithType: ResponseParsingBase(Of T).ParseXml
    fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.ResponseParsingBase(Of T).ParseXml
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
