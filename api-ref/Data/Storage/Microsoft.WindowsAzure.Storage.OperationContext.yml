### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  commentId: T:Microsoft.WindowsAzure.Storage.OperationContext
  id: OperationContext
  parent: Microsoft.WindowsAzure.Storage
  children:
  - Microsoft.WindowsAzure.Storage.OperationContext.#ctor
  - Microsoft.WindowsAzure.Storage.OperationContext.ClientRequestID
  - Microsoft.WindowsAzure.Storage.OperationContext.DefaultLogLevel
  - Microsoft.WindowsAzure.Storage.OperationContext.EndTime
  - Microsoft.WindowsAzure.Storage.OperationContext.GlobalRequestCompleted
  - Microsoft.WindowsAzure.Storage.OperationContext.GlobalResponseReceived
  - Microsoft.WindowsAzure.Storage.OperationContext.GlobalRetrying
  - Microsoft.WindowsAzure.Storage.OperationContext.GlobalSendingRequest
  - Microsoft.WindowsAzure.Storage.OperationContext.LastResult
  - Microsoft.WindowsAzure.Storage.OperationContext.LogLevel
  - Microsoft.WindowsAzure.Storage.OperationContext.RequestCompleted
  - Microsoft.WindowsAzure.Storage.OperationContext.RequestResults
  - Microsoft.WindowsAzure.Storage.OperationContext.ResponseReceived
  - Microsoft.WindowsAzure.Storage.OperationContext.Retrying
  - Microsoft.WindowsAzure.Storage.OperationContext.SendingRequest
  - Microsoft.WindowsAzure.Storage.OperationContext.StartTime
  - Microsoft.WindowsAzure.Storage.OperationContext.UserHeaders
  langs:
  - csharp
  - vb
  name: OperationContext
  nameWithType: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
  type: Class
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: OperationContext
    path: Lib/Common/OperationContext.cs
    startLine: 26
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nRepresents the context for a request operation against the storage service, and provides additional runtime information about its execution.\n"
  example: []
  syntax:
    content: public sealed class OperationContext
    content.vb: Public NotInheritable Class OperationContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.OperationContext.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.OperationContext.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: OperationContext()
  nameWithType: OperationContext.OperationContext()
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.OperationContext()
  type: Constructor
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/OperationContext.cs
    startLine: 36
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.OperationContext\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public OperationContext()
    content.vb: Public Sub New
  overload: Microsoft.WindowsAzure.Storage.OperationContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.OperationContext.UserHeaders
  commentId: P:Microsoft.WindowsAzure.Storage.OperationContext.UserHeaders
  id: UserHeaders
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: UserHeaders
  nameWithType: OperationContext.UserHeaders
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.UserHeaders
  type: Property
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UserHeaders
    path: Lib/Common/OperationContext.cs
    startLine: 48
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets or sets additional headers on the request, for example, for proxy or logging information.\n"
  example: []
  syntax:
    content: public IDictionary<string, string> UserHeaders { get; set; }
    content.vb: Public Property UserHeaders As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: A <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref> object containing additional header information.
  overload: Microsoft.WindowsAzure.Storage.OperationContext.UserHeaders*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.OperationContext.ClientRequestID
  commentId: P:Microsoft.WindowsAzure.Storage.OperationContext.ClientRequestID
  id: ClientRequestID
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: ClientRequestID
  nameWithType: OperationContext.ClientRequestID
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.ClientRequestID
  type: Property
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ClientRequestID
    path: Lib/Common/OperationContext.cs
    startLine: 54
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets or sets the client request ID.\n"
  example: []
  syntax:
    content: public string ClientRequestID { get; set; }
    content.vb: Public Property ClientRequestID As String
    parameters: []
    return:
      type: System.String
      description: A string containing the client request ID.
  overload: Microsoft.WindowsAzure.Storage.OperationContext.ClientRequestID*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.OperationContext.DefaultLogLevel
  commentId: P:Microsoft.WindowsAzure.Storage.OperationContext.DefaultLogLevel
  id: DefaultLogLevel
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: DefaultLogLevel
  nameWithType: OperationContext.DefaultLogLevel
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.DefaultLogLevel
  type: Property
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DefaultLogLevel
    path: Lib/Common/OperationContext.cs
    startLine: 65
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets or sets the default logging level to be used for subsequently created instances of the <xref href=\"Microsoft.WindowsAzure.Storage.OperationContext\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public static LogLevel DefaultLogLevel { get; set; }
    content.vb: Public Shared Property DefaultLogLevel As LogLevel
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.LogLevel
      description: A value of type <xref href="Microsoft.WindowsAzure.Storage.OperationContext.LogLevel" data-throw-if-not-resolved="false"></xref> that specifies which events are logged by default by instances of the <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.WindowsAzure.Storage.OperationContext.DefaultLogLevel*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.OperationContext.LogLevel
  commentId: P:Microsoft.WindowsAzure.Storage.OperationContext.LogLevel
  id: LogLevel
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: LogLevel
  nameWithType: OperationContext.LogLevel
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.LogLevel
  type: Property
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: LogLevel
    path: Lib/Common/OperationContext.cs
    startLine: 71
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets or sets the logging level to be used for an instance of the <xref href=\"Microsoft.WindowsAzure.Storage.OperationContext\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public LogLevel LogLevel { get; set; }
    content.vb: Public Property LogLevel As LogLevel
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.LogLevel
      description: A value of type <xref href="Microsoft.WindowsAzure.Storage.OperationContext.LogLevel" data-throw-if-not-resolved="false"></xref> that specifies which events are logged by the <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.WindowsAzure.Storage.OperationContext.LogLevel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.OperationContext.GlobalSendingRequest
  commentId: E:Microsoft.WindowsAzure.Storage.OperationContext.GlobalSendingRequest
  id: GlobalSendingRequest
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: GlobalSendingRequest
  nameWithType: OperationContext.GlobalSendingRequest
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.GlobalSendingRequest
  type: Event
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GlobalSendingRequest
    path: Lib/Common/OperationContext.cs
    startLine: 80
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nOccurs immediately before a request is signed.\n"
  example: []
  syntax:
    content: public static event EventHandler<RequestEventArgs> GlobalSendingRequest
    content.vb: Public Shared Event GlobalSendingRequest As EventHandler(Of RequestEventArgs)
    return:
      type: System.EventHandler{Microsoft.WindowsAzure.Storage.RequestEventArgs}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.OperationContext.GlobalResponseReceived
  commentId: E:Microsoft.WindowsAzure.Storage.OperationContext.GlobalResponseReceived
  id: GlobalResponseReceived
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: GlobalResponseReceived
  nameWithType: OperationContext.GlobalResponseReceived
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.GlobalResponseReceived
  type: Event
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GlobalResponseReceived
    path: Lib/Common/OperationContext.cs
    startLine: 85
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nOccurs when a response is received from the server, before any processing or downloading.\n"
  example: []
  syntax:
    content: public static event EventHandler<RequestEventArgs> GlobalResponseReceived
    content.vb: Public Shared Event GlobalResponseReceived As EventHandler(Of RequestEventArgs)
    return:
      type: System.EventHandler{Microsoft.WindowsAzure.Storage.RequestEventArgs}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.OperationContext.GlobalRequestCompleted
  commentId: E:Microsoft.WindowsAzure.Storage.OperationContext.GlobalRequestCompleted
  id: GlobalRequestCompleted
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: GlobalRequestCompleted
  nameWithType: OperationContext.GlobalRequestCompleted
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.GlobalRequestCompleted
  type: Event
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GlobalRequestCompleted
    path: Lib/Common/OperationContext.cs
    startLine: 90
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nOccurs after a response has been fully received and processed.\n"
  example: []
  syntax:
    content: public static event EventHandler<RequestEventArgs> GlobalRequestCompleted
    content.vb: Public Shared Event GlobalRequestCompleted As EventHandler(Of RequestEventArgs)
    return:
      type: System.EventHandler{Microsoft.WindowsAzure.Storage.RequestEventArgs}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.OperationContext.GlobalRetrying
  commentId: E:Microsoft.WindowsAzure.Storage.OperationContext.GlobalRetrying
  id: GlobalRetrying
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: GlobalRetrying
  nameWithType: OperationContext.GlobalRetrying
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.GlobalRetrying
  type: Event
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GlobalRetrying
    path: Lib/Common/OperationContext.cs
    startLine: 95
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nOccurs before a request is retried\n"
  example: []
  syntax:
    content: public static event EventHandler<RequestEventArgs> GlobalRetrying
    content.vb: Public Shared Event GlobalRetrying As EventHandler(Of RequestEventArgs)
    return:
      type: System.EventHandler{Microsoft.WindowsAzure.Storage.RequestEventArgs}
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.OperationContext.SendingRequest
  commentId: E:Microsoft.WindowsAzure.Storage.OperationContext.SendingRequest
  id: SendingRequest
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: SendingRequest
  nameWithType: OperationContext.SendingRequest
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.SendingRequest
  type: Event
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SendingRequest
    path: Lib/Common/OperationContext.cs
    startLine: 100
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nOccurs immediately before a request is signed.\n"
  example: []
  syntax:
    content: public event EventHandler<RequestEventArgs> SendingRequest
    content.vb: Public Event SendingRequest As EventHandler(Of RequestEventArgs)
    return:
      type: System.EventHandler{Microsoft.WindowsAzure.Storage.RequestEventArgs}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.OperationContext.ResponseReceived
  commentId: E:Microsoft.WindowsAzure.Storage.OperationContext.ResponseReceived
  id: ResponseReceived
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: ResponseReceived
  nameWithType: OperationContext.ResponseReceived
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.ResponseReceived
  type: Event
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ResponseReceived
    path: Lib/Common/OperationContext.cs
    startLine: 105
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nOccurs when a response is received from the service, before any processing or downloading.\n"
  example: []
  syntax:
    content: public event EventHandler<RequestEventArgs> ResponseReceived
    content.vb: Public Event ResponseReceived As EventHandler(Of RequestEventArgs)
    return:
      type: System.EventHandler{Microsoft.WindowsAzure.Storage.RequestEventArgs}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.OperationContext.RequestCompleted
  commentId: E:Microsoft.WindowsAzure.Storage.OperationContext.RequestCompleted
  id: RequestCompleted
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: RequestCompleted
  nameWithType: OperationContext.RequestCompleted
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.RequestCompleted
  type: Event
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RequestCompleted
    path: Lib/Common/OperationContext.cs
    startLine: 110
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nOccurs after a response has been fully received and processed.\n"
  example: []
  syntax:
    content: public event EventHandler<RequestEventArgs> RequestCompleted
    content.vb: Public Event RequestCompleted As EventHandler(Of RequestEventArgs)
    return:
      type: System.EventHandler{Microsoft.WindowsAzure.Storage.RequestEventArgs}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.OperationContext.Retrying
  commentId: E:Microsoft.WindowsAzure.Storage.OperationContext.Retrying
  id: Retrying
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: Retrying
  nameWithType: OperationContext.Retrying
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.Retrying
  type: Event
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Retrying
    path: Lib/Common/OperationContext.cs
    startLine: 115
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nOccurs before a request is retried\n"
  example: []
  syntax:
    content: public event EventHandler<RequestEventArgs> Retrying
    content.vb: Public Event Retrying As EventHandler(Of RequestEventArgs)
    return:
      type: System.EventHandler{Microsoft.WindowsAzure.Storage.RequestEventArgs}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.OperationContext.StartTime
  commentId: P:Microsoft.WindowsAzure.Storage.OperationContext.StartTime
  id: StartTime
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: OperationContext.StartTime
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.StartTime
  type: Property
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: StartTime
    path: Lib/Common/OperationContext.cs
    startLine: 196
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets or sets the start time of the operation.\n"
  example: []
  syntax:
    content: public DateTime StartTime { get; set; }
    content.vb: Public Property StartTime As Date
    parameters: []
    return:
      type: System.DateTime
      description: A <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> value indicating the start time of the operation.
  overload: Microsoft.WindowsAzure.Storage.OperationContext.StartTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.OperationContext.EndTime
  commentId: P:Microsoft.WindowsAzure.Storage.OperationContext.EndTime
  id: EndTime
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: EndTime
  nameWithType: OperationContext.EndTime
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.EndTime
  type: Property
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndTime
    path: Lib/Common/OperationContext.cs
    startLine: 202
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets or sets the end time of the operation.\n"
  example: []
  syntax:
    content: public DateTime EndTime { get; set; }
    content.vb: Public Property EndTime As Date
    parameters: []
    return:
      type: System.DateTime
      description: A <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> value indicating the end time of the operation.
  overload: Microsoft.WindowsAzure.Storage.OperationContext.EndTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.OperationContext.RequestResults
  commentId: P:Microsoft.WindowsAzure.Storage.OperationContext.RequestResults
  id: RequestResults
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: RequestResults
  nameWithType: OperationContext.RequestResults
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.RequestResults
  type: Property
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RequestResults
    path: Lib/Common/OperationContext.cs
    startLine: 214
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets or sets the set of request results that the current operation has created.\n"
  example: []
  syntax:
    content: public IList<RequestResult> RequestResults { get; }
    content.vb: Public ReadOnly Property RequestResults As IList(Of RequestResult)
    parameters: []
    return:
      type: System.Collections.Generic.IList{Microsoft.WindowsAzure.Storage.RequestResult}
      description: An <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref> object that contains <xref href="Microsoft.WindowsAzure.Storage.RequestResult" data-throw-if-not-resolved="false"></xref> objects that represent the request results created by the current operation.
  overload: Microsoft.WindowsAzure.Storage.OperationContext.RequestResults*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.OperationContext.LastResult
  commentId: P:Microsoft.WindowsAzure.Storage.OperationContext.LastResult
  id: LastResult
  parent: Microsoft.WindowsAzure.Storage.OperationContext
  langs:
  - csharp
  - vb
  name: LastResult
  nameWithType: OperationContext.LastResult
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.LastResult
  type: Property
  source:
    remote:
      path: Lib/Common/OperationContext.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: LastResult
    path: Lib/Common/OperationContext.cs
    startLine: 226
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets the last request result encountered for the operation.\n"
  example: []
  syntax:
    content: public RequestResult LastResult { get; }
    content.vb: Public ReadOnly Property LastResult As RequestResult
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.RequestResult
      description: A <xref href="Microsoft.WindowsAzure.Storage.RequestResult" data-throw-if-not-resolved="false"></xref> object that represents the last request result.
  overload: Microsoft.WindowsAzure.Storage.OperationContext.LastResult*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.WindowsAzure.Storage
  commentId: N:Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  nameWithType: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  commentId: T:Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  nameWithType: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: Microsoft.WindowsAzure.Storage.OperationContext.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.OperationContext.#ctor
  isExternal: false
  name: OperationContext
  nameWithType: OperationContext.OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.OperationContext
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.OperationContext.UserHeaders*
  commentId: Overload:Microsoft.WindowsAzure.Storage.OperationContext.UserHeaders
  isExternal: false
  name: UserHeaders
  nameWithType: OperationContext.UserHeaders
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.UserHeaders
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.WindowsAzure.Storage.OperationContext.ClientRequestID*
  commentId: Overload:Microsoft.WindowsAzure.Storage.OperationContext.ClientRequestID
  isExternal: false
  name: ClientRequestID
  nameWithType: OperationContext.ClientRequestID
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.ClientRequestID
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.OperationContext.LogLevel
  commentId: P:Microsoft.WindowsAzure.Storage.OperationContext.LogLevel
- uid: Microsoft.WindowsAzure.Storage.OperationContext.DefaultLogLevel*
  commentId: Overload:Microsoft.WindowsAzure.Storage.OperationContext.DefaultLogLevel
  isExternal: false
  name: DefaultLogLevel
  nameWithType: OperationContext.DefaultLogLevel
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.DefaultLogLevel
- uid: Microsoft.WindowsAzure.Storage.LogLevel
  commentId: T:Microsoft.WindowsAzure.Storage.LogLevel
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: LogLevel
  nameWithType: LogLevel
  fullName: Microsoft.WindowsAzure.Storage.LogLevel
- uid: Microsoft.WindowsAzure.Storage.OperationContext.LogLevel*
  commentId: Overload:Microsoft.WindowsAzure.Storage.OperationContext.LogLevel
  isExternal: false
  name: LogLevel
  nameWithType: OperationContext.LogLevel
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.LogLevel
- uid: System.EventHandler{Microsoft.WindowsAzure.Storage.RequestEventArgs}
  commentId: T:System.EventHandler{Microsoft.WindowsAzure.Storage.RequestEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<RequestEventArgs>
  nameWithType: EventHandler<RequestEventArgs>
  fullName: System.EventHandler<Microsoft.WindowsAzure.Storage.RequestEventArgs>
  nameWithType.vb: EventHandler(Of RequestEventArgs)
  fullname.vb: System.EventHandler(Of Microsoft.WindowsAzure.Storage.RequestEventArgs)
  name.vb: EventHandler(Of RequestEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.RequestEventArgs
    name: RequestEventArgs
    nameWithType: RequestEventArgs
    fullName: Microsoft.WindowsAzure.Storage.RequestEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.RequestEventArgs
    name: RequestEventArgs
    nameWithType: RequestEventArgs
    fullName: Microsoft.WindowsAzure.Storage.RequestEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullname.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.WindowsAzure.Storage.OperationContext.StartTime*
  commentId: Overload:Microsoft.WindowsAzure.Storage.OperationContext.StartTime
  isExternal: false
  name: StartTime
  nameWithType: OperationContext.StartTime
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.StartTime
- uid: Microsoft.WindowsAzure.Storage.OperationContext.EndTime*
  commentId: Overload:Microsoft.WindowsAzure.Storage.OperationContext.EndTime
  isExternal: false
  name: EndTime
  nameWithType: OperationContext.EndTime
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.EndTime
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
- uid: Microsoft.WindowsAzure.Storage.RequestResult
  commentId: T:Microsoft.WindowsAzure.Storage.RequestResult
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: RequestResult
  nameWithType: RequestResult
  fullName: Microsoft.WindowsAzure.Storage.RequestResult
- uid: Microsoft.WindowsAzure.Storage.OperationContext.RequestResults*
  commentId: Overload:Microsoft.WindowsAzure.Storage.OperationContext.RequestResults
  isExternal: false
  name: RequestResults
  nameWithType: OperationContext.RequestResults
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.RequestResults
- uid: System.Collections.Generic.IList{Microsoft.WindowsAzure.Storage.RequestResult}
  commentId: T:System.Collections.Generic.IList{Microsoft.WindowsAzure.Storage.RequestResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<RequestResult>
  nameWithType: IList<RequestResult>
  fullName: System.Collections.Generic.IList<Microsoft.WindowsAzure.Storage.RequestResult>
  nameWithType.vb: IList(Of RequestResult)
  fullname.vb: System.Collections.Generic.IList(Of Microsoft.WindowsAzure.Storage.RequestResult)
  name.vb: IList(Of RequestResult)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.RequestResult
    name: RequestResult
    nameWithType: RequestResult
    fullName: Microsoft.WindowsAzure.Storage.RequestResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.RequestResult
    name: RequestResult
    nameWithType: RequestResult
    fullName: Microsoft.WindowsAzure.Storage.RequestResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullname.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.OperationContext.LastResult*
  commentId: Overload:Microsoft.WindowsAzure.Storage.OperationContext.LastResult
  isExternal: false
  name: LastResult
  nameWithType: OperationContext.LastResult
  fullName: Microsoft.WindowsAzure.Storage.OperationContext.LastResult
