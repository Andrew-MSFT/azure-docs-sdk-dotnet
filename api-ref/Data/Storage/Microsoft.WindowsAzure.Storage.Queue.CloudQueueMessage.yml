### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  commentId: T:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  id: CloudQueueMessage
  parent: Microsoft.WindowsAzure.Storage.Queue
  children:
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.#ctor(System.Byte[])
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.#ctor(System.String)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.#ctor(System.String,System.String)
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.AsBytes
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.AsString
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.DequeueCount
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.ExpirationTime
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.Id
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.InsertionTime
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxMessageSize
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxNumberOfMessagesToPeek
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxTimeToLive
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.NextVisibleTime
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.PopReceipt
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.SetMessageContent(System.Byte[])
  - Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.SetMessageContent(System.String)
  langs:
  - csharp
  - vb
  name: CloudQueueMessage
  nameWithType: CloudQueueMessage
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  type: Class
  source:
    remote:
      path: Lib/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CloudQueueMessage
    path: Lib/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nRepresents a message in the Microsoft Azure Queue service.\n"
  example: []
  syntax:
    content: public sealed class CloudQueueMessage
    content.vb: Public NotInheritable Class CloudQueueMessage
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.#ctor(System.Byte[])
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: CloudQueueMessage(Byte[])
  nameWithType: CloudQueueMessage.CloudQueueMessage(Byte[])
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.CloudQueueMessage(System.Byte[])
  type: Constructor
  source:
    remote:
      path: Lib/ClassLibraryCommon/Queue/CloudQueueMessage.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/ClassLibraryCommon/Queue/CloudQueueMessage.cs
    startLine: 30
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage\" data-throw-if-not-resolved=\"false\"></xref> class with the given byte array.\n"
  example: []
  syntax:
    content: public CloudQueueMessage(byte[] content)
    content.vb: Public Sub New(content As Byte())
    parameters:
    - id: content
      type: System.Byte[]
      description: The content of the message as a byte array.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.#ctor*
  nameWithType.vb: CloudQueueMessage.CloudQueueMessage(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.CloudQueueMessage(System.Byte())
  name.vb: CloudQueueMessage(Byte())
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.SetMessageContent(System.Byte[])
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.SetMessageContent(System.Byte[])
  id: SetMessageContent(System.Byte[])
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: SetMessageContent(Byte[])
  nameWithType: CloudQueueMessage.SetMessageContent(Byte[])
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.SetMessageContent(System.Byte[])
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Queue/CloudQueueMessage.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetMessageContent
    path: Lib/ClassLibraryCommon/Queue/CloudQueueMessage.cs
    startLine: 42
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nSets the content of this message.\n"
  example: []
  syntax:
    content: public void SetMessageContent(byte[] content)
    content.vb: Public Sub SetMessageContent(content As Byte())
    parameters:
    - id: content
      type: System.Byte[]
      description: The content of the message as a byte array.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.SetMessageContent*
  nameWithType.vb: CloudQueueMessage.SetMessageContent(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.SetMessageContent(System.Byte())
  name.vb: SetMessageContent(Byte())
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxMessageSize
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxMessageSize
  id: MaxMessageSize
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: MaxMessageSize
  nameWithType: CloudQueueMessage.MaxMessageSize
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxMessageSize
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: MaxMessageSize
    path: Lib/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 40
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets the maximum message size in bytes.\n"
  example: []
  syntax:
    content: public static long MaxMessageSize { get; }
    content.vb: Public Shared ReadOnly Property MaxMessageSize As Long
    parameters: []
    return:
      type: System.Int64
      description: The maximum message size in bytes.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxMessageSize*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxTimeToLive
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxTimeToLive
  id: MaxTimeToLive
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: MaxTimeToLive
  nameWithType: CloudQueueMessage.MaxTimeToLive
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxTimeToLive
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: MaxTimeToLive
    path: Lib/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 57
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets the maximum amount of time a message is kept in the queue.\n"
  example: []
  syntax:
    content: public static TimeSpan MaxTimeToLive { get; }
    content.vb: Public Shared ReadOnly Property MaxTimeToLive As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the maximum amount of time a message is kept in the queue.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxTimeToLive*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxNumberOfMessagesToPeek
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxNumberOfMessagesToPeek
  id: MaxNumberOfMessagesToPeek
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: MaxNumberOfMessagesToPeek
  nameWithType: CloudQueueMessage.MaxNumberOfMessagesToPeek
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxNumberOfMessagesToPeek
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: MaxNumberOfMessagesToPeek
    path: Lib/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 74
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets the maximum number of messages that can be peeked at a time.\n"
  example: []
  syntax:
    content: public static int MaxNumberOfMessagesToPeek { get; }
    content.vb: Public Shared ReadOnly Property MaxNumberOfMessagesToPeek As Integer
    parameters: []
    return:
      type: System.Int32
      description: The maximum number of messages that can be peeked at a time.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxNumberOfMessagesToPeek*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.#ctor(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: CloudQueueMessage(String)
  nameWithType: CloudQueueMessage.CloudQueueMessage(String)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.CloudQueueMessage(System.String)
  type: Constructor
  source:
    remote:
      path: Lib/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 98
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage\" data-throw-if-not-resolved=\"false\"></xref> class with the given string.\n"
  example: []
  syntax:
    content: public CloudQueueMessage(string content)
    content.vb: Public Sub New(content As String)
    parameters:
    - id: content
      type: System.String
      description: The content of the message as a string of text.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.#ctor(System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: CloudQueueMessage(String, String)
  nameWithType: CloudQueueMessage.CloudQueueMessage(String, String)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.CloudQueueMessage(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Lib/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 111
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage\" data-throw-if-not-resolved=\"false\"></xref> class with the given message ID and pop receipt.\n"
  example: []
  syntax:
    content: public CloudQueueMessage(string messageId, string popReceipt)
    content.vb: Public Sub New(messageId As String, popReceipt As String)
    parameters:
    - id: messageId
      type: System.String
      description: A string specifying the message ID.
    - id: popReceipt
      type: System.String
      description: A string containing the pop receipt token.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.AsBytes
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.AsBytes
  id: AsBytes
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: AsBytes
  nameWithType: CloudQueueMessage.AsBytes
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.AsBytes
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AsBytes
    path: Lib/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 138
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets the content of the message as a byte array.\n"
  example: []
  syntax:
    content: public byte[] AsBytes { get; }
    content.vb: Public ReadOnly Property AsBytes As Byte()
    parameters: []
    return:
      type: System.Byte[]
      description: The content of the message as a byte array.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.AsBytes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.Id
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.Id
  id: Id
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: CloudQueueMessage.Id
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.Id
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Id
    path: Lib/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 162
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets the message ID.\n"
  example: []
  syntax:
    content: public string Id { get; }
    content.vb: Public ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
      description: A string containing the message ID.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.PopReceipt
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.PopReceipt
  id: PopReceipt
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: PopReceipt
  nameWithType: CloudQueueMessage.PopReceipt
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.PopReceipt
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: PopReceipt
    path: Lib/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 168
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets the message's pop receipt.\n"
  example: []
  syntax:
    content: public string PopReceipt { get; }
    content.vb: Public ReadOnly Property PopReceipt As String
    parameters: []
    return:
      type: System.String
      description: A string containing the pop receipt value.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.PopReceipt*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.InsertionTime
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.InsertionTime
  id: InsertionTime
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: InsertionTime
  nameWithType: CloudQueueMessage.InsertionTime
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.InsertionTime
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: InsertionTime
    path: Lib/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 174
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets the time that the message was added to the queue.\n"
  example: []
  syntax:
    content: public DateTimeOffset? InsertionTime { get; }
    content.vb: Public ReadOnly Property InsertionTime As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> indicating the time that the message was added to the queue.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.InsertionTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.ExpirationTime
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.ExpirationTime
  id: ExpirationTime
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: ExpirationTime
  nameWithType: CloudQueueMessage.ExpirationTime
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.ExpirationTime
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExpirationTime
    path: Lib/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 180
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets the time that the message expires.\n"
  example: []
  syntax:
    content: public DateTimeOffset? ExpirationTime { get; }
    content.vb: Public ReadOnly Property ExpirationTime As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> indicating the time that the message expires.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.ExpirationTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.NextVisibleTime
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.NextVisibleTime
  id: NextVisibleTime
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: NextVisibleTime
  nameWithType: CloudQueueMessage.NextVisibleTime
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.NextVisibleTime
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: NextVisibleTime
    path: Lib/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 186
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets the time that the message will next be visible.\n"
  example: []
  syntax:
    content: public DateTimeOffset? NextVisibleTime { get; }
    content.vb: Public ReadOnly Property NextVisibleTime As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> indicating the time that the message will next be visible.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.NextVisibleTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.AsString
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.AsString
  id: AsString
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: AsString
  nameWithType: CloudQueueMessage.AsString
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.AsString
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AsString
    path: Lib/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 192
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets the content of the message, as a string.\n"
  example: []
  syntax:
    content: public string AsString { get; }
    content.vb: Public ReadOnly Property AsString As String
    parameters: []
    return:
      type: System.String
      description: A string containing the message content.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.AsString*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.DequeueCount
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.DequeueCount
  id: DequeueCount
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: DequeueCount
  nameWithType: CloudQueueMessage.DequeueCount
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.DequeueCount
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DequeueCount
    path: Lib/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 216
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nGets the number of times this message has been dequeued.\n"
  example: []
  syntax:
    content: public int DequeueCount { get; }
    content.vb: Public ReadOnly Property DequeueCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: The number of times this message has been dequeued.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.DequeueCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.SetMessageContent(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.SetMessageContent(System.String)
  id: SetMessageContent(System.String)
  parent: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  langs:
  - csharp
  - vb
  name: SetMessageContent(String)
  nameWithType: CloudQueueMessage.SetMessageContent(String)
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.SetMessageContent(System.String)
  type: Method
  source:
    remote:
      path: Lib/Common/Queue/CloudQueueMessage.Common.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: SetMessageContent
    path: Lib/Common/Queue/CloudQueueMessage.Common.cs
    startLine: 326
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue
  summary: "\nSets the content of this message.\n"
  example: []
  syntax:
    content: public void SetMessageContent(string content)
    content.vb: Public Sub SetMessageContent(content As String)
    parameters:
    - id: content
      type: System.String
      description: A string containing the new message content.
  overload: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.SetMessageContent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage.Queue
  commentId: N:Microsoft.WindowsAzure.Storage.Queue
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Queue
  nameWithType: Microsoft.WindowsAzure.Storage.Queue
  fullName: Microsoft.WindowsAzure.Storage.Queue
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  commentId: T:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
  parent: Microsoft.WindowsAzure.Storage.Queue
  isExternal: false
  name: CloudQueueMessage
  nameWithType: CloudQueueMessage
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.#ctor
  isExternal: false
  name: CloudQueueMessage
  nameWithType: CloudQueueMessage.CloudQueueMessage
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.CloudQueueMessage
- uid: System.Byte[]
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullname.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.SetMessageContent*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.SetMessageContent
  isExternal: false
  name: SetMessageContent
  nameWithType: CloudQueueMessage.SetMessageContent
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.SetMessageContent
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxMessageSize*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxMessageSize
  isExternal: false
  name: MaxMessageSize
  nameWithType: CloudQueueMessage.MaxMessageSize
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxMessageSize
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxTimeToLive*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxTimeToLive
  isExternal: false
  name: MaxTimeToLive
  nameWithType: CloudQueueMessage.MaxTimeToLive
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxTimeToLive
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxNumberOfMessagesToPeek*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxNumberOfMessagesToPeek
  isExternal: false
  name: MaxNumberOfMessagesToPeek
  nameWithType: CloudQueueMessage.MaxNumberOfMessagesToPeek
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.MaxNumberOfMessagesToPeek
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.AsBytes*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.AsBytes
  isExternal: false
  name: AsBytes
  nameWithType: CloudQueueMessage.AsBytes
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.AsBytes
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.Id*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.Id
  isExternal: false
  name: Id
  nameWithType: CloudQueueMessage.Id
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.Id
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.PopReceipt*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.PopReceipt
  isExternal: false
  name: PopReceipt
  nameWithType: CloudQueueMessage.PopReceipt
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.PopReceipt
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.InsertionTime*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.InsertionTime
  isExternal: false
  name: InsertionTime
  nameWithType: CloudQueueMessage.InsertionTime
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.InsertionTime
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullname.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.ExpirationTime*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.ExpirationTime
  isExternal: false
  name: ExpirationTime
  nameWithType: CloudQueueMessage.ExpirationTime
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.ExpirationTime
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.NextVisibleTime*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.NextVisibleTime
  isExternal: false
  name: NextVisibleTime
  nameWithType: CloudQueueMessage.NextVisibleTime
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.NextVisibleTime
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.AsString*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.AsString
  isExternal: false
  name: AsString
  nameWithType: CloudQueueMessage.AsString
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.AsString
- uid: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.DequeueCount*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.DequeueCount
  isExternal: false
  name: DequeueCount
  nameWithType: CloudQueueMessage.DequeueCount
  fullName: Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage.DequeueCount
