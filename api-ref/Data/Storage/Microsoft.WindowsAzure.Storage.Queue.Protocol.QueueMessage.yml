### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage
  commentId: T:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage
  id: QueueMessage
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol
  children:
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.DequeueCount
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.ExpirationTime
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.Id
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.InsertionTime
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.NextVisibleTime
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.PopReceipt
  - Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.Text
  langs:
  - csharp
  - vb
  name: QueueMessage
  nameWithType: QueueMessage
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage
  type: Class
  source:
    remote:
      path: Lib/Common/Queue/Protocol/QueueMessage.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: QueueMessage
    path: Lib/Common/Queue/Protocol/QueueMessage.cs
    startLine: 25
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\nRepresents a message retrieved from a queue.\n"
  example: []
  syntax:
    content: public class QueueMessage
    content.vb: Public Class QueueMessage
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.ExpirationTime
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.ExpirationTime
  id: ExpirationTime
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage
  langs:
  - csharp
  - vb
  name: ExpirationTime
  nameWithType: QueueMessage.ExpirationTime
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.ExpirationTime
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/Protocol/QueueMessage.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExpirationTime
    path: Lib/Common/Queue/Protocol/QueueMessage.cs
    startLine: 41
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\nGets the message expiration time.\n"
  example: []
  syntax:
    content: public DateTimeOffset? ExpirationTime { get; }
    content.vb: Public ReadOnly Property ExpirationTime As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: The message expiration time.
  overload: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.ExpirationTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.Id
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.Id
  id: Id
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: QueueMessage.Id
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.Id
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/Protocol/QueueMessage.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Id
    path: Lib/Common/Queue/Protocol/QueueMessage.cs
    startLine: 47
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\nGets the message ID.\n"
  example: []
  syntax:
    content: public string Id { get; }
    content.vb: Public ReadOnly Property Id As String
    parameters: []
    return:
      type: System.String
      description: The message ID.
  overload: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.InsertionTime
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.InsertionTime
  id: InsertionTime
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage
  langs:
  - csharp
  - vb
  name: InsertionTime
  nameWithType: QueueMessage.InsertionTime
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.InsertionTime
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/Protocol/QueueMessage.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: InsertionTime
    path: Lib/Common/Queue/Protocol/QueueMessage.cs
    startLine: 53
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\nGets the time the message was added to the queue.\n"
  example: []
  syntax:
    content: public DateTimeOffset? InsertionTime { get; }
    content.vb: Public ReadOnly Property InsertionTime As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: The message insertion time.
  overload: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.InsertionTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.NextVisibleTime
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.NextVisibleTime
  id: NextVisibleTime
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage
  langs:
  - csharp
  - vb
  name: NextVisibleTime
  nameWithType: QueueMessage.NextVisibleTime
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.NextVisibleTime
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/Protocol/QueueMessage.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: NextVisibleTime
    path: Lib/Common/Queue/Protocol/QueueMessage.cs
    startLine: 59
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\nGets the time the message is next visible.\n"
  example: []
  syntax:
    content: public DateTimeOffset? NextVisibleTime { get; }
    content.vb: Public ReadOnly Property NextVisibleTime As DateTimeOffset?
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: The time the message is next visible.
  overload: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.NextVisibleTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.PopReceipt
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.PopReceipt
  id: PopReceipt
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage
  langs:
  - csharp
  - vb
  name: PopReceipt
  nameWithType: QueueMessage.PopReceipt
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.PopReceipt
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/Protocol/QueueMessage.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: PopReceipt
    path: Lib/Common/Queue/Protocol/QueueMessage.cs
    startLine: 65
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\nGets the pop receipt for the message.\n"
  example: []
  syntax:
    content: public string PopReceipt { get; }
    content.vb: Public ReadOnly Property PopReceipt As String
    parameters: []
    return:
      type: System.String
      description: The message's pop receipt.
  overload: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.PopReceipt*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.Text
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.Text
  id: Text
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: QueueMessage.Text
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.Text
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/Protocol/QueueMessage.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Text
    path: Lib/Common/Queue/Protocol/QueueMessage.cs
    startLine: 71
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\nGets the text of the message.\n"
  example: []
  syntax:
    content: public string Text { get; }
    content.vb: Public ReadOnly Property Text As String
    parameters: []
    return:
      type: System.String
      description: The message text.
  overload: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.Text*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.DequeueCount
  commentId: P:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.DequeueCount
  id: DequeueCount
  parent: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage
  langs:
  - csharp
  - vb
  name: DequeueCount
  nameWithType: QueueMessage.DequeueCount
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.DequeueCount
  type: Property
  source:
    remote:
      path: Lib/Common/Queue/Protocol/QueueMessage.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DequeueCount
    path: Lib/Common/Queue/Protocol/QueueMessage.cs
    startLine: 77
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Queue.Protocol
  summary: "\nGets the number of times this message has been dequeued.\n"
  example: []
  syntax:
    content: public int DequeueCount { get; }
    content.vb: Public ReadOnly Property DequeueCount As Integer
    parameters: []
    return:
      type: System.Int32
      description: The dequeue count.
  overload: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.DequeueCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol
  commentId: N:Microsoft.WindowsAzure.Storage.Queue.Protocol
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Queue.Protocol
  nameWithType: Microsoft.WindowsAzure.Storage.Queue.Protocol
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.ExpirationTime*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.ExpirationTime
  isExternal: false
  name: ExpirationTime
  nameWithType: QueueMessage.ExpirationTime
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.ExpirationTime
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullname.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.Id*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.Id
  isExternal: false
  name: Id
  nameWithType: QueueMessage.Id
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.InsertionTime*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.InsertionTime
  isExternal: false
  name: InsertionTime
  nameWithType: QueueMessage.InsertionTime
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.InsertionTime
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.NextVisibleTime*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.NextVisibleTime
  isExternal: false
  name: NextVisibleTime
  nameWithType: QueueMessage.NextVisibleTime
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.NextVisibleTime
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.PopReceipt*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.PopReceipt
  isExternal: false
  name: PopReceipt
  nameWithType: QueueMessage.PopReceipt
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.PopReceipt
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.Text*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.Text
  isExternal: false
  name: Text
  nameWithType: QueueMessage.Text
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.Text
- uid: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.DequeueCount*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.DequeueCount
  isExternal: false
  name: DequeueCount
  nameWithType: QueueMessage.DequeueCount
  fullName: Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueMessage.DequeueCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
