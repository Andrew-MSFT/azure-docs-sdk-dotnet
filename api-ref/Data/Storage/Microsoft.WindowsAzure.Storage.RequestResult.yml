### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.RequestResult
  commentId: T:Microsoft.WindowsAzure.Storage.RequestResult
  id: RequestResult
  parent: Microsoft.WindowsAzure.Storage
  children:
  - Microsoft.WindowsAzure.Storage.RequestResult.ContentMd5
  - Microsoft.WindowsAzure.Storage.RequestResult.EgressBytes
  - Microsoft.WindowsAzure.Storage.RequestResult.EndTime
  - Microsoft.WindowsAzure.Storage.RequestResult.Etag
  - Microsoft.WindowsAzure.Storage.RequestResult.Exception
  - Microsoft.WindowsAzure.Storage.RequestResult.ExtendedErrorInformation
  - Microsoft.WindowsAzure.Storage.RequestResult.HttpStatusCode
  - Microsoft.WindowsAzure.Storage.RequestResult.HttpStatusMessage
  - Microsoft.WindowsAzure.Storage.RequestResult.IngressBytes
  - Microsoft.WindowsAzure.Storage.RequestResult.IsRequestServerEncrypted
  - Microsoft.WindowsAzure.Storage.RequestResult.ReadXml(System.Xml.XmlReader)
  - Microsoft.WindowsAzure.Storage.RequestResult.RequestDate
  - Microsoft.WindowsAzure.Storage.RequestResult.ServiceRequestID
  - Microsoft.WindowsAzure.Storage.RequestResult.StartTime
  - Microsoft.WindowsAzure.Storage.RequestResult.TargetLocation
  - Microsoft.WindowsAzure.Storage.RequestResult.TranslateFromExceptionMessage(System.String)
  - Microsoft.WindowsAzure.Storage.RequestResult.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: RequestResult
  nameWithType: RequestResult
  fullName: Microsoft.WindowsAzure.Storage.RequestResult
  type: Class
  source:
    remote:
      path: Lib/Common/RequestResult.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RequestResult
    path: Lib/Common/RequestResult.cs
    startLine: 33
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nRepresents the result of a physical request.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public sealed class RequestResult
    content.vb: >-
      <Serializable>

      Public NotInheritable Class RequestResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.RequestResult.HttpStatusCode
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.HttpStatusCode
  id: HttpStatusCode
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: HttpStatusCode
  nameWithType: RequestResult.HttpStatusCode
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.HttpStatusCode
  type: Property
  source:
    remote:
      path: Lib/Common/RequestResult.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: HttpStatusCode
    path: Lib/Common/RequestResult.cs
    startLine: 43
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets or sets the HTTP status code for the request.\n"
  example: []
  syntax:
    content: public int HttpStatusCode { get; set; }
    content.vb: Public Property HttpStatusCode As Integer
    parameters: []
    return:
      type: System.Int32
      description: The HTTP status code for the request.
  overload: Microsoft.WindowsAzure.Storage.RequestResult.HttpStatusCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.RequestResult.HttpStatusMessage
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.HttpStatusMessage
  id: HttpStatusMessage
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: HttpStatusMessage
  nameWithType: RequestResult.HttpStatusMessage
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.HttpStatusMessage
  type: Property
  source:
    remote:
      path: Lib/Common/RequestResult.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: HttpStatusMessage
    path: Lib/Common/RequestResult.cs
    startLine: 49
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets the HTTP status message for the request.\n"
  example: []
  syntax:
    content: public string HttpStatusMessage { get; }
    content.vb: Public ReadOnly Property HttpStatusMessage As String
    parameters: []
    return:
      type: System.String
      description: The HTTP status message for the request.
  overload: Microsoft.WindowsAzure.Storage.RequestResult.HttpStatusMessage*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.RequestResult.ServiceRequestID
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.ServiceRequestID
  id: ServiceRequestID
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: ServiceRequestID
  nameWithType: RequestResult.ServiceRequestID
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.ServiceRequestID
  type: Property
  source:
    remote:
      path: Lib/Common/RequestResult.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ServiceRequestID
    path: Lib/Common/RequestResult.cs
    startLine: 55
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets the service request ID for this request.\n"
  example: []
  syntax:
    content: public string ServiceRequestID { get; }
    content.vb: Public ReadOnly Property ServiceRequestID As String
    parameters: []
    return:
      type: System.String
      description: The service request ID for this request.
  overload: Microsoft.WindowsAzure.Storage.RequestResult.ServiceRequestID*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.RequestResult.ContentMd5
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.ContentMd5
  id: ContentMd5
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: ContentMd5
  nameWithType: RequestResult.ContentMd5
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.ContentMd5
  type: Property
  source:
    remote:
      path: Lib/Common/RequestResult.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ContentMd5
    path: Lib/Common/RequestResult.cs
    startLine: 62
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets the content-MD5 value for the request. \n"
  example: []
  syntax:
    content: public string ContentMd5 { get; }
    content.vb: Public ReadOnly Property ContentMd5 As String
    parameters: []
    return:
      type: System.String
      description: The content-MD5 value for the request.
  overload: Microsoft.WindowsAzure.Storage.RequestResult.ContentMd5*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.RequestResult.Etag
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.Etag
  id: Etag
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: Etag
  nameWithType: RequestResult.Etag
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.Etag
  type: Property
  source:
    remote:
      path: Lib/Common/RequestResult.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Etag
    path: Lib/Common/RequestResult.cs
    startLine: 69
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets the ETag value of the request.\n"
  example: []
  syntax:
    content: public string Etag { get; }
    content.vb: Public ReadOnly Property Etag As String
    parameters: []
    return:
      type: System.String
      description: The ETag value of the request.
  overload: Microsoft.WindowsAzure.Storage.RequestResult.Etag*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.RequestResult.IngressBytes
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.IngressBytes
  id: IngressBytes
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: IngressBytes
  nameWithType: RequestResult.IngressBytes
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.IngressBytes
  type: Property
  source:
    remote:
      path: Lib/Common/RequestResult.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IngressBytes
    path: Lib/Common/RequestResult.cs
    startLine: 76
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nThe number of bytes read from the response body for the given request\n"
  example: []
  syntax:
    content: public long IngressBytes { get; set; }
    content.vb: Public Property IngressBytes As Long
    parameters: []
    return:
      type: System.Int64
  overload: Microsoft.WindowsAzure.Storage.RequestResult.IngressBytes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.RequestResult.EgressBytes
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.EgressBytes
  id: EgressBytes
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: EgressBytes
  nameWithType: RequestResult.EgressBytes
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.EgressBytes
  type: Property
  source:
    remote:
      path: Lib/Common/RequestResult.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EgressBytes
    path: Lib/Common/RequestResult.cs
    startLine: 81
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nThe number of bytes written to the request body for a given request\n"
  example: []
  syntax:
    content: public long EgressBytes { get; set; }
    content.vb: Public Property EgressBytes As Long
    parameters: []
    return:
      type: System.Int64
  overload: Microsoft.WindowsAzure.Storage.RequestResult.EgressBytes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.RequestResult.RequestDate
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.RequestDate
  id: RequestDate
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: RequestDate
  nameWithType: RequestResult.RequestDate
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.RequestDate
  type: Property
  source:
    remote:
      path: Lib/Common/RequestResult.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RequestDate
    path: Lib/Common/RequestResult.cs
    startLine: 87
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets the request date.\n"
  example: []
  syntax:
    content: public string RequestDate { get; }
    content.vb: Public ReadOnly Property RequestDate As String
    parameters: []
    return:
      type: System.String
      description: The request date.
  overload: Microsoft.WindowsAzure.Storage.RequestResult.RequestDate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.RequestResult.TargetLocation
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.TargetLocation
  id: TargetLocation
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: TargetLocation
  nameWithType: RequestResult.TargetLocation
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.TargetLocation
  type: Property
  source:
    remote:
      path: Lib/Common/RequestResult.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: TargetLocation
    path: Lib/Common/RequestResult.cs
    startLine: 93
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets the location to which the request was sent.\n"
  example: []
  syntax:
    content: public StorageLocation TargetLocation { get; }
    content.vb: Public ReadOnly Property TargetLocation As StorageLocation
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.StorageLocation
      description: A <xref href="Microsoft.WindowsAzure.Storage.StorageLocation" data-throw-if-not-resolved="false"></xref> enumeration value.
  overload: Microsoft.WindowsAzure.Storage.RequestResult.TargetLocation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.RequestResult.ExtendedErrorInformation
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.ExtendedErrorInformation
  id: ExtendedErrorInformation
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: ExtendedErrorInformation
  nameWithType: RequestResult.ExtendedErrorInformation
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.ExtendedErrorInformation
  type: Property
  source:
    remote:
      path: Lib/Common/RequestResult.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExtendedErrorInformation
    path: Lib/Common/RequestResult.cs
    startLine: 99
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets the extended error information.\n"
  example: []
  syntax:
    content: public StorageExtendedErrorInformation ExtendedErrorInformation { get; }
    content.vb: Public ReadOnly Property ExtendedErrorInformation As StorageExtendedErrorInformation
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation
      description: A <xref href="Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.RequestResult.ExtendedErrorInformation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.RequestResult.IsRequestServerEncrypted
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.IsRequestServerEncrypted
  id: IsRequestServerEncrypted
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: IsRequestServerEncrypted
  nameWithType: RequestResult.IsRequestServerEncrypted
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.IsRequestServerEncrypted
  type: Property
  source:
    remote:
      path: Lib/Common/RequestResult.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: IsRequestServerEncrypted
    path: Lib/Common/RequestResult.cs
    startLine: 104
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets whether or not the data for a write operation is encrypted server-side.\n"
  example: []
  syntax:
    content: public bool IsRequestServerEncrypted { get; }
    content.vb: Public ReadOnly Property IsRequestServerEncrypted As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.WindowsAzure.Storage.RequestResult.IsRequestServerEncrypted*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.RequestResult.Exception
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.Exception
  id: Exception
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: RequestResult.Exception
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.Exception
  type: Property
  source:
    remote:
      path: Lib/Common/RequestResult.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Exception
    path: Lib/Common/RequestResult.cs
    startLine: 110
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets or sets the exception.\n"
  example: []
  syntax:
    content: public Exception Exception { get; set; }
    content.vb: Public Property Exception As Exception
    parameters: []
    return:
      type: System.Exception
      description: An <xref href="System.Exception" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.RequestResult.Exception*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.RequestResult.StartTime
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.StartTime
  id: StartTime
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: StartTime
  nameWithType: RequestResult.StartTime
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.StartTime
  type: Property
  source:
    remote:
      path: Lib/Common/RequestResult.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: StartTime
    path: Lib/Common/RequestResult.cs
    startLine: 137
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets the start time of the operation.\n"
  example: []
  syntax:
    content: public DateTime StartTime { get; }
    content.vb: Public ReadOnly Property StartTime As Date
    parameters: []
    return:
      type: System.DateTime
      description: A <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> value indicating the start time of the operation.
  overload: Microsoft.WindowsAzure.Storage.RequestResult.StartTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.RequestResult.EndTime
  commentId: P:Microsoft.WindowsAzure.Storage.RequestResult.EndTime
  id: EndTime
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: EndTime
  nameWithType: RequestResult.EndTime
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.EndTime
  type: Property
  source:
    remote:
      path: Lib/Common/RequestResult.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndTime
    path: Lib/Common/RequestResult.cs
    startLine: 143
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets the end time of the operation.\n"
  example: []
  syntax:
    content: public DateTime EndTime { get; }
    content.vb: Public ReadOnly Property EndTime As Date
    parameters: []
    return:
      type: System.DateTime
      description: A <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> value indicating the end time of the operation.
  overload: Microsoft.WindowsAzure.Storage.RequestResult.EndTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.RequestResult.TranslateFromExceptionMessage(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.RequestResult.TranslateFromExceptionMessage(System.String)
  id: TranslateFromExceptionMessage(System.String)
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: TranslateFromExceptionMessage(String)
  nameWithType: RequestResult.TranslateFromExceptionMessage(String)
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.TranslateFromExceptionMessage(System.String)
  type: Method
  source:
    remote:
      path: Lib/Common/RequestResult.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: TranslateFromExceptionMessage
    path: Lib/Common/RequestResult.cs
    startLine: 151
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nTranslates the specified message into a <xref href=\"Microsoft.WindowsAzure.Storage.RequestResult\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This should be available only in Microsoft.WindowsAzure.Storage.WinMD and not in Microsoft.WindowsAzure.Storage.dll. Please use ReadXML to deserialize RequestResult when Microsoft.WindowsAzure.Storage.dll is used.")]

      public static RequestResult TranslateFromExceptionMessage(string message)
    content.vb: >-
      <Obsolete("This should be available only in Microsoft.WindowsAzure.Storage.WinMD and not in Microsoft.WindowsAzure.Storage.dll. Please use ReadXML to deserialize RequestResult when Microsoft.WindowsAzure.Storage.dll is used.")>

      Public Shared Function TranslateFromExceptionMessage(message As String) As RequestResult
    parameters:
    - id: message
      type: System.String
      description: The message to translate.
    return:
      type: Microsoft.WindowsAzure.Storage.RequestResult
      description: The translated <xref href="Microsoft.WindowsAzure.Storage.RequestResult" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.WindowsAzure.Storage.RequestResult.TranslateFromExceptionMessage*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This should be available only in Microsoft.WindowsAzure.Storage.WinMD and not in Microsoft.WindowsAzure.Storage.dll. Please use ReadXML to deserialize RequestResult when Microsoft.WindowsAzure.Storage.dll is used.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.RequestResult.ReadXml(System.Xml.XmlReader)
  commentId: M:Microsoft.WindowsAzure.Storage.RequestResult.ReadXml(System.Xml.XmlReader)
  id: ReadXml(System.Xml.XmlReader)
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  nameWithType: RequestResult.ReadXml(XmlReader)
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.ReadXml(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Lib/Common/RequestResult.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ReadXml
    path: Lib/Common/RequestResult.cs
    startLine: 194
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGenerates a serializable RequestResult from its XML representation.\n"
  example: []
  syntax:
    content: public void ReadXml(XmlReader reader)
    content.vb: Public Sub ReadXml(reader As XmlReader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The <xref href="System.Xml.XmlReader" data-throw-if-not-resolved="false"></xref> stream from which the RequestResult is deserialized.
  overload: Microsoft.WindowsAzure.Storage.RequestResult.ReadXml*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.RequestResult.WriteXml(System.Xml.XmlWriter)
  commentId: M:Microsoft.WindowsAzure.Storage.RequestResult.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: Microsoft.WindowsAzure.Storage.RequestResult
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: RequestResult.WriteXml(XmlWriter)
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Lib/Common/RequestResult.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: WriteXml
    path: Lib/Common/RequestResult.cs
    startLine: 243
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nConverts a serializable RequestResult into its XML representation.\n"
  example: []
  syntax:
    content: public void WriteXml(XmlWriter writer)
    content.vb: Public Sub WriteXml(writer As XmlWriter)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: The <xref href="System.Xml.XmlWriter" data-throw-if-not-resolved="false"></xref> stream to which the RequestResult is serialized.
  overload: Microsoft.WindowsAzure.Storage.RequestResult.WriteXml*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage
  commentId: N:Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  nameWithType: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.RequestResult.HttpStatusCode*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RequestResult.HttpStatusCode
  isExternal: false
  name: HttpStatusCode
  nameWithType: RequestResult.HttpStatusCode
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.HttpStatusCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.WindowsAzure.Storage.RequestResult.HttpStatusMessage*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RequestResult.HttpStatusMessage
  isExternal: false
  name: HttpStatusMessage
  nameWithType: RequestResult.HttpStatusMessage
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.HttpStatusMessage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.RequestResult.ServiceRequestID*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RequestResult.ServiceRequestID
  isExternal: false
  name: ServiceRequestID
  nameWithType: RequestResult.ServiceRequestID
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.ServiceRequestID
- uid: Microsoft.WindowsAzure.Storage.RequestResult.ContentMd5*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RequestResult.ContentMd5
  isExternal: false
  name: ContentMd5
  nameWithType: RequestResult.ContentMd5
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.ContentMd5
- uid: Microsoft.WindowsAzure.Storage.RequestResult.Etag*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RequestResult.Etag
  isExternal: false
  name: Etag
  nameWithType: RequestResult.Etag
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.Etag
- uid: Microsoft.WindowsAzure.Storage.RequestResult.IngressBytes*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RequestResult.IngressBytes
  isExternal: false
  name: IngressBytes
  nameWithType: RequestResult.IngressBytes
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.IngressBytes
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.WindowsAzure.Storage.RequestResult.EgressBytes*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RequestResult.EgressBytes
  isExternal: false
  name: EgressBytes
  nameWithType: RequestResult.EgressBytes
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.EgressBytes
- uid: Microsoft.WindowsAzure.Storage.RequestResult.RequestDate*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RequestResult.RequestDate
  isExternal: false
  name: RequestDate
  nameWithType: RequestResult.RequestDate
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.RequestDate
- uid: Microsoft.WindowsAzure.Storage.StorageLocation
  commentId: T:Microsoft.WindowsAzure.Storage.StorageLocation
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: StorageLocation
  nameWithType: StorageLocation
  fullName: Microsoft.WindowsAzure.Storage.StorageLocation
- uid: Microsoft.WindowsAzure.Storage.RequestResult.TargetLocation*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RequestResult.TargetLocation
  isExternal: false
  name: TargetLocation
  nameWithType: RequestResult.TargetLocation
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.TargetLocation
- uid: Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation
  commentId: T:Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: StorageExtendedErrorInformation
  nameWithType: StorageExtendedErrorInformation
  fullName: Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation
- uid: Microsoft.WindowsAzure.Storage.RequestResult.ExtendedErrorInformation*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RequestResult.ExtendedErrorInformation
  isExternal: false
  name: ExtendedErrorInformation
  nameWithType: RequestResult.ExtendedErrorInformation
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.ExtendedErrorInformation
- uid: Microsoft.WindowsAzure.Storage.RequestResult.IsRequestServerEncrypted*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RequestResult.IsRequestServerEncrypted
  isExternal: false
  name: IsRequestServerEncrypted
  nameWithType: RequestResult.IsRequestServerEncrypted
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.IsRequestServerEncrypted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.WindowsAzure.Storage.RequestResult.Exception*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RequestResult.Exception
  isExternal: false
  name: Exception
  nameWithType: RequestResult.Exception
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.Exception
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.WindowsAzure.Storage.RequestResult.StartTime*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RequestResult.StartTime
  isExternal: false
  name: StartTime
  nameWithType: RequestResult.StartTime
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.StartTime
- uid: Microsoft.WindowsAzure.Storage.RequestResult.EndTime*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RequestResult.EndTime
  isExternal: false
  name: EndTime
  nameWithType: RequestResult.EndTime
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.EndTime
- uid: Microsoft.WindowsAzure.Storage.RequestResult
  commentId: T:Microsoft.WindowsAzure.Storage.RequestResult
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: RequestResult
  nameWithType: RequestResult
  fullName: Microsoft.WindowsAzure.Storage.RequestResult
- uid: Microsoft.WindowsAzure.Storage.RequestResult.TranslateFromExceptionMessage*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RequestResult.TranslateFromExceptionMessage
  isExternal: false
  name: TranslateFromExceptionMessage
  nameWithType: RequestResult.TranslateFromExceptionMessage
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.TranslateFromExceptionMessage
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: Microsoft.WindowsAzure.Storage.RequestResult.ReadXml*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RequestResult.ReadXml
  isExternal: false
  name: ReadXml
  nameWithType: RequestResult.ReadXml
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.ReadXml
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: false
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: Microsoft.WindowsAzure.Storage.RequestResult.WriteXml*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RequestResult.WriteXml
  isExternal: false
  name: WriteXml
  nameWithType: RequestResult.WriteXml
  fullName: Microsoft.WindowsAzure.Storage.RequestResult.WriteXml
