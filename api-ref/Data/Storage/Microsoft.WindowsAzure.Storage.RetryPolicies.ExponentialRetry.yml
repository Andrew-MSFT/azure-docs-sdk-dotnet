### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry
  commentId: T:Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry
  id: ExponentialRetry
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies
  children:
  - Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.#ctor
  - Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.#ctor(System.TimeSpan,System.Int32)
  - Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.CreateInstance
  - Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.Evaluate(Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.WindowsAzure.Storage.OperationContext)
  langs:
  - csharp
  - vb
  name: ExponentialRetry
  nameWithType: ExponentialRetry
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry
  type: Class
  source:
    remote:
      path: Lib/Common/RetryPolicies/ExponentialRetry.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExponentialRetry
    path: Lib/Common/RetryPolicies/ExponentialRetry.cs
    startLine: 28
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.RetryPolicies
  summary: "\nRepresents a retry policy that performs a specified number of retries, using a randomized exponential back off scheme to determine the interval between retries. \n"
  example: []
  syntax:
    content: 'public sealed class ExponentialRetry : IExtendedRetryPolicy, IRetryPolicy'
    content.vb: >-
      Public NotInheritable Class ExponentialRetry
          Implements IExtendedRetryPolicy, IRetryPolicy
  inheritance:
  - System.Object
  implements:
  - Microsoft.WindowsAzure.Storage.RetryPolicies.IExtendedRetryPolicy
  - Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry
  langs:
  - csharp
  - vb
  name: ExponentialRetry()
  nameWithType: ExponentialRetry.ExponentialRetry()
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.ExponentialRetry()
  type: Constructor
  source:
    remote:
      path: Lib/Common/RetryPolicies/ExponentialRetry.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/RetryPolicies/ExponentialRetry.cs
    startLine: 43
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.RetryPolicies
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public ExponentialRetry()
    content.vb: Public Sub New
  overload: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.#ctor(System.TimeSpan,System.Int32)
  commentId: M:Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.#ctor(System.TimeSpan,System.Int32)
  id: '#ctor(System.TimeSpan,System.Int32)'
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry
  langs:
  - csharp
  - vb
  name: ExponentialRetry(TimeSpan, Int32)
  nameWithType: ExponentialRetry.ExponentialRetry(TimeSpan, Int32)
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.ExponentialRetry(System.TimeSpan, System.Int32)
  type: Constructor
  source:
    remote:
      path: Lib/Common/RetryPolicies/ExponentialRetry.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/RetryPolicies/ExponentialRetry.cs
    startLine: 53
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.RetryPolicies
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry\" data-throw-if-not-resolved=\"false\"></xref> class using the specified delta and maximum number of retries.\n"
  example: []
  syntax:
    content: public ExponentialRetry(TimeSpan deltaBackoff, int maxAttempts)
    content.vb: Public Sub New(deltaBackoff As TimeSpan, maxAttempts As Integer)
    parameters:
    - id: deltaBackoff
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> specifying the back-off interval between retries.
    - id: maxAttempts
      type: System.Int32
      description: An integer specifying the maximum number of retry attempts.
  overload: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry
  langs:
  - csharp
  - vb
  name: ShouldRetry(Int32, Int32, Exception, out TimeSpan, OperationContext)
  nameWithType: ExponentialRetry.ShouldRetry(Int32, Int32, Exception, out TimeSpan, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.ShouldRetry(System.Int32, System.Int32, System.Exception, out System.TimeSpan, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/Common/RetryPolicies/ExponentialRetry.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ShouldRetry
    path: Lib/Common/RetryPolicies/ExponentialRetry.cs
    startLine: 69
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.RetryPolicies
  summary: "\nDetermines whether the operation should be retried and the interval until the next retry.\n"
  example: []
  syntax:
    content: public bool ShouldRetry(int currentRetryCount, int statusCode, Exception lastException, out TimeSpan retryInterval, OperationContext operationContext)
    content.vb: Public Function ShouldRetry(currentRetryCount As Integer, statusCode As Integer, lastException As Exception, ByRef retryInterval As TimeSpan, operationContext As OperationContext) As Boolean
    parameters:
    - id: currentRetryCount
      type: System.Int32
      description: An integer specifying the number of retries for the given operation. A value of zero signifies this is the first error encountered.
    - id: statusCode
      type: System.Int32
      description: An integer containing the status code for the last operation.
    - id: lastException
      type: System.Exception
      description: An <xref href="System.Exception" data-throw-if-not-resolved="false"></xref> object that represents the last exception encountered.
    - id: retryInterval
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> indicating the interval to wait until the next retry.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Boolean
      description: <code>true</code> if the operation should be retried; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.ShouldRetry*
  implements:
  - Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.WindowsAzure.Storage.OperationContext)
  nameWithType.vb: ExponentialRetry.ShouldRetry(Int32, Int32, Exception, ByRef TimeSpan, OperationContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.ShouldRetry(System.Int32, System.Int32, System.Exception, ByRef System.TimeSpan, Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: ShouldRetry(Int32, Int32, Exception, ByRef TimeSpan, OperationContext)
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.Evaluate(Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.Evaluate(Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext,Microsoft.WindowsAzure.Storage.OperationContext)
  id: Evaluate(Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry
  langs:
  - csharp
  - vb
  name: Evaluate(RetryContext, OperationContext)
  nameWithType: ExponentialRetry.Evaluate(RetryContext, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.Evaluate(Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/Common/RetryPolicies/ExponentialRetry.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Evaluate
    path: Lib/Common/RetryPolicies/ExponentialRetry.cs
    startLine: 105
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.RetryPolicies
  summary: "\nDetermines whether the operation should be retried and the interval until the next retry.\n"
  example: []
  syntax:
    content: public RetryInfo Evaluate(RetryContext retryContext, OperationContext operationContext)
    content.vb: Public Function Evaluate(retryContext As RetryContext, operationContext As OperationContext) As RetryInfo
    parameters:
    - id: retryContext
      type: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext
      description: A <xref href="Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext" data-throw-if-not-resolved="false"></xref> object that indicates the number of retries, the results of the last request, and whether the next retry should happen in the primary or secondary location, and specifies the location mode.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo
      description: A <xref href="Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo" data-throw-if-not-resolved="false"></xref> object that indicates the location mode, and whether the next retry should happen in the primary or secondary location. If <code>null</code>, the operation will not be retried.
  overload: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.Evaluate*
  implements:
  - Microsoft.WindowsAzure.Storage.RetryPolicies.IExtendedRetryPolicy.Evaluate(Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext,Microsoft.WindowsAzure.Storage.OperationContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.CreateInstance
  commentId: M:Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.CreateInstance
  id: CreateInstance
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry
  langs:
  - csharp
  - vb
  name: CreateInstance()
  nameWithType: ExponentialRetry.CreateInstance()
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.CreateInstance()
  type: Method
  source:
    remote:
      path: Lib/Common/RetryPolicies/ExponentialRetry.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: CreateInstance
    path: Lib/Common/RetryPolicies/ExponentialRetry.cs
    startLine: 171
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.RetryPolicies
  summary: "\nGenerates a new retry policy for the current request attempt.\n"
  example: []
  syntax:
    content: public IRetryPolicy CreateInstance()
    content.vb: Public Function CreateInstance As IRetryPolicy
    return:
      type: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
      description: An <xref href="Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy" data-throw-if-not-resolved="false"></xref> object that represents the retry policy for the current request attempt.
  overload: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.CreateInstance*
  implements:
  - Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.CreateInstance
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies
  commentId: N:Microsoft.WindowsAzure.Storage.RetryPolicies
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.RetryPolicies
  nameWithType: Microsoft.WindowsAzure.Storage.RetryPolicies
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.IExtendedRetryPolicy
  commentId: T:Microsoft.WindowsAzure.Storage.RetryPolicies.IExtendedRetryPolicy
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies
  isExternal: false
  name: IExtendedRetryPolicy
  nameWithType: IExtendedRetryPolicy
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.IExtendedRetryPolicy
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
  commentId: T:Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies
  isExternal: false
  name: IRetryPolicy
  nameWithType: IRetryPolicy
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry
  commentId: T:Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry
  isExternal: false
  name: ExponentialRetry
  nameWithType: ExponentialRetry
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.#ctor
  isExternal: false
  name: ExponentialRetry
  nameWithType: ExponentialRetry.ExponentialRetry
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.ExponentialRetry
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  commentId: T:Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  nameWithType: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.ShouldRetry*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.ShouldRetry
  isExternal: false
  name: ShouldRetry
  nameWithType: ExponentialRetry.ShouldRetry
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.ShouldRetry
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
  isExternal: true
  name: ShouldRetry(Int32, Int32, Exception, TimeSpan, OperationContext)
  nameWithType: IRetryPolicy.ShouldRetry(Int32, Int32, Exception, TimeSpan, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.ShouldRetry(System.Int32, System.Int32, System.Exception, System.TimeSpan, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.WindowsAzure.Storage.OperationContext)
    name: ShouldRetry
    nameWithType: IRetryPolicy.ShouldRetry
    fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.ShouldRetry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.ShouldRetry(System.Int32,System.Int32,System.Exception,System.TimeSpan@,Microsoft.WindowsAzure.Storage.OperationContext)
    name: ShouldRetry
    nameWithType: IRetryPolicy.ShouldRetry
    fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.ShouldRetry
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.WindowsAzure.Storage
  commentId: N:Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  nameWithType: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext
  commentId: T:Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies
  isExternal: false
  name: RetryContext
  nameWithType: RetryContext
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo
  commentId: T:Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies
  isExternal: false
  name: RetryInfo
  nameWithType: RetryInfo
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.Evaluate*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.Evaluate
  isExternal: false
  name: Evaluate
  nameWithType: ExponentialRetry.Evaluate
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.Evaluate
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.IExtendedRetryPolicy.Evaluate(Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.RetryPolicies.IExtendedRetryPolicy.Evaluate(Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies.IExtendedRetryPolicy
  isExternal: false
  name: Evaluate(RetryContext, OperationContext)
  nameWithType: IExtendedRetryPolicy.Evaluate(RetryContext, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.IExtendedRetryPolicy.Evaluate(Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext, Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.RetryPolicies.IExtendedRetryPolicy.Evaluate(Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext,Microsoft.WindowsAzure.Storage.OperationContext)
    name: Evaluate
    nameWithType: IExtendedRetryPolicy.Evaluate
    fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.IExtendedRetryPolicy.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext
    name: RetryContext
    nameWithType: RetryContext
    fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.RetryPolicies.IExtendedRetryPolicy.Evaluate(Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext,Microsoft.WindowsAzure.Storage.OperationContext)
    name: Evaluate
    nameWithType: IExtendedRetryPolicy.Evaluate
    fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.IExtendedRetryPolicy.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext
    name: RetryContext
    nameWithType: RetryContext
    fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.CreateInstance*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.CreateInstance
  isExternal: false
  name: CreateInstance
  nameWithType: ExponentialRetry.CreateInstance
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry.CreateInstance
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.CreateInstance
  commentId: M:Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.CreateInstance
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
  isExternal: false
  name: CreateInstance()
  nameWithType: IRetryPolicy.CreateInstance()
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.CreateInstance()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.CreateInstance
    name: CreateInstance
    nameWithType: IRetryPolicy.CreateInstance
    fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.CreateInstance
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.CreateInstance
    name: CreateInstance
    nameWithType: IRetryPolicy.CreateInstance
    fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy.CreateInstance
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
