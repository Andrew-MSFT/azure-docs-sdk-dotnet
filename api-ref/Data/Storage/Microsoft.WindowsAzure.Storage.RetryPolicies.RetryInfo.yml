### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo
  commentId: T:Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo
  id: RetryInfo
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies
  children:
  - Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.#ctor
  - Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.#ctor(Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext)
  - Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.RetryInterval
  - Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.TargetLocation
  - Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.ToString
  - Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.UpdatedLocationMode
  langs:
  - csharp
  - vb
  name: RetryInfo
  nameWithType: RetryInfo
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo
  type: Class
  source:
    remote:
      path: Lib/Common/RetryPolicies/RetryInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RetryInfo
    path: Lib/Common/RetryPolicies/RetryInfo.cs
    startLine: 27
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.RetryPolicies
  summary: "\nSpecifies parameters for the next retry of a request to be made against the Microsoft Azure storage services,\nincluding the target location and location mode for the next retry and the interval until the next retry.\n"
  example: []
  syntax:
    content: public sealed class RetryInfo
    content.vb: Public NotInheritable Class RetryInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo
  langs:
  - csharp
  - vb
  name: RetryInfo()
  nameWithType: RetryInfo.RetryInfo()
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.RetryInfo()
  type: Constructor
  source:
    remote:
      path: Lib/Common/RetryPolicies/RetryInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/RetryPolicies/RetryInfo.cs
    startLine: 34
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.RetryPolicies
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public RetryInfo()
    content.vb: Public Sub New
  overload: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.#ctor(Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext)
  commentId: M:Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.#ctor(Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext)
  id: '#ctor(Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext)'
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo
  langs:
  - csharp
  - vb
  name: RetryInfo(RetryContext)
  nameWithType: RetryInfo.RetryInfo(RetryContext)
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.RetryInfo(Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext)
  type: Constructor
  source:
    remote:
      path: Lib/Common/RetryPolicies/RetryInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/RetryPolicies/RetryInfo.cs
    startLine: 44
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.RetryPolicies
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public RetryInfo(RetryContext retryContext)
    content.vb: Public Sub New(retryContext As RetryContext)
    parameters:
    - id: retryContext
      type: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext
      description: The <xref href="Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext" data-throw-if-not-resolved="false"></xref> object that was passed in to the retry policy.
  overload: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.TargetLocation
  commentId: P:Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.TargetLocation
  id: TargetLocation
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo
  langs:
  - csharp
  - vb
  name: TargetLocation
  nameWithType: RetryInfo.TargetLocation
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.TargetLocation
  type: Property
  source:
    remote:
      path: Lib/Common/RetryPolicies/RetryInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: TargetLocation
    path: Lib/Common/RetryPolicies/RetryInfo.cs
    startLine: 55
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.RetryPolicies
  summary: "\nGets or sets the target location for the next retry.\n"
  example: []
  syntax:
    content: public StorageLocation TargetLocation { get; set; }
    content.vb: Public Property TargetLocation As StorageLocation
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.StorageLocation
      description: A <xref href="Microsoft.WindowsAzure.Storage.StorageLocation" data-throw-if-not-resolved="false"></xref> enumeration value.
  overload: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.TargetLocation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.UpdatedLocationMode
  commentId: P:Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.UpdatedLocationMode
  id: UpdatedLocationMode
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo
  langs:
  - csharp
  - vb
  name: UpdatedLocationMode
  nameWithType: RetryInfo.UpdatedLocationMode
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.UpdatedLocationMode
  type: Property
  source:
    remote:
      path: Lib/Common/RetryPolicies/RetryInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: UpdatedLocationMode
    path: Lib/Common/RetryPolicies/RetryInfo.cs
    startLine: 61
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.RetryPolicies
  summary: "\nGets or sets the location mode for subsequent retries.\n"
  example: []
  syntax:
    content: public LocationMode UpdatedLocationMode { get; set; }
    content.vb: Public Property UpdatedLocationMode As LocationMode
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode
      description: A <xref href="Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode" data-throw-if-not-resolved="false"></xref> enumeration value.
  overload: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.UpdatedLocationMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.RetryInterval
  commentId: P:Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.RetryInterval
  id: RetryInterval
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo
  langs:
  - csharp
  - vb
  name: RetryInterval
  nameWithType: RetryInfo.RetryInterval
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.RetryInterval
  type: Property
  source:
    remote:
      path: Lib/Common/RetryPolicies/RetryInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RetryInterval
    path: Lib/Common/RetryPolicies/RetryInfo.cs
    startLine: 67
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.RetryPolicies
  summary: "\nGets the interval until the next retry.\n"
  example: []
  syntax:
    content: public TimeSpan RetryInterval { get; set; }
    content.vb: Public Property RetryInterval As TimeSpan
    parameters: []
    return:
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> object specifying the interval until the next retry.
  overload: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.RetryInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.ToString
  commentId: M:Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.ToString
  id: ToString
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RetryInfo.ToString()
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.ToString()
  type: Method
  source:
    remote:
      path: Lib/Common/RetryPolicies/RetryInfo.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ToString
    path: Lib/Common/RetryPolicies/RetryInfo.cs
    startLine: 84
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.RetryPolicies
  summary: "\nReturns a string that represents the current <xref href=\"Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string that represents the current <xref href="Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo" data-throw-if-not-resolved="false"></xref> instance.
  overridden: System.Object.ToString
  overload: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies
  commentId: N:Microsoft.WindowsAzure.Storage.RetryPolicies
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.RetryPolicies
  nameWithType: Microsoft.WindowsAzure.Storage.RetryPolicies
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo
  commentId: T:Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies
  isExternal: false
  name: RetryInfo
  nameWithType: RetryInfo
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.#ctor
  isExternal: false
  name: RetryInfo
  nameWithType: RetryInfo.RetryInfo
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.RetryInfo
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext
  commentId: T:Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies
  isExternal: false
  name: RetryContext
  nameWithType: RetryContext
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryContext
- uid: Microsoft.WindowsAzure.Storage.StorageLocation
  commentId: T:Microsoft.WindowsAzure.Storage.StorageLocation
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: StorageLocation
  nameWithType: StorageLocation
  fullName: Microsoft.WindowsAzure.Storage.StorageLocation
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.TargetLocation*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.TargetLocation
  isExternal: false
  name: TargetLocation
  nameWithType: RetryInfo.TargetLocation
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.TargetLocation
- uid: Microsoft.WindowsAzure.Storage
  commentId: N:Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  nameWithType: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode
  commentId: T:Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies
  isExternal: false
  name: LocationMode
  nameWithType: LocationMode
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.UpdatedLocationMode*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.UpdatedLocationMode
  isExternal: false
  name: UpdatedLocationMode
  nameWithType: RetryInfo.UpdatedLocationMode
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.UpdatedLocationMode
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.RetryInterval*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.RetryInterval
  isExternal: false
  name: RetryInterval
  nameWithType: RetryInfo.RetryInterval
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.RetryInterval
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.ToString*
  commentId: Overload:Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.ToString
  isExternal: false
  name: ToString
  nameWithType: RetryInfo.ToString
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.RetryInfo.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
