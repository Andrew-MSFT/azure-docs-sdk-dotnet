### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants
  commentId: T:Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants
  id: Constants.EncryptionConstants
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol
  children:
  - Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants.AgentMetadataKey
  - Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants.AgentMetadataValue
  - Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants.BlobEncryptionData
  - Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants.TableEncryptionKeyDetails
  - Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants.TableEncryptionPropertyDetails
  langs:
  - csharp
  - vb
  name: Constants.EncryptionConstants
  nameWithType: Constants.EncryptionConstants
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants
  type: Class
  source:
    remote:
      path: Lib/Common/Shared/Protocol/Constants.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EncryptionConstants
    path: Lib/Common/Shared/Protocol/Constants.cs
    startLine: 1568
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Shared.Protocol
  summary: "\nConstants for client encryption.\n"
  example: []
  syntax:
    content: public static class EncryptionConstants
    content.vb: Public Module EncryptionConstants
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants.BlobEncryptionData
  commentId: F:Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants.BlobEncryptionData
  id: BlobEncryptionData
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants
  langs:
  - csharp
  - vb
  name: BlobEncryptionData
  nameWithType: Constants.EncryptionConstants.BlobEncryptionData
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants.BlobEncryptionData
  type: Field
  source:
    remote:
      path: Lib/Common/Shared/Protocol/Constants.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BlobEncryptionData
    path: Lib/Common/Shared/Protocol/Constants.cs
    startLine: 1584
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Shared.Protocol
  summary: "\nMetadata header to store encryption materials.\n"
  example: []
  syntax:
    content: public const string BlobEncryptionData = "encryptiondata"
    content.vb: Public Const BlobEncryptionData As String = "encryptiondata"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants.TableEncryptionKeyDetails
  commentId: F:Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants.TableEncryptionKeyDetails
  id: TableEncryptionKeyDetails
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants
  langs:
  - csharp
  - vb
  name: TableEncryptionKeyDetails
  nameWithType: Constants.EncryptionConstants.TableEncryptionKeyDetails
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants.TableEncryptionKeyDetails
  type: Field
  source:
    remote:
      path: Lib/Common/Shared/Protocol/Constants.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: TableEncryptionKeyDetails
    path: Lib/Common/Shared/Protocol/Constants.cs
    startLine: 1589
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Shared.Protocol
  summary: "\nProperty name to store the encryption metadata.\n"
  example: []
  syntax:
    content: public const string TableEncryptionKeyDetails = "_ClientEncryptionMetadata1"
    content.vb: Public Const TableEncryptionKeyDetails As String = "_ClientEncryptionMetadata1"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants.TableEncryptionPropertyDetails
  commentId: F:Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants.TableEncryptionPropertyDetails
  id: TableEncryptionPropertyDetails
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants
  langs:
  - csharp
  - vb
  name: TableEncryptionPropertyDetails
  nameWithType: Constants.EncryptionConstants.TableEncryptionPropertyDetails
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants.TableEncryptionPropertyDetails
  type: Field
  source:
    remote:
      path: Lib/Common/Shared/Protocol/Constants.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: TableEncryptionPropertyDetails
    path: Lib/Common/Shared/Protocol/Constants.cs
    startLine: 1594
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Shared.Protocol
  summary: "\nAdditional property name to store the encryption metadata.\n"
  example: []
  syntax:
    content: public const string TableEncryptionPropertyDetails = "_ClientEncryptionMetadata2"
    content.vb: Public Const TableEncryptionPropertyDetails As String = "_ClientEncryptionMetadata2"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants.AgentMetadataKey
  commentId: F:Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants.AgentMetadataKey
  id: AgentMetadataKey
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants
  langs:
  - csharp
  - vb
  name: AgentMetadataKey
  nameWithType: Constants.EncryptionConstants.AgentMetadataKey
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants.AgentMetadataKey
  type: Field
  source:
    remote:
      path: Lib/Common/Shared/Protocol/Constants.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AgentMetadataKey
    path: Lib/Common/Shared/Protocol/Constants.cs
    startLine: 1599
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Shared.Protocol
  summary: "\nKey for the encryption agent\n"
  example: []
  syntax:
    content: public const string AgentMetadataKey = "EncryptionLibrary"
    content.vb: Public Const AgentMetadataKey As String = "EncryptionLibrary"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants.AgentMetadataValue
  commentId: F:Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants.AgentMetadataValue
  id: AgentMetadataValue
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants
  langs:
  - csharp
  - vb
  name: AgentMetadataValue
  nameWithType: Constants.EncryptionConstants.AgentMetadataValue
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.Constants.EncryptionConstants.AgentMetadataValue
  type: Field
  source:
    remote:
      path: Lib/Common/Shared/Protocol/Constants.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AgentMetadataValue
    path: Lib/Common/Shared/Protocol/Constants.cs
    startLine: 1604
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Shared.Protocol
  summary: "\nValue for the encryption agent\n"
  example: []
  syntax:
    content: public const string AgentMetadataValue = ".NET 7.2.1"
    content.vb: Public Const AgentMetadataValue As String = ".NET 7.2.1"
    return:
      type: System.String
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol
  commentId: N:Microsoft.WindowsAzure.Storage.Shared.Protocol
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Shared.Protocol
  nameWithType: Microsoft.WindowsAzure.Storage.Shared.Protocol
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
