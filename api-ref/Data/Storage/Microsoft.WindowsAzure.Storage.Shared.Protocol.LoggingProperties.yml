### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties
  commentId: T:Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties
  id: LoggingProperties
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol
  children:
  - Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.#ctor
  - Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.#ctor(System.String)
  - Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.LoggingOperations
  - Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.RetentionDays
  - Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.Version
  langs:
  - csharp
  - vb
  name: LoggingProperties
  nameWithType: LoggingProperties
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties
  type: Class
  source:
    remote:
      path: Lib/Common/Shared/Protocol/LoggingProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: LoggingProperties
    path: Lib/Common/Shared/Protocol/LoggingProperties.cs
    startLine: 22
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Shared.Protocol
  summary: "\nClass representing the service properties pertaining to logging.\n"
  example: []
  syntax:
    content: public sealed class LoggingProperties
    content.vb: Public NotInheritable Class LoggingProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties
  langs:
  - csharp
  - vb
  name: LoggingProperties()
  nameWithType: LoggingProperties.LoggingProperties()
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.LoggingProperties()
  type: Constructor
  source:
    remote:
      path: Lib/Common/Shared/Protocol/LoggingProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Shared/Protocol/LoggingProperties.cs
    startLine: 27
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Shared.Protocol
  summary: "\nInitializes a new instance of the LoggingProperties class.\n"
  example: []
  syntax:
    content: public LoggingProperties()
    content.vb: Public Sub New
  overload: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.#ctor(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties
  langs:
  - csharp
  - vb
  name: LoggingProperties(String)
  nameWithType: LoggingProperties.LoggingProperties(String)
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.LoggingProperties(System.String)
  type: Constructor
  source:
    remote:
      path: Lib/Common/Shared/Protocol/LoggingProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Shared/Protocol/LoggingProperties.cs
    startLine: 35
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Shared.Protocol
  summary: "\nInitializes a new instance of the LoggingProperties class.\n"
  example: []
  syntax:
    content: public LoggingProperties(string version)
    content.vb: Public Sub New(version As String)
    parameters:
    - id: version
      type: System.String
  overload: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.Version
  commentId: P:Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.Version
  id: Version
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: LoggingProperties.Version
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.Version
  type: Property
  source:
    remote:
      path: Lib/Common/Shared/Protocol/LoggingProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Version
    path: Lib/Common/Shared/Protocol/LoggingProperties.cs
    startLine: 44
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Shared.Protocol
  summary: "\nGets or sets the version of the analytics service.\n"
  example: []
  syntax:
    content: public string Version { get; set; }
    content.vb: Public Property Version As String
    parameters: []
    return:
      type: System.String
      description: A string identifying the version of the service.
  overload: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.Version*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.LoggingOperations
  commentId: P:Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.LoggingOperations
  id: LoggingOperations
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties
  langs:
  - csharp
  - vb
  name: LoggingOperations
  nameWithType: LoggingProperties.LoggingOperations
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.LoggingOperations
  type: Property
  source:
    remote:
      path: Lib/Common/Shared/Protocol/LoggingProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: LoggingOperations
    path: Lib/Common/Shared/Protocol/LoggingProperties.cs
    startLine: 54
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Shared.Protocol
  summary: "\nGets or sets the state of logging.\n"
  example: []
  syntax:
    content: public LoggingOperations LoggingOperations { get; set; }
    content.vb: Public Property LoggingOperations As LoggingOperations
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingOperations
      description: A combination of <xref href="Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.LoggingOperations" data-throw-if-not-resolved="false"></xref> flags describing the operations that are logged.
  overload: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.LoggingOperations*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.RetentionDays
  commentId: P:Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.RetentionDays
  id: RetentionDays
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties
  langs:
  - csharp
  - vb
  name: RetentionDays
  nameWithType: LoggingProperties.RetentionDays
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.RetentionDays
  type: Property
  source:
    remote:
      path: Lib/Common/Shared/Protocol/LoggingProperties.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RetentionDays
    path: Lib/Common/Shared/Protocol/LoggingProperties.cs
    startLine: 64
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Shared.Protocol
  summary: "\nGets or sets the logging retention policy.\n"
  example: []
  syntax:
    content: public int ? RetentionDays { get; set; }
    content.vb: Public Property RetentionDays As Integer?
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: The number of days to retain the logs.
  overload: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.RetentionDays*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol
  commentId: N:Microsoft.WindowsAzure.Storage.Shared.Protocol
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Shared.Protocol
  nameWithType: Microsoft.WindowsAzure.Storage.Shared.Protocol
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.#ctor
  isExternal: false
  name: LoggingProperties
  nameWithType: LoggingProperties.LoggingProperties
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.LoggingProperties
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.Version*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.Version
  isExternal: false
  name: Version
  nameWithType: LoggingProperties.Version
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.Version
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.LoggingOperations
  commentId: P:Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.LoggingOperations
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.LoggingOperations*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.LoggingOperations
  isExternal: false
  name: LoggingOperations
  nameWithType: LoggingProperties.LoggingOperations
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.LoggingOperations
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingOperations
  commentId: T:Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingOperations
  parent: Microsoft.WindowsAzure.Storage.Shared.Protocol
  isExternal: false
  name: LoggingOperations
  nameWithType: LoggingOperations
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingOperations
- uid: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.RetentionDays*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.RetentionDays
  isExternal: false
  name: RetentionDays
  nameWithType: LoggingProperties.RetentionDays
  fullName: Microsoft.WindowsAzure.Storage.Shared.Protocol.LoggingProperties.RetentionDays
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullname.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
