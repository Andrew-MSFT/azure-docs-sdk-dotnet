### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.StorageException
  commentId: T:Microsoft.WindowsAzure.Storage.StorageException
  id: StorageException
  parent: Microsoft.WindowsAzure.Storage
  children:
  - Microsoft.WindowsAzure.Storage.StorageException.#ctor
  - Microsoft.WindowsAzure.Storage.StorageException.#ctor(Microsoft.WindowsAzure.Storage.RequestResult,System.String,System.Exception)
  - Microsoft.WindowsAzure.Storage.StorageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - Microsoft.WindowsAzure.Storage.StorageException.#ctor(System.String)
  - Microsoft.WindowsAzure.Storage.StorageException.#ctor(System.String,System.Exception)
  - Microsoft.WindowsAzure.Storage.StorageException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - Microsoft.WindowsAzure.Storage.StorageException.RequestInformation
  - Microsoft.WindowsAzure.Storage.StorageException.ToString
  - Microsoft.WindowsAzure.Storage.StorageException.TranslateException(System.Exception,Microsoft.WindowsAzure.Storage.RequestResult)
  - Microsoft.WindowsAzure.Storage.StorageException.TranslateException(System.Exception,Microsoft.WindowsAzure.Storage.RequestResult,System.Func{System.IO.Stream,Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation})
  langs:
  - csharp
  - vb
  name: StorageException
  nameWithType: StorageException
  fullName: Microsoft.WindowsAzure.Storage.StorageException
  type: Class
  source:
    remote:
      path: Lib/Common/StorageException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: StorageException
    path: Lib/Common/StorageException.cs
    startLine: 43
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nRepresents an exception thrown by the Azure Storage service.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class StorageException : Exception, ISerializable, _Exception
    content.vb: >-
      <Serializable>

      Public Class StorageException
          Inherits Exception
          Implements ISerializable, _Exception
  inheritance:
  - System.Object
  - System.Exception
  implements:
  - System.Runtime.Serialization.ISerializable
  - System.Runtime.InteropServices._Exception
  inheritedMembers:
  - System.Exception.GetBaseException
  - System.Exception.GetType
  - System.Exception.Message
  - System.Exception.Data
  - System.Exception.InnerException
  - System.Exception.TargetSite
  - System.Exception.StackTrace
  - System.Exception.HelpLink
  - System.Exception.Source
  - System.Exception.HResult
  - System.Exception.SerializeObjectState
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.StorageException.RequestInformation
  commentId: P:Microsoft.WindowsAzure.Storage.StorageException.RequestInformation
  id: RequestInformation
  parent: Microsoft.WindowsAzure.Storage.StorageException
  langs:
  - csharp
  - vb
  name: RequestInformation
  nameWithType: StorageException.RequestInformation
  fullName: Microsoft.WindowsAzure.Storage.StorageException.RequestInformation
  type: Property
  source:
    remote:
      path: Lib/Common/StorageException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RequestInformation
    path: Lib/Common/StorageException.cs
    startLine: 52
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nGets the <xref href=\"Microsoft.WindowsAzure.Storage.RequestResult\" data-throw-if-not-resolved=\"false\"></xref> object for this <xref href=\"Microsoft.WindowsAzure.Storage.StorageException\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public RequestResult RequestInformation { get; }
    content.vb: Public ReadOnly Property RequestInformation As RequestResult
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.RequestResult
      description: The <xref href="Microsoft.WindowsAzure.Storage.RequestResult" data-throw-if-not-resolved="false"></xref> object for this <xref href="Microsoft.WindowsAzure.Storage.StorageException" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.StorageException.RequestInformation*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.StorageException.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.StorageException.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.StorageException
  langs:
  - csharp
  - vb
  name: StorageException()
  nameWithType: StorageException.StorageException()
  fullName: Microsoft.WindowsAzure.Storage.StorageException.StorageException()
  type: Constructor
  source:
    remote:
      path: Lib/Common/StorageException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/StorageException.cs
    startLine: 62
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.StorageException\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public StorageException()
    content.vb: Public Sub New
  overload: Microsoft.WindowsAzure.Storage.StorageException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.StorageException.#ctor(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.StorageException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.WindowsAzure.Storage.StorageException
  langs:
  - csharp
  - vb
  name: StorageException(String)
  nameWithType: StorageException.StorageException(String)
  fullName: Microsoft.WindowsAzure.Storage.StorageException.StorageException(System.String)
  type: Constructor
  source:
    remote:
      path: Lib/Common/StorageException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/StorageException.cs
    startLine: 70
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.StorageException\" data-throw-if-not-resolved=\"false\"></xref> class using the specified error message.\n"
  example: []
  syntax:
    content: public StorageException(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
      description: The message that describes the error.
  overload: Microsoft.WindowsAzure.Storage.StorageException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.StorageException.#ctor(System.String,System.Exception)
  commentId: M:Microsoft.WindowsAzure.Storage.StorageException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: Microsoft.WindowsAzure.Storage.StorageException
  langs:
  - csharp
  - vb
  name: StorageException(String, Exception)
  nameWithType: StorageException.StorageException(String, Exception)
  fullName: Microsoft.WindowsAzure.Storage.StorageException.StorageException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: Lib/Common/StorageException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/StorageException.cs
    startLine: 80
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.StorageException\" data-throw-if-not-resolved=\"false\"></xref> class with a specified error message and a reference to the inner exception that generated this exception.\n"
  example: []
  syntax:
    content: public StorageException(string message, Exception innerException)
    content.vb: Public Sub New(message As String, innerException As Exception)
    parameters:
    - id: message
      type: System.String
      description: The exception error message.
    - id: innerException
      type: System.Exception
      description: The inner exception.
  overload: Microsoft.WindowsAzure.Storage.StorageException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.StorageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:Microsoft.WindowsAzure.Storage.StorageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: Microsoft.WindowsAzure.Storage.StorageException
  langs:
  - csharp
  - vb
  name: StorageException(SerializationInfo, StreamingContext)
  nameWithType: StorageException.StorageException(SerializationInfo, StreamingContext)
  fullName: Microsoft.WindowsAzure.Storage.StorageException.StorageException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Constructor
  source:
    remote:
      path: Lib/Common/StorageException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/StorageException.cs
    startLine: 92
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.StorageException\" data-throw-if-not-resolved=\"false\"></xref> class with serialized data.\n"
  remarks: This constructor is called during de-serialization to reconstitute the exception object transmitted over a stream.
  example: []
  syntax:
    content: protected StorageException(SerializationInfo info, StreamingContext context)
    content.vb: Protected Sub New(info As SerializationInfo, context As StreamingContext)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> object that holds serialized object data for the exception being thrown.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The <xref href="System.Runtime.Serialization.StreamingContext" data-throw-if-not-resolved="false"></xref> that contains contextual information about the source or destination.
  overload: Microsoft.WindowsAzure.Storage.StorageException.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.WindowsAzure.Storage.StorageException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:Microsoft.WindowsAzure.Storage.StorageException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: Microsoft.WindowsAzure.Storage.StorageException
  langs:
  - csharp
  - vb
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: StorageException.GetObjectData(SerializationInfo, StreamingContext)
  fullName: Microsoft.WindowsAzure.Storage.StorageException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Method
  source:
    remote:
      path: Lib/Common/StorageException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetObjectData
    path: Lib/Common/StorageException.cs
    startLine: 107
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nPopulates a <xref href=\"System.Runtime.Serialization.SerializationInfo\" data-throw-if-not-resolved=\"false\"></xref> object with the data needed to serialize the target object.\n"
  example: []
  syntax:
    content: public override void GetObjectData(SerializationInfo info, StreamingContext context)
    content.vb: Public Overrides Sub GetObjectData(info As SerializationInfo, context As StreamingContext)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <xref href="System.Runtime.Serialization.SerializationInfo" data-throw-if-not-resolved="false"></xref> object to populate with data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The destination context for this serialization.
  overridden: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  overload: Microsoft.WindowsAzure.Storage.StorageException.GetObjectData*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Microsoft.WindowsAzure.Storage.StorageException.#ctor(Microsoft.WindowsAzure.Storage.RequestResult,System.String,System.Exception)
  commentId: M:Microsoft.WindowsAzure.Storage.StorageException.#ctor(Microsoft.WindowsAzure.Storage.RequestResult,System.String,System.Exception)
  id: '#ctor(Microsoft.WindowsAzure.Storage.RequestResult,System.String,System.Exception)'
  parent: Microsoft.WindowsAzure.Storage.StorageException
  langs:
  - csharp
  - vb
  name: StorageException(RequestResult, String, Exception)
  nameWithType: StorageException.StorageException(RequestResult, String, Exception)
  fullName: Microsoft.WindowsAzure.Storage.StorageException.StorageException(Microsoft.WindowsAzure.Storage.RequestResult, System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: Lib/Common/StorageException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/StorageException.cs
    startLine: 125
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.StorageException\" data-throw-if-not-resolved=\"false\"></xref> class by using the specified parameters.\n"
  example: []
  syntax:
    content: public StorageException(RequestResult res, string message, Exception inner)
    content.vb: Public Sub New(res As RequestResult, message As String, inner As Exception)
    parameters:
    - id: res
      type: Microsoft.WindowsAzure.Storage.RequestResult
      description: The request result.
    - id: message
      type: System.String
      description: The exception message.
    - id: inner
      type: System.Exception
      description: The inner exception.
  overload: Microsoft.WindowsAzure.Storage.StorageException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.StorageException.TranslateException(System.Exception,Microsoft.WindowsAzure.Storage.RequestResult)
  commentId: M:Microsoft.WindowsAzure.Storage.StorageException.TranslateException(System.Exception,Microsoft.WindowsAzure.Storage.RequestResult)
  id: TranslateException(System.Exception,Microsoft.WindowsAzure.Storage.RequestResult)
  parent: Microsoft.WindowsAzure.Storage.StorageException
  langs:
  - csharp
  - vb
  name: TranslateException(Exception, RequestResult)
  nameWithType: StorageException.TranslateException(Exception, RequestResult)
  fullName: Microsoft.WindowsAzure.Storage.StorageException.TranslateException(System.Exception, Microsoft.WindowsAzure.Storage.RequestResult)
  type: Method
  source:
    remote:
      path: Lib/Common/StorageException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: TranslateException
    path: Lib/Common/StorageException.cs
    startLine: 139
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nTranslates the specified exception into a <xref href=\"Microsoft.WindowsAzure.Storage.StorageException\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static StorageException TranslateException(Exception ex, RequestResult reqResult)
    content.vb: Public Shared Function TranslateException(ex As Exception, reqResult As RequestResult) As StorageException
    parameters:
    - id: ex
      type: System.Exception
      description: The exception to translate.
    - id: reqResult
      type: Microsoft.WindowsAzure.Storage.RequestResult
      description: The request result.
    return:
      type: Microsoft.WindowsAzure.Storage.StorageException
      description: The storage exception.
  overload: Microsoft.WindowsAzure.Storage.StorageException.TranslateException*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.StorageException.TranslateException(System.Exception,Microsoft.WindowsAzure.Storage.RequestResult,System.Func{System.IO.Stream,Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation})
  commentId: M:Microsoft.WindowsAzure.Storage.StorageException.TranslateException(System.Exception,Microsoft.WindowsAzure.Storage.RequestResult,System.Func{System.IO.Stream,Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation})
  id: TranslateException(System.Exception,Microsoft.WindowsAzure.Storage.RequestResult,System.Func{System.IO.Stream,Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation})
  parent: Microsoft.WindowsAzure.Storage.StorageException
  langs:
  - csharp
  - vb
  name: TranslateException(Exception, RequestResult, Func<Stream, StorageExtendedErrorInformation>)
  nameWithType: StorageException.TranslateException(Exception, RequestResult, Func<Stream, StorageExtendedErrorInformation>)
  fullName: Microsoft.WindowsAzure.Storage.StorageException.TranslateException(System.Exception, Microsoft.WindowsAzure.Storage.RequestResult, System.Func<System.IO.Stream, Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation>)
  type: Method
  source:
    remote:
      path: Lib/Common/StorageException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: TranslateException
    path: Lib/Common/StorageException.cs
    startLine: 151
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nTranslates the specified exception into a storage exception.\n"
  example: []
  syntax:
    content: public static StorageException TranslateException(Exception ex, RequestResult reqResult, Func<Stream, StorageExtendedErrorInformation> parseError)
    content.vb: Public Shared Function TranslateException(ex As Exception, reqResult As RequestResult, parseError As Func(Of Stream, StorageExtendedErrorInformation)) As StorageException
    parameters:
    - id: ex
      type: System.Exception
      description: The exception to translate.
    - id: reqResult
      type: Microsoft.WindowsAzure.Storage.RequestResult
      description: The request result.
    - id: parseError
      type: System.Func{System.IO.Stream,Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation}
      description: The delegate used to parse the error to get extended error information.
    return:
      type: Microsoft.WindowsAzure.Storage.StorageException
      description: The storage exception.
  overload: Microsoft.WindowsAzure.Storage.StorageException.TranslateException*
  nameWithType.vb: StorageException.TranslateException(Exception, RequestResult, Func(Of Stream, StorageExtendedErrorInformation))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.StorageException.TranslateException(System.Exception, Microsoft.WindowsAzure.Storage.RequestResult, System.Func(Of System.IO.Stream, Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation))
  name.vb: TranslateException(Exception, RequestResult, Func(Of Stream, StorageExtendedErrorInformation))
- uid: Microsoft.WindowsAzure.Storage.StorageException.ToString
  commentId: M:Microsoft.WindowsAzure.Storage.StorageException.ToString
  id: ToString
  parent: Microsoft.WindowsAzure.Storage.StorageException
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: StorageException.ToString()
  fullName: Microsoft.WindowsAzure.Storage.StorageException.ToString()
  type: Method
  source:
    remote:
      path: Lib/Common/StorageException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ToString
    path: Lib/Common/StorageException.cs
    startLine: 450
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage
  summary: "\nRepresents an exception thrown by the Microsoft Azure storage client library. \n"
  example: []
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A string that represents the exception.
  overridden: System.Exception.ToString
  overload: Microsoft.WindowsAzure.Storage.StorageException.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Microsoft.WindowsAzure.Storage
  commentId: N:Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  nameWithType: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Runtime.InteropServices._Exception
  commentId: T:System.Runtime.InteropServices._Exception
  parent: System.Runtime.InteropServices
  isExternal: true
  name: _Exception
  nameWithType: _Exception
  fullName: System.Runtime.InteropServices._Exception
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  parent: System.Exception
  isExternal: true
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.GetType
  commentId: M:System.Exception.GetType
  parent: System.Exception
  isExternal: true
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: System.Exception.GetType()
  spec.csharp:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetType
    name: GetType
    nameWithType: Exception.GetType
    fullName: System.Exception.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.Message
  commentId: P:System.Exception.Message
  parent: System.Exception
  isExternal: true
  name: Message
  nameWithType: Exception.Message
  fullName: System.Exception.Message
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  parent: System.Exception
  isExternal: true
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  parent: System.Exception
  isExternal: true
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.TargetSite
  commentId: P:System.Exception.TargetSite
  parent: System.Exception
  isExternal: true
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: System.Exception.TargetSite
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  parent: System.Exception
  isExternal: true
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  parent: System.Exception
  isExternal: true
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  parent: System.Exception
  isExternal: true
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  parent: System.Exception
  isExternal: true
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
- uid: System.Exception.SerializeObjectState
  commentId: E:System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: true
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: System.Exception.SerializeObjectState
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: false
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Runtime.InteropServices
  commentId: N:System.Runtime.InteropServices
  isExternal: false
  name: System.Runtime.InteropServices
  nameWithType: System.Runtime.InteropServices
  fullName: System.Runtime.InteropServices
- uid: Microsoft.WindowsAzure.Storage.RequestResult
  commentId: T:Microsoft.WindowsAzure.Storage.RequestResult
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: RequestResult
  nameWithType: RequestResult
  fullName: Microsoft.WindowsAzure.Storage.RequestResult
- uid: Microsoft.WindowsAzure.Storage.StorageException
  commentId: T:Microsoft.WindowsAzure.Storage.StorageException
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: StorageException
  nameWithType: StorageException
  fullName: Microsoft.WindowsAzure.Storage.StorageException
- uid: Microsoft.WindowsAzure.Storage.StorageException.RequestInformation*
  commentId: Overload:Microsoft.WindowsAzure.Storage.StorageException.RequestInformation
  isExternal: false
  name: RequestInformation
  nameWithType: StorageException.RequestInformation
  fullName: Microsoft.WindowsAzure.Storage.StorageException.RequestInformation
- uid: Microsoft.WindowsAzure.Storage.StorageException.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.StorageException.#ctor
  isExternal: false
  name: StorageException
  nameWithType: StorageException.StorageException
  fullName: Microsoft.WindowsAzure.Storage.StorageException.StorageException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: Exception.GetObjectData
    fullName: System.Exception.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.StorageException.GetObjectData*
  commentId: Overload:Microsoft.WindowsAzure.Storage.StorageException.GetObjectData
  isExternal: false
  name: GetObjectData
  nameWithType: StorageException.GetObjectData
  fullName: Microsoft.WindowsAzure.Storage.StorageException.GetObjectData
- uid: Microsoft.WindowsAzure.Storage.StorageException.TranslateException*
  commentId: Overload:Microsoft.WindowsAzure.Storage.StorageException.TranslateException
  isExternal: false
  name: TranslateException
  nameWithType: StorageException.TranslateException
  fullName: Microsoft.WindowsAzure.Storage.StorageException.TranslateException
- uid: System.Func{System.IO.Stream,Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation}
  commentId: T:System.Func{System.IO.Stream,Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation}
  parent: System
  definition: System.Func`2
  name: Func<Stream, StorageExtendedErrorInformation>
  nameWithType: Func<Stream, StorageExtendedErrorInformation>
  fullName: System.Func<System.IO.Stream, Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation>
  nameWithType.vb: Func(Of Stream, StorageExtendedErrorInformation)
  fullname.vb: System.Func(Of System.IO.Stream, Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation)
  name.vb: Func(Of Stream, StorageExtendedErrorInformation)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation
    name: StorageExtendedErrorInformation
    nameWithType: StorageExtendedErrorInformation
    fullName: Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation
    name: StorageExtendedErrorInformation
    nameWithType: StorageExtendedErrorInformation
    fullName: Microsoft.WindowsAzure.Storage.StorageExtendedErrorInformation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullname.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.ToString
  commentId: M:System.Exception.ToString
  parent: System.Exception
  isExternal: true
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.StorageException.ToString*
  commentId: Overload:Microsoft.WindowsAzure.Storage.StorageException.ToString
  isExternal: false
  name: ToString
  nameWithType: StorageException.ToString
  fullName: Microsoft.WindowsAzure.Storage.StorageException.ToString
