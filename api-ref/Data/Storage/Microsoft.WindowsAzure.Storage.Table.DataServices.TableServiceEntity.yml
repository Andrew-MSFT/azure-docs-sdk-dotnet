### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity
  commentId: T:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity
  id: TableServiceEntity
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices
  children:
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.#ctor
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.#ctor(System.String,System.String)
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.PartitionKey
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.RowKey
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.Timestamp
  langs:
  - csharp
  - vb
  name: TableServiceEntity
  nameWithType: TableServiceEntity
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity
  type: Class
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: TableServiceEntity
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceEntity.cs
    startLine: 26
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nRepresents an entity in the Windows Azure Table service.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      [DataServiceKey(new string[]{"PartitionKey", "RowKey"})]

      public abstract class TableServiceEntity
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      <DataServiceKey(New String() {"PartitionKey", "RowKey"})>

      Public MustInherit Class TableServiceEntity
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.#ctor(System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity
  langs:
  - csharp
  - vb
  name: TableServiceEntity(String, String)
  nameWithType: TableServiceEntity.TableServiceEntity(String, String)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.TableServiceEntity(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceEntity.cs
    startLine: 35
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: protected TableServiceEntity(string partitionKey, string rowKey)
    content.vb: Protected Sub New(partitionKey As String, rowKey As String)
    parameters:
    - id: partitionKey
      type: System.String
      description: The partition key.
    - id: rowKey
      type: System.String
      description: The row key.
  overload: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity
  langs:
  - csharp
  - vb
  name: TableServiceEntity()
  nameWithType: TableServiceEntity.TableServiceEntity()
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.TableServiceEntity()
  type: Constructor
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceEntity.cs
    startLine: 45
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: protected TableServiceEntity()
    content.vb: Protected Sub New
  overload: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.Timestamp
  commentId: P:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.Timestamp
  id: Timestamp
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity
  langs:
  - csharp
  - vb
  name: Timestamp
  nameWithType: TableServiceEntity.Timestamp
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.Timestamp
  type: Property
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Timestamp
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceEntity.cs
    startLine: 53
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nGets or sets the timestamp for the entity.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public DateTime Timestamp { get; set; }
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Property Timestamp As Date
    parameters: []
    return:
      type: System.DateTime
      description: The entity's timestamp.
  overload: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.Timestamp*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.PartitionKey
  commentId: P:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.PartitionKey
  id: PartitionKey
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity
  langs:
  - csharp
  - vb
  name: PartitionKey
  nameWithType: TableServiceEntity.PartitionKey
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.PartitionKey
  type: Property
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: PartitionKey
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceEntity.cs
    startLine: 60
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nGets or sets the partition key of a table entity.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public virtual string PartitionKey { get; set; }
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Overridable Property PartitionKey As String
    parameters: []
    return:
      type: System.String
      description: The partition key.
  overload: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.PartitionKey*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.RowKey
  commentId: P:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.RowKey
  id: RowKey
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity
  langs:
  - csharp
  - vb
  name: RowKey
  nameWithType: TableServiceEntity.RowKey
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.RowKey
  type: Property
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RowKey
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceEntity.cs
    startLine: 67
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nGets or sets the row key of a table entity.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public virtual string RowKey { get; set; }
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Overridable Property RowKey As String
    parameters: []
    return:
      type: System.String
      description: The row key.
  overload: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.RowKey*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices
  commentId: N:Microsoft.WindowsAzure.Storage.Table.DataServices
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table.DataServices
  nameWithType: Microsoft.WindowsAzure.Storage.Table.DataServices
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity
  commentId: T:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity
  isExternal: false
  name: TableServiceEntity
  nameWithType: TableServiceEntity
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.#ctor
  isExternal: false
  name: TableServiceEntity
  nameWithType: TableServiceEntity.TableServiceEntity
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.TableServiceEntity
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.Timestamp*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.Timestamp
  isExternal: false
  name: Timestamp
  nameWithType: TableServiceEntity.Timestamp
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.Timestamp
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.PartitionKey*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.PartitionKey
  isExternal: false
  name: PartitionKey
  nameWithType: TableServiceEntity.PartitionKey
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.PartitionKey
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.RowKey*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.RowKey
  isExternal: false
  name: RowKey
  nameWithType: TableServiceEntity.RowKey
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceEntity.RowKey
