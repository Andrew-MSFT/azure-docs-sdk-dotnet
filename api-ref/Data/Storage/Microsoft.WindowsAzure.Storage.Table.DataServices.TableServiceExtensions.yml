### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions
  commentId: T:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions
  id: TableServiceExtensions
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices
  children:
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  langs:
  - csharp
  - vb
  name: TableServiceExtensions
  nameWithType: TableServiceExtensions
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions
  type: Class
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: TableServiceExtensions
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceExtensions.cs
    startLine: 26
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nProvides a set of extensions for the Table service.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public static class TableServiceExtensions
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Module TableServiceExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  id: AsTableServiceQuery``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  isExtensionMethod: true
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions
  langs:
  - csharp
  - vb
  name: AsTableServiceQuery<TElement>(IQueryable<TElement>, TableServiceContext)
  nameWithType: TableServiceExtensions.AsTableServiceQuery<TElement>(IQueryable<TElement>, TableServiceContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery<TElement>(System.Linq.IQueryable<TElement>, Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceExtensions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: AsTableServiceQuery
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceExtensions.cs
    startLine: 37
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nConverts the query into a <xref href=\"Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery%601\" data-throw-if-not-resolved=\"false\"></xref> object that supports \nadditional operations like retries.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public static TableServiceQuery<TElement> AsTableServiceQuery<TElement>(this IQueryable<TElement> query, TableServiceContext context)
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      <ExtensionAttribute>

      Public Shared Function AsTableServiceQuery(Of TElement)(query As IQueryable(Of TElement), context As TableServiceContext) As TableServiceQuery(Of TElement)
    parameters:
    - id: query
      type: System.Linq.IQueryable{{TElement}}
      description: The query.
    - id: context
      type: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext" data-throw-if-not-resolved="false"></xref> object that represents the runtime context of the Table service.
    typeParameters:
    - id: TElement
      description: The type of the element.
    return:
      type: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery{{TElement}}
      description: The converted query.
  overload: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  nameWithType.vb: TableServiceExtensions.AsTableServiceQuery(Of TElement)(IQueryable(Of TElement), TableServiceContext)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery(Of TElement)(System.Linq.IQueryable(Of TElement), Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  name.vb: AsTableServiceQuery(Of TElement)(IQueryable(Of TElement), TableServiceContext)
references:
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices
  commentId: N:Microsoft.WindowsAzure.Storage.Table.DataServices
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table.DataServices
  nameWithType: Microsoft.WindowsAzure.Storage.Table.DataServices
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  commentId: T:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices
  isExternal: false
  name: TableServiceQuery<TElement>
  nameWithType: TableServiceQuery<TElement>
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>
  nameWithType.vb: TableServiceQuery(Of TElement)
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement)
  name.vb: TableServiceQuery(Of TElement)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
    name: TableServiceQuery
    nameWithType: TableServiceQuery
    fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
    name: TableServiceQuery
    nameWithType: TableServiceQuery
    fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext
  commentId: T:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices
  isExternal: false
  name: TableServiceContext
  nameWithType: TableServiceContext
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery
  isExternal: false
  name: AsTableServiceQuery<TElement>
  nameWithType: TableServiceExtensions.AsTableServiceQuery<TElement>
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery<TElement>
  nameWithType.vb: TableServiceExtensions.AsTableServiceQuery(Of TElement)
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery(Of TElement)
  name.vb: AsTableServiceQuery(Of TElement)
- uid: System.Linq.IQueryable{{TElement}}
  commentId: T:System.Linq.IQueryable{`0}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<TElement>
  nameWithType: IQueryable<TElement>
  fullName: System.Linq.IQueryable<TElement>
  nameWithType.vb: IQueryable(Of TElement)
  fullname.vb: System.Linq.IQueryable(Of TElement)
  name.vb: IQueryable(Of TElement)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery{{TElement}}
  commentId: T:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery{``0}
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices
  definition: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  name: TableServiceQuery<TElement>
  nameWithType: TableServiceQuery<TElement>
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>
  nameWithType.vb: TableServiceQuery(Of TElement)
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement)
  name.vb: TableServiceQuery(Of TElement)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
    name: TableServiceQuery
    nameWithType: TableServiceQuery
    fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
    name: TableServiceQuery
    nameWithType: TableServiceQuery
    fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullname.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: false
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
