### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  commentId: T:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  id: TableServiceQuery`1
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices
  children:
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.#ctor(System.Linq.IQueryable{`0},Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.BeginExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.BeginExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,System.AsyncCallback,System.Object)
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Context
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ElementType
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.EndExecuteSegmented(System.IAsyncResult)
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Execute(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,System.Threading.CancellationToken)
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Expand(System.String)
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Expression
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.GetEnumerator
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Provider
  - Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: TableServiceQuery<TElement>
  nameWithType: TableServiceQuery<TElement>
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>
  type: Class
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: TableServiceQuery
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 39
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nA class for constructing a query against the Table service.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public class TableServiceQuery<TElement> : IQueryable<TElement>, IEnumerable<TElement>, IQueryable, IEnumerable
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Class TableServiceQuery(Of TElement)
          Implements IQueryable(Of TElement), IEnumerable(Of TElement), IQueryable, IEnumerable
    typeParameters:
    - id: TElement
      description: The type of the element.
  inheritance:
  - System.Object
  implements:
  - System.Linq.IQueryable{{TElement}}
  - System.Collections.Generic.IEnumerable{{TElement}}
  - System.Linq.IQueryable
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Linq.IQueryable{`0}.Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery``1(Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  - System.Linq.IQueryable{`0}.Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithOptions``1(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)
  - System.Linq.IQueryable{`0}.Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithContext``1(Microsoft.WindowsAzure.Storage.OperationContext)
  - System.Linq.IQueryable{`0}.Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.Resolve``2(Microsoft.WindowsAzure.Storage.Table.EntityResolver{{TResolved}})
  - System.Linq.IQueryable{`0}.Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.AsTableQuery``1
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  nameWithType.vb: TableServiceQuery(Of TElement)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement)
  name.vb: TableServiceQuery(Of TElement)
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.#ctor(System.Linq.IQueryable{`0},Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.#ctor(System.Linq.IQueryable{`0},Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  id: '#ctor(System.Linq.IQueryable{`0},Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)'
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: TableServiceQuery(IQueryable<TElement>, TableServiceContext)
  nameWithType: TableServiceQuery<TElement>.TableServiceQuery(IQueryable<TElement>, TableServiceContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.TableServiceQuery(System.Linq.IQueryable<TElement>, Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  type: Constructor
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 48
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery%601\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public TableServiceQuery(IQueryable<TElement> query, TableServiceContext context)
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Sub New(query As IQueryable(Of TElement), context As TableServiceContext)
    parameters:
    - id: query
      type: System.Linq.IQueryable{{TElement}}
      description: An object that implements <xref href="System.Linq.IQueryable" data-throw-if-not-resolved="false"></xref>.
    - id: context
      type: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext" data-throw-if-not-resolved="false"></xref> object.
  overload: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.#ctor*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  nameWithType.vb: TableServiceQuery(Of TElement).TableServiceQuery(IQueryable(Of TElement), TableServiceContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).TableServiceQuery(System.Linq.IQueryable(Of TElement), Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  name.vb: TableServiceQuery(IQueryable(Of TElement), TableServiceContext)
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Context
  commentId: P:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Context
  id: Context
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: TableServiceQuery<TElement>.Context
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.Context
  type: Property
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Context
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 62
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nGets the Table service context.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public TableServiceContext Context { get; }
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public ReadOnly Property Context As TableServiceContext
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext
      description: "\nAn object of type <xref href=\"Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  overload: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Context*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  nameWithType.vb: TableServiceQuery(Of TElement).Context
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).Context
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ElementType
  commentId: P:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ElementType
  id: ElementType
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: ElementType
  nameWithType: TableServiceQuery<TElement>.ElementType
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.ElementType
  type: Property
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ElementType
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 79
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nGets the type of the element(s) that are returned when the expression tree associated with this \ninstance of <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref> is executed.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public Type ElementType { get; }
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public ReadOnly Property ElementType As Type
    parameters: []
    return:
      type: System.Type
      description: "\nA <xref href=\"System.Type\" data-throw-if-not-resolved=\"false\"></xref> that represents the type of the element(s) that are returned when the expression tree associated with this object is executed.\n"
  overload: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ElementType*
  implements:
  - System.Linq.IQueryable.ElementType
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  nameWithType.vb: TableServiceQuery(Of TElement).ElementType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).ElementType
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Expression
  commentId: P:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Expression
  id: Expression
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: Expression
  nameWithType: TableServiceQuery<TElement>.Expression
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.Expression
  type: Property
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Expression
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 91
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nGets the expression tree that is associated with the instance of <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public Expression Expression { get; }
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public ReadOnly Property Expression As Expression
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
      description: "\nThe <xref href=\"System.Linq.Expressions.Expression\" data-throw-if-not-resolved=\"false\"></xref> that is associated with this instance of <xref href=\"System.Linq.IQueryable\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  overload: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Expression*
  implements:
  - System.Linq.IQueryable.Expression
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  nameWithType.vb: TableServiceQuery(Of TElement).Expression
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).Expression
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Provider
  commentId: P:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Provider
  id: Provider
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: Provider
  nameWithType: TableServiceQuery<TElement>.Provider
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.Provider
  type: Property
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Provider
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 103
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nGets the query provider that is associated with this data source.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public IQueryProvider Provider { get; }
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public ReadOnly Property Provider As IQueryProvider
    parameters: []
    return:
      type: System.Linq.IQueryProvider
      description: "\nThe <xref href=\"System.Linq.IQueryProvider\" data-throw-if-not-resolved=\"false\"></xref> that is associated with this data source.\n"
  overload: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Provider*
  implements:
  - System.Linq.IQueryable.Provider
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  nameWithType.vb: TableServiceQuery(Of TElement).Provider
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).Provider
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Expand(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Expand(System.String)
  id: Expand(System.String)
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: Expand(String)
  nameWithType: TableServiceQuery<TElement>.Expand(String)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.Expand(System.String)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Expand
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 114
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nExpands the specified path.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public TableServiceQuery<TElement> Expand(string path)
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Function Expand(path As String) As TableServiceQuery(Of TElement)
    parameters:
    - id: path
      type: System.String
      description: The path to expand.
    return:
      type: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
      description: A new query with the expanded path.
  overload: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Expand*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  nameWithType.vb: TableServiceQuery(Of TElement).Expand(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).Expand(System.String)
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.GetEnumerator
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: TableServiceQuery<TElement>.GetEnumerator()
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.GetEnumerator()
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: GetEnumerator
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 126
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nReturns an enumerator that iterates through the collection.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public IEnumerator<TElement> GetEnumerator()
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Function GetEnumerator As IEnumerator(Of TElement)
    return:
      type: System.Collections.Generic.IEnumerator{{TElement}}
      description: "\nA <xref href=\"System.Collections.Generic.IEnumerator%601\" data-throw-if-not-resolved=\"false\"></xref> that can be used to iterate through the collection.\n"
  overload: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{TElement}}.GetEnumerator
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  nameWithType.vb: TableServiceQuery(Of TElement).GetEnumerator()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).GetEnumerator()
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: TableServiceQuery<TElement>.IEnumerable.GetEnumerator()
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: System.Collections.IEnumerable.GetEnumerator
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 132
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
  overload: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: TableServiceQuery(Of TElement).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Execute(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Execute(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: Execute(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: Execute(TableRequestOptions, OperationContext)
  nameWithType: TableServiceQuery<TElement>.Execute(TableRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.Execute(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Execute
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 143
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nExecutes the request with any specified options.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public IEnumerable<TElement> Execute(TableRequestOptions requestOptions = null, OperationContext operationContext = null)
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Function Execute(requestOptions As TableRequestOptions = Nothing, operationContext As OperationContext = Nothing) As IEnumerable(Of TElement)
    parameters:
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Collections.Generic.IEnumerable{{TElement}}
      description: An enumerable collection, specialized for type <code>TElement</code>, of the results of executing the query.
  overload: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Execute*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  nameWithType.vb: TableServiceQuery(Of TElement).Execute(TableRequestOptions, OperationContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).Execute(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: ExecuteSegmented(TableContinuationToken, TableRequestOptions, OperationContext)
  nameWithType: TableServiceQuery<TElement>.ExecuteSegmented(TableContinuationToken, TableRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.ExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExecuteSegmented
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 162
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nExecutes a segmented query against the Table service.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public TableQuerySegment<TElement> ExecuteSegmented(TableContinuationToken continuationToken, TableRequestOptions requestOptions = null, OperationContext operationContext = null)
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Function ExecuteSegmented(continuationToken As TableContinuationToken, requestOptions As TableRequestOptions = Nothing, operationContext As OperationContext = Nothing) As TableQuerySegment(Of TElement)
    parameters:
    - id: continuationToken
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: The continuation token.
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: The request options.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{TElement}}
      description: A result segment containing objects of type <em>TElement</em>.
  overload: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmented*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  nameWithType.vb: TableServiceQuery(Of TElement).ExecuteSegmented(TableContinuationToken, TableRequestOptions, OperationContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).ExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.BeginExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.BeginExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,System.AsyncCallback,System.Object)
  id: BeginExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: BeginExecuteSegmented(TableContinuationToken, AsyncCallback, Object)
  nameWithType: TableServiceQuery<TElement>.BeginExecuteSegmented(TableContinuationToken, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.BeginExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginExecuteSegmented
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 178
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nBegins an asynchronous operation to execute a query and return the results as a result segment.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public ICancellableAsyncResult BeginExecuteSegmented(TableContinuationToken currentToken, AsyncCallback callback, object state)
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Function BeginExecuteSegmented(currentToken As TableContinuationToken, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A continuation token returned by a previous listing operation, can be null.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.BeginExecuteSegmented*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  nameWithType.vb: TableServiceQuery(Of TElement).BeginExecuteSegmented(TableContinuationToken, AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).BeginExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, System.AsyncCallback, System.Object)
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.BeginExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.BeginExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  id: BeginExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.AsyncCallback,System.Object)
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: BeginExecuteSegmented(TableContinuationToken, TableRequestOptions, OperationContext, AsyncCallback, Object)
  nameWithType: TableServiceQuery<TElement>.BeginExecuteSegmented(TableContinuationToken, TableRequestOptions, OperationContext, AsyncCallback, Object)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.BeginExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: BeginExecuteSegmented
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 194
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nBegins an asynchronous operation to execute a query and return the results as a result segment.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public ICancellableAsyncResult BeginExecuteSegmented(TableContinuationToken currentToken, TableRequestOptions requestOptions, OperationContext operationContext, AsyncCallback callback, object state)
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Function BeginExecuteSegmented(currentToken As TableContinuationToken, requestOptions As TableRequestOptions, operationContext As OperationContext, callback As AsyncCallback, state As Object) As ICancellableAsyncResult
    parameters:
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A continuation token returned by a previous listing operation, can be null.
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: callback
      type: System.AsyncCallback
      description: An <xref href="System.AsyncCallback" data-throw-if-not-resolved="false"></xref> delegate that will receive notification when the asynchronous operation completes.
    - id: state
      type: System.Object
      description: A user-defined object that will be passed to the callback delegate.
    return:
      type: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that references the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.BeginExecuteSegmented*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  nameWithType.vb: TableServiceQuery(Of TElement).BeginExecuteSegmented(TableContinuationToken, TableRequestOptions, OperationContext, AsyncCallback, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).BeginExecuteSegmented(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.AsyncCallback, System.Object)
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.EndExecuteSegmented(System.IAsyncResult)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.EndExecuteSegmented(System.IAsyncResult)
  id: EndExecuteSegmented(System.IAsyncResult)
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: EndExecuteSegmented(IAsyncResult)
  nameWithType: TableServiceQuery<TElement>.EndExecuteSegmented(IAsyncResult)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.EndExecuteSegmented(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EndExecuteSegmented
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 210
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nEnds an asynchronous operation to execute a query and return the results as a result segment.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public TableQuerySegment<TElement> EndExecuteSegmented(IAsyncResult asyncResult)
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Function EndExecuteSegmented(asyncResult As IAsyncResult) As TableQuerySegment(Of TElement)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: The reference to the pending asynchronous request to finish.
    return:
      type: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{TElement}}
      description: A result segment containing objects of type <em>TElement</em>.
  overload: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.EndExecuteSegmented*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  nameWithType.vb: TableServiceQuery(Of TElement).EndExecuteSegmented(IAsyncResult)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).EndExecuteSegmented(System.IAsyncResult)
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  id: ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: ExecuteSegmentedAsync(TableContinuationToken)
  nameWithType: TableServiceQuery<TElement>.ExecuteSegmentedAsync(TableContinuationToken)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExecuteSegmentedAsync
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 222
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nInitiates an asynchronous operation to execute a query and return the results as a result segment.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public Task<TableQuerySegment<TElement>> ExecuteSegmentedAsync(TableContinuationToken currentToken)
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Function ExecuteSegmentedAsync(currentToken As TableContinuationToken) As Task(Of TableQuerySegment(Of TElement))
    parameters:
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A continuation token returned by a previous listing operation, can be null.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{TElement}}}
      description: A <xref href="System.Threading.Tasks.Task%601" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  nameWithType.vb: TableServiceQuery(Of TElement).ExecuteSegmentedAsync(TableContinuationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken)
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,System.Threading.CancellationToken)
  id: ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: ExecuteSegmentedAsync(TableContinuationToken, CancellationToken)
  nameWithType: TableServiceQuery<TElement>.ExecuteSegmentedAsync(TableContinuationToken, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExecuteSegmentedAsync
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 235
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nInitiates an asynchronous operation to execute a query and return the results as a result segment.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public Task<TableQuerySegment<TElement>> ExecuteSegmentedAsync(TableContinuationToken currentToken, CancellationToken cancellationToken)
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Function ExecuteSegmentedAsync(currentToken As TableContinuationToken, cancellationToken As CancellationToken) As Task(Of TableQuerySegment(Of TElement))
    parameters:
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A continuation token returned by a previous listing operation, can be null.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{TElement}}}
      description: A <xref href="System.Threading.Tasks.Task%601" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  nameWithType.vb: TableServiceQuery(Of TElement).ExecuteSegmentedAsync(TableContinuationToken, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, System.Threading.CancellationToken)
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  id: ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: ExecuteSegmentedAsync(TableContinuationToken, TableRequestOptions, OperationContext)
  nameWithType: TableServiceQuery<TElement>.ExecuteSegmentedAsync(TableContinuationToken, TableRequestOptions, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExecuteSegmentedAsync
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 249
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nInitiates an asynchronous operation to execute a query and return the results as a result segment.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public Task<TableQuerySegment<TElement>> ExecuteSegmentedAsync(TableContinuationToken currentToken, TableRequestOptions requestOptions, OperationContext operationContext)
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Function ExecuteSegmentedAsync(currentToken As TableContinuationToken, requestOptions As TableRequestOptions, operationContext As OperationContext) As Task(Of TableQuerySegment(Of TElement))
    parameters:
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A continuation token returned by a previous listing operation, can be null.
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{TElement}}}
      description: A <xref href="System.Threading.Tasks.Task%601" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  nameWithType.vb: TableServiceQuery(Of TElement).ExecuteSegmentedAsync(TableContinuationToken, TableRequestOptions, OperationContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  id: ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext,System.Threading.CancellationToken)
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  langs:
  - csharp
  - vb
  name: ExecuteSegmentedAsync(TableContinuationToken, TableRequestOptions, OperationContext, CancellationToken)
  nameWithType: TableServiceQuery<TElement>.ExecuteSegmentedAsync(TableContinuationToken, TableRequestOptions, OperationContext, CancellationToken)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ExecuteSegmentedAsync
    path: Lib/ClassLibraryCommon/Table/DataServices/TableServiceQuery.cs
    startLine: 264
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table.DataServices
  summary: "\nInitiates an asynchronous operation to execute a query and return the results as a result segment.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")]

      public Task<TableQuerySegment<TElement>> ExecuteSegmentedAsync(TableContinuationToken currentToken, TableRequestOptions requestOptions, OperationContext operationContext, CancellationToken cancellationToken)
    content.vb: >-
      <Obsolete("Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.")>

      Public Function ExecuteSegmentedAsync(currentToken As TableContinuationToken, requestOptions As TableRequestOptions, operationContext As OperationContext, cancellationToken As CancellationToken) As Task(Of TableQuerySegment(Of TElement))
    parameters:
    - id: currentToken
      type: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
      description: A continuation token returned by a previous listing operation, can be null.
    - id: requestOptions
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object that specifies additional options for the request.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> to observe while waiting for a task to complete.
    return:
      type: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{TElement}}}
      description: A <xref href="System.Threading.Tasks.Task%601" data-throw-if-not-resolved="false"></xref> object that represents the asynchronous operation.
  overload: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Support for accessing Windows Azure Tables via WCF Data Services is now obsolete. It's recommended that you use the Microsoft.WindowsAzure.Storage.Table namespace for working with tables.
  nameWithType.vb: TableServiceQuery(Of TElement).ExecuteSegmentedAsync(TableContinuationToken, TableRequestOptions, OperationContext, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).ExecuteSegmentedAsync(Microsoft.WindowsAzure.Storage.Table.TableContinuationToken, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions, Microsoft.WindowsAzure.Storage.OperationContext, System.Threading.CancellationToken)
references:
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices
  commentId: N:Microsoft.WindowsAzure.Storage.Table.DataServices
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table.DataServices
  nameWithType: Microsoft.WindowsAzure.Storage.Table.DataServices
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Linq.IQueryable{{TElement}}
  commentId: T:System.Linq.IQueryable{`0}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  name: IQueryable<TElement>
  nameWithType: IQueryable<TElement>
  fullName: System.Linq.IQueryable<TElement>
  nameWithType.vb: IQueryable(Of TElement)
  fullname.vb: System.Linq.IQueryable(Of TElement)
  name.vb: IQueryable(Of TElement)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TElement}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TElement>
  nameWithType: IEnumerable<TElement>
  fullName: System.Collections.Generic.IEnumerable<TElement>
  nameWithType.vb: IEnumerable(Of TElement)
  fullname.vb: System.Collections.Generic.IEnumerable(Of TElement)
  name.vb: IEnumerable(Of TElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable
  commentId: T:System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery``1(Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions
  definition: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  name: AsTableServiceQuery<TElement>(TableServiceContext)
  nameWithType: TableServiceExtensions.AsTableServiceQuery<TElement>(TableServiceContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery<TElement>(Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  nameWithType.vb: TableServiceExtensions.AsTableServiceQuery(Of TElement)(TableServiceContext)
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery(Of TElement)(Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  name.vb: AsTableServiceQuery(Of TElement)(TableServiceContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery``1(Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
    name: AsTableServiceQuery<TElement>
    nameWithType: TableServiceExtensions.AsTableServiceQuery<TElement>
    fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery<TElement>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext
    name: TableServiceContext
    nameWithType: TableServiceContext
    fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery``1(Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
    name: AsTableServiceQuery(Of TElement)
    nameWithType: TableServiceExtensions.AsTableServiceQuery(Of TElement)
    fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery(Of TElement)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext
    name: TableServiceContext
    nameWithType: TableServiceContext
    fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithOptions``1(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithOptions``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)
  parent: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions
  definition: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithOptions``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)
  name: WithOptions<TElement>(TableRequestOptions)
  nameWithType: TableQueryableExtensions.WithOptions<TElement>(TableRequestOptions)
  fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithOptions<TElement>(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)
  nameWithType.vb: TableQueryableExtensions.WithOptions(Of TElement)(TableRequestOptions)
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithOptions(Of TElement)(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)
  name.vb: WithOptions(Of TElement)(TableRequestOptions)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithOptions``1(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)
    name: WithOptions<TElement>
    nameWithType: TableQueryableExtensions.WithOptions<TElement>
    fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithOptions<TElement>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
    name: TableRequestOptions
    nameWithType: TableRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithOptions``1(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)
    name: WithOptions(Of TElement)
    nameWithType: TableQueryableExtensions.WithOptions(Of TElement)
    fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithOptions(Of TElement)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
    name: TableRequestOptions
    nameWithType: TableRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithContext``1(Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithContext``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions
  definition: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithContext``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.OperationContext)
  name: WithContext<TElement>(OperationContext)
  nameWithType: TableQueryableExtensions.WithContext<TElement>(OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithContext<TElement>(Microsoft.WindowsAzure.Storage.OperationContext)
  nameWithType.vb: TableQueryableExtensions.WithContext(Of TElement)(OperationContext)
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithContext(Of TElement)(Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: WithContext(Of TElement)(OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithContext``1(Microsoft.WindowsAzure.Storage.OperationContext)
    name: WithContext<TElement>
    nameWithType: TableQueryableExtensions.WithContext<TElement>
    fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithContext<TElement>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithContext``1(Microsoft.WindowsAzure.Storage.OperationContext)
    name: WithContext(Of TElement)
    nameWithType: TableQueryableExtensions.WithContext(Of TElement)
    fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithContext(Of TElement)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.Resolve``2(Microsoft.WindowsAzure.Storage.Table.EntityResolver{{TResolved}})
  commentId: M:Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.Resolve``2(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1})
  parent: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions
  definition: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.Resolve``2(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1})
  name: Resolve<TElement, TResolved>(EntityResolver<TResolved>)
  nameWithType: TableQueryableExtensions.Resolve<TElement, TResolved>(EntityResolver<TResolved>)
  fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.Resolve<TElement, TResolved>(Microsoft.WindowsAzure.Storage.Table.EntityResolver<TResolved>)
  nameWithType.vb: TableQueryableExtensions.Resolve(Of TElement, TResolved)(EntityResolver(Of TResolved))
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.Resolve(Of TElement, TResolved)(Microsoft.WindowsAzure.Storage.Table.EntityResolver(Of TResolved))
  name.vb: Resolve(Of TElement, TResolved)(EntityResolver(Of TResolved))
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.Resolve``2(Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1})
    name: Resolve<TElement, TResolved>
    nameWithType: TableQueryableExtensions.Resolve<TElement, TResolved>
    fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.Resolve<TElement, TResolved>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityResolver`1
    name: EntityResolver
    nameWithType: EntityResolver
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityResolver
  - name: <
    nameWithType: <
    fullName: <
  - name: TResolved
    nameWithType: TResolved
    fullName: TResolved
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.Resolve``2(Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1})
    name: Resolve(Of TElement, TResolved)
    nameWithType: TableQueryableExtensions.Resolve(Of TElement, TResolved)
    fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.Resolve(Of TElement, TResolved)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityResolver`1
    name: EntityResolver
    nameWithType: EntityResolver
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityResolver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResolved
    nameWithType: TResolved
    fullName: TResolved
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.IQueryable{`0}.Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.AsTableQuery``1
  commentId: M:Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.AsTableQuery``1(System.Linq.IQueryable{``0})
  parent: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions
  definition: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.AsTableQuery``1(System.Linq.IQueryable{``0})
  name: AsTableQuery<TElement>()
  nameWithType: TableQueryableExtensions.AsTableQuery<TElement>()
  fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.AsTableQuery<TElement>()
  nameWithType.vb: TableQueryableExtensions.AsTableQuery(Of TElement)()
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.AsTableQuery(Of TElement)()
  name.vb: AsTableQuery(Of TElement)()
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.AsTableQuery``1
    name: AsTableQuery<TElement>
    nameWithType: TableQueryableExtensions.AsTableQuery<TElement>
    fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.AsTableQuery<TElement>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.AsTableQuery``1
    name: AsTableQuery(Of TElement)
    nameWithType: TableQueryableExtensions.AsTableQuery(Of TElement)
    fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.AsTableQuery(Of TElement)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullname.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: false
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullname.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: false
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  isExternal: true
  name: AsTableServiceQuery<TElement>(IQueryable<TElement>, TableServiceContext)
  nameWithType: TableServiceExtensions.AsTableServiceQuery<TElement>(IQueryable<TElement>, TableServiceContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery<TElement>(System.Linq.IQueryable<TElement>, Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  nameWithType.vb: TableServiceExtensions.AsTableServiceQuery(Of TElement)(IQueryable(Of TElement), TableServiceContext)
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery(Of TElement)(System.Linq.IQueryable(Of TElement), Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
  name.vb: AsTableServiceQuery(Of TElement)(IQueryable(Of TElement), TableServiceContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
    name: AsTableServiceQuery<TElement>
    nameWithType: TableServiceExtensions.AsTableServiceQuery<TElement>
    fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery<TElement>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext
    name: TableServiceContext
    nameWithType: TableServiceContext
    fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext)
    name: AsTableServiceQuery(Of TElement)
    nameWithType: TableServiceExtensions.AsTableServiceQuery(Of TElement)
    fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions.AsTableServiceQuery(Of TElement)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext
    name: TableServiceContext
    nameWithType: TableServiceContext
    fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions
  commentId: T:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices
  isExternal: false
  name: TableServiceExtensions
  nameWithType: TableServiceExtensions
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceExtensions
- uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithOptions``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithOptions``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)
  isExternal: true
  name: WithOptions<TElement>(IQueryable<TElement>, TableRequestOptions)
  nameWithType: TableQueryableExtensions.WithOptions<TElement>(IQueryable<TElement>, TableRequestOptions)
  fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithOptions<TElement>(System.Linq.IQueryable<TElement>, Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)
  nameWithType.vb: TableQueryableExtensions.WithOptions(Of TElement)(IQueryable(Of TElement), TableRequestOptions)
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithOptions(Of TElement)(System.Linq.IQueryable(Of TElement), Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)
  name.vb: WithOptions(Of TElement)(IQueryable(Of TElement), TableRequestOptions)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithOptions``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)
    name: WithOptions<TElement>
    nameWithType: TableQueryableExtensions.WithOptions<TElement>
    fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithOptions<TElement>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
    name: TableRequestOptions
    nameWithType: TableRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithOptions``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)
    name: WithOptions(Of TElement)
    nameWithType: TableQueryableExtensions.WithOptions(Of TElement)
    fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithOptions(Of TElement)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
    name: TableRequestOptions
    nameWithType: TableRequestOptions
    fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions
  commentId: T:Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions
  parent: Microsoft.WindowsAzure.Storage.Table.Queryable
  isExternal: false
  name: TableQueryableExtensions
  nameWithType: TableQueryableExtensions
  fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions
- uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithContext``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithContext``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.OperationContext)
  isExternal: true
  name: WithContext<TElement>(IQueryable<TElement>, OperationContext)
  nameWithType: TableQueryableExtensions.WithContext<TElement>(IQueryable<TElement>, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithContext<TElement>(System.Linq.IQueryable<TElement>, Microsoft.WindowsAzure.Storage.OperationContext)
  nameWithType.vb: TableQueryableExtensions.WithContext(Of TElement)(IQueryable(Of TElement), OperationContext)
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithContext(Of TElement)(System.Linq.IQueryable(Of TElement), Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: WithContext(Of TElement)(IQueryable(Of TElement), OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithContext``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.OperationContext)
    name: WithContext<TElement>
    nameWithType: TableQueryableExtensions.WithContext<TElement>
    fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithContext<TElement>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithContext``1(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.OperationContext)
    name: WithContext(Of TElement)
    nameWithType: TableQueryableExtensions.WithContext(Of TElement)
    fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.WithContext(Of TElement)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.Resolve``2(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1})
  commentId: M:Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.Resolve``2(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1})
  isExternal: true
  name: Resolve<TElement, TResolved>(IQueryable<TElement>, EntityResolver<TResolved>)
  nameWithType: TableQueryableExtensions.Resolve<TElement, TResolved>(IQueryable<TElement>, EntityResolver<TResolved>)
  fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.Resolve<TElement, TResolved>(System.Linq.IQueryable<TElement>, Microsoft.WindowsAzure.Storage.Table.EntityResolver<TResolved>)
  nameWithType.vb: TableQueryableExtensions.Resolve(Of TElement, TResolved)(IQueryable(Of TElement), EntityResolver(Of TResolved))
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.Resolve(Of TElement, TResolved)(System.Linq.IQueryable(Of TElement), Microsoft.WindowsAzure.Storage.Table.EntityResolver(Of TResolved))
  name.vb: Resolve(Of TElement, TResolved)(IQueryable(Of TElement), EntityResolver(Of TResolved))
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.Resolve``2(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1})
    name: Resolve<TElement, TResolved>
    nameWithType: TableQueryableExtensions.Resolve<TElement, TResolved>
    fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.Resolve<TElement, TResolved>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityResolver`1
    name: EntityResolver
    nameWithType: EntityResolver
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityResolver
  - name: <
    nameWithType: <
    fullName: <
  - name: TResolved
    nameWithType: TResolved
    fullName: TResolved
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.Resolve``2(System.Linq.IQueryable{``0},Microsoft.WindowsAzure.Storage.Table.EntityResolver{``1})
    name: Resolve(Of TElement, TResolved)
    nameWithType: TableQueryableExtensions.Resolve(Of TElement, TResolved)
    fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.Resolve(Of TElement, TResolved)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityResolver`1
    name: EntityResolver
    nameWithType: EntityResolver
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityResolver
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResolved
    nameWithType: TResolved
    fullName: TResolved
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.AsTableQuery``1(System.Linq.IQueryable{``0})
  commentId: M:Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.AsTableQuery``1(System.Linq.IQueryable{``0})
  isExternal: true
  name: AsTableQuery<TElement>(IQueryable<TElement>)
  nameWithType: TableQueryableExtensions.AsTableQuery<TElement>(IQueryable<TElement>)
  fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.AsTableQuery<TElement>(System.Linq.IQueryable<TElement>)
  nameWithType.vb: TableQueryableExtensions.AsTableQuery(Of TElement)(IQueryable(Of TElement))
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.AsTableQuery(Of TElement)(System.Linq.IQueryable(Of TElement))
  name.vb: AsTableQuery(Of TElement)(IQueryable(Of TElement))
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.AsTableQuery``1(System.Linq.IQueryable{``0})
    name: AsTableQuery<TElement>
    nameWithType: TableQueryableExtensions.AsTableQuery<TElement>
    fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.AsTableQuery<TElement>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.AsTableQuery``1(System.Linq.IQueryable{``0})
    name: AsTableQuery(Of TElement)
    nameWithType: TableQueryableExtensions.AsTableQuery(Of TElement)
    fullName: Microsoft.WindowsAzure.Storage.Table.Queryable.TableQueryableExtensions.AsTableQuery(Of TElement)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    nameWithType: IQueryable
    fullName: System.Linq.IQueryable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.Queryable
  commentId: N:Microsoft.WindowsAzure.Storage.Table.Queryable
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table.Queryable
  nameWithType: Microsoft.WindowsAzure.Storage.Table.Queryable
  fullName: Microsoft.WindowsAzure.Storage.Table.Queryable
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  commentId: T:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices
  isExternal: false
  name: TableServiceQuery<TElement>
  nameWithType: TableServiceQuery<TElement>
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>
  nameWithType.vb: TableServiceQuery(Of TElement)
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement)
  name.vb: TableServiceQuery(Of TElement)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
    name: TableServiceQuery
    nameWithType: TableServiceQuery
    fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1
    name: TableServiceQuery
    nameWithType: TableServiceQuery
    fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext
  commentId: T:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext
  parent: Microsoft.WindowsAzure.Storage.Table.DataServices
  isExternal: false
  name: TableServiceContext
  nameWithType: TableServiceContext
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceContext
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.#ctor
  isExternal: false
  name: TableServiceQuery
  nameWithType: TableServiceQuery<TElement>.TableServiceQuery
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.TableServiceQuery
  nameWithType.vb: TableServiceQuery(Of TElement).TableServiceQuery
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).TableServiceQuery
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Context*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Context
  isExternal: false
  name: Context
  nameWithType: TableServiceQuery<TElement>.Context
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.Context
  nameWithType.vb: TableServiceQuery(Of TElement).Context
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).Context
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ElementType*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ElementType
  isExternal: false
  name: ElementType
  nameWithType: TableServiceQuery<TElement>.ElementType
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.ElementType
  nameWithType.vb: TableServiceQuery(Of TElement).ElementType
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).ElementType
- uid: System.Linq.IQueryable.ElementType
  commentId: P:System.Linq.IQueryable.ElementType
  parent: System.Linq.IQueryable
  isExternal: true
  name: ElementType
  nameWithType: IQueryable.ElementType
  fullName: System.Linq.IQueryable.ElementType
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Expression*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Expression
  isExternal: false
  name: Expression
  nameWithType: TableServiceQuery<TElement>.Expression
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.Expression
  nameWithType.vb: TableServiceQuery(Of TElement).Expression
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).Expression
- uid: System.Linq.IQueryable.Expression
  commentId: P:System.Linq.IQueryable.Expression
  parent: System.Linq.IQueryable
  isExternal: true
  name: Expression
  nameWithType: IQueryable.Expression
  fullName: System.Linq.IQueryable.Expression
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: System.Linq.IQueryProvider
  commentId: T:System.Linq.IQueryProvider
  parent: System.Linq
  isExternal: true
  name: IQueryProvider
  nameWithType: IQueryProvider
  fullName: System.Linq.IQueryProvider
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Provider*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Provider
  isExternal: false
  name: Provider
  nameWithType: TableServiceQuery<TElement>.Provider
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.Provider
  nameWithType.vb: TableServiceQuery(Of TElement).Provider
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).Provider
- uid: System.Linq.IQueryable.Provider
  commentId: P:System.Linq.IQueryable.Provider
  parent: System.Linq.IQueryable
  isExternal: true
  name: Provider
  nameWithType: IQueryable.Provider
  fullName: System.Linq.IQueryable.Provider
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Expand*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Expand
  isExternal: false
  name: Expand
  nameWithType: TableServiceQuery<TElement>.Expand
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.Expand
  nameWithType.vb: TableServiceQuery(Of TElement).Expand
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).Expand
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullname.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.GetEnumerator*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.GetEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: TableServiceQuery<TElement>.GetEnumerator
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.GetEnumerator
  nameWithType.vb: TableServiceQuery(Of TElement).GetEnumerator
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{TElement}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{TElement}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<TElement>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<TElement>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of TElement).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of TElement).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<TElement>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<TElement>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of TElement).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of TElement).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{TElement}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<TElement>
  nameWithType: IEnumerator<TElement>
  fullName: System.Collections.Generic.IEnumerator<TElement>
  nameWithType.vb: IEnumerator(Of TElement)
  fullname.vb: System.Collections.Generic.IEnumerator(Of TElement)
  name.vb: IEnumerator(Of TElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullname.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: false
  name: IEnumerable.GetEnumerator
  nameWithType: TableServiceQuery<TElement>.IEnumerable.GetEnumerator
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: TableServiceQuery(Of TElement).System.Collections.IEnumerable.GetEnumerator
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableRequestOptions
  nameWithType: TableRequestOptions
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  commentId: T:Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  nameWithType: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Execute*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.Execute
  isExternal: false
  name: Execute
  nameWithType: TableServiceQuery<TElement>.Execute
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.Execute
  nameWithType.vb: TableServiceQuery(Of TElement).Execute
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).Execute
- uid: Microsoft.WindowsAzure.Storage.Table
  commentId: N:Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table
  nameWithType: Microsoft.WindowsAzure.Storage.Table
  fullName: Microsoft.WindowsAzure.Storage.Table
- uid: Microsoft.WindowsAzure.Storage
  commentId: N:Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  nameWithType: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmented*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmented
  isExternal: false
  name: ExecuteSegmented
  nameWithType: TableServiceQuery<TElement>.ExecuteSegmented
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.ExecuteSegmented
  nameWithType.vb: TableServiceQuery(Of TElement).ExecuteSegmented
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).ExecuteSegmented
- uid: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableContinuationToken
  nameWithType: TableContinuationToken
  fullName: Microsoft.WindowsAzure.Storage.Table.TableContinuationToken
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{TElement}}
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{``0}
  parent: Microsoft.WindowsAzure.Storage.Table
  definition: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
  name: TableQuerySegment<TElement>
  nameWithType: TableQuerySegment<TElement>
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment<TElement>
  nameWithType.vb: TableQuerySegment(Of TElement)
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment(Of TElement)
  name.vb: TableQuerySegment(Of TElement)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
    name: TableQuerySegment
    nameWithType: TableQuerySegment
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
    name: TableQuerySegment
    nameWithType: TableQuerySegment
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
  isExternal: false
  name: TableQuerySegment<TElement>
  nameWithType: TableQuerySegment<TElement>
  fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment<TElement>
  nameWithType.vb: TableQuerySegment(Of TElement)
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment(Of TElement)
  name.vb: TableQuerySegment(Of TElement)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
    name: TableQuerySegment
    nameWithType: TableQuerySegment
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
    name: TableQuerySegment
    nameWithType: TableQuerySegment
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.BeginExecuteSegmented*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.BeginExecuteSegmented
  isExternal: false
  name: BeginExecuteSegmented
  nameWithType: TableServiceQuery<TElement>.BeginExecuteSegmented
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.BeginExecuteSegmented
  nameWithType.vb: TableServiceQuery(Of TElement).BeginExecuteSegmented
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).BeginExecuteSegmented
- uid: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
  commentId: T:Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: ICancellableAsyncResult
  nameWithType: ICancellableAsyncResult
  fullName: Microsoft.WindowsAzure.Storage.ICancellableAsyncResult
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.EndExecuteSegmented*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.EndExecuteSegmented
  isExternal: false
  name: EndExecuteSegmented
  nameWithType: TableServiceQuery<TElement>.EndExecuteSegmented
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.EndExecuteSegmented
  nameWithType.vb: TableServiceQuery(Of TElement).EndExecuteSegmented
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).EndExecuteSegmented
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullname.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery`1.ExecuteSegmentedAsync
  isExternal: false
  name: ExecuteSegmentedAsync
  nameWithType: TableServiceQuery<TElement>.ExecuteSegmentedAsync
  fullName: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery<TElement>.ExecuteSegmentedAsync
  nameWithType.vb: TableServiceQuery(Of TElement).ExecuteSegmentedAsync
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.DataServices.TableServiceQuery(Of TElement).ExecuteSegmentedAsync
- uid: System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{{TElement}}}
  commentId: T:System.Threading.Tasks.Task{Microsoft.WindowsAzure.Storage.Table.TableQuerySegment{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<TableQuerySegment<TElement>>
  nameWithType: Task<TableQuerySegment<TElement>>
  fullName: System.Threading.Tasks.Task<Microsoft.WindowsAzure.Storage.Table.TableQuerySegment<TElement>>
  nameWithType.vb: Task(Of TableQuerySegment(Of TElement))
  fullname.vb: System.Threading.Tasks.Task(Of Microsoft.WindowsAzure.Storage.Table.TableQuerySegment(Of TElement))
  name.vb: Task(Of TableQuerySegment(Of TElement))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
    name: TableQuerySegment
    nameWithType: TableQuerySegment
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment`1
    name: TableQuerySegment
    nameWithType: TableQuerySegment
    fullName: Microsoft.WindowsAzure.Storage.Table.TableQuerySegment
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: false
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
