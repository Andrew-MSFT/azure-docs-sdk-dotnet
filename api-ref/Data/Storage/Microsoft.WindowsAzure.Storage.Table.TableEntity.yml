### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableEntity
  id: TableEntity
  parent: Microsoft.WindowsAzure.Storage.Table
  children:
  - Microsoft.WindowsAzure.Storage.Table.TableEntity.#ctor
  - Microsoft.WindowsAzure.Storage.Table.TableEntity.#ctor(System.String,System.String)
  - Microsoft.WindowsAzure.Storage.Table.TableEntity.DisableCompiledSerializers
  - Microsoft.WindowsAzure.Storage.Table.TableEntity.DisablePropertyResolverCache
  - Microsoft.WindowsAzure.Storage.Table.TableEntity.ETag
  - Microsoft.WindowsAzure.Storage.Table.TableEntity.PartitionKey
  - Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity(System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadUserObject(System.Object,System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.TableEntity.RowKey
  - Microsoft.WindowsAzure.Storage.Table.TableEntity.Timestamp
  - Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  - Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteUserObject(System.Object,Microsoft.WindowsAzure.Storage.OperationContext)
  langs:
  - csharp
  - vb
  name: TableEntity
  nameWithType: TableEntity
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity
  type: Class
  source:
    remote:
      path: Lib/Common/Table/TableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: TableEntity
    path: Lib/Common/Table/TableEntity.cs
    startLine: 44
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nRepresents the base object type for a table entity in the Table service.\n"
  remarks: "<xref href=\"Microsoft.WindowsAzure.Storage.Table.TableEntity\" data-throw-if-not-resolved=\"false\"></xref> provides a base implementation for the <xref href=\"Microsoft.WindowsAzure.Storage.Table.ITableEntity\" data-throw-if-not-resolved=\"false\"></xref> interface that provides <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity(System.Collections.Generic.IDictionary%7bSystem.String%2cMicrosoft.WindowsAzure.Storage.Table.EntityProperty%7d%2cMicrosoft.WindowsAzure.Storage.OperationContext)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)\" data-throw-if-not-resolved=\"false\"></xref> methods that by default serialize and \n    deserialize all properties via reflection. A table entity class may extend this class and override the <xref href=\"Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity(System.Collections.Generic.IDictionary%7bSystem.String%2cMicrosoft.WindowsAzure.Storage.Table.EntityProperty%7d%2cMicrosoft.WindowsAzure.Storage.OperationContext)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Microsoft.WindowsAzure.Storage.Table.ITableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)\" data-throw-if-not-resolved=\"false\"></xref> methods to provide customized or better performing serialization logic."
  example: []
  syntax:
    content: 'public class TableEntity : ITableEntity'
    content.vb: >-
      Public Class TableEntity
          Implements ITableEntity
  inheritance:
  - System.Object
  implements:
  - Microsoft.WindowsAzure.Storage.Table.ITableEntity
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableEntity.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.Table.TableEntity
  langs:
  - csharp
  - vb
  name: TableEntity()
  nameWithType: TableEntity.TableEntity()
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.TableEntity()
  type: Constructor
  source:
    remote:
      path: Lib/Common/Table/TableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Table/TableEntity.cs
    startLine: 62
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableEntity\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TableEntity()
    content.vb: Public Sub New
  overload: Microsoft.WindowsAzure.Storage.Table.TableEntity.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.#ctor(System.String,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableEntity.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.WindowsAzure.Storage.Table.TableEntity
  langs:
  - csharp
  - vb
  name: TableEntity(String, String)
  nameWithType: TableEntity.TableEntity(String, String)
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.TableEntity(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Lib/Common/Table/TableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Table/TableEntity.cs
    startLine: 71
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableEntity\" data-throw-if-not-resolved=\"false\"></xref> class with the specified partition key and row key.\n"
  example: []
  syntax:
    content: public TableEntity(string partitionKey, string rowKey)
    content.vb: Public Sub New(partitionKey As String, rowKey As String)
    parameters:
    - id: partitionKey
      type: System.String
      description: A string containing the partition key of the <xref href="Microsoft.WindowsAzure.Storage.Table.TableEntity" data-throw-if-not-resolved="false"></xref> to be initialized.
    - id: rowKey
      type: System.String
      description: A string containing the row key of the <xref href="Microsoft.WindowsAzure.Storage.Table.TableEntity" data-throw-if-not-resolved="false"></xref> to be initialized.
  overload: Microsoft.WindowsAzure.Storage.Table.TableEntity.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.PartitionKey
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableEntity.PartitionKey
  id: PartitionKey
  parent: Microsoft.WindowsAzure.Storage.Table.TableEntity
  langs:
  - csharp
  - vb
  name: PartitionKey
  nameWithType: TableEntity.PartitionKey
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.PartitionKey
  type: Property
  source:
    remote:
      path: Lib/Common/Table/TableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: PartitionKey
    path: Lib/Common/Table/TableEntity.cs
    startLine: 83
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the entity's partition key.\n"
  example: []
  syntax:
    content: public string PartitionKey { get; set; }
    content.vb: Public Property PartitionKey As String
    parameters: []
    return:
      type: System.String
      description: A string containing the partition key for the entity.
  overload: Microsoft.WindowsAzure.Storage.Table.TableEntity.PartitionKey*
  implements:
  - Microsoft.WindowsAzure.Storage.Table.ITableEntity.PartitionKey
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.RowKey
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableEntity.RowKey
  id: RowKey
  parent: Microsoft.WindowsAzure.Storage.Table.TableEntity
  langs:
  - csharp
  - vb
  name: RowKey
  nameWithType: TableEntity.RowKey
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.RowKey
  type: Property
  source:
    remote:
      path: Lib/Common/Table/TableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RowKey
    path: Lib/Common/Table/TableEntity.cs
    startLine: 89
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the entity's row key.\n"
  example: []
  syntax:
    content: public string RowKey { get; set; }
    content.vb: Public Property RowKey As String
    parameters: []
    return:
      type: System.String
      description: A string containing the row key for the entity.
  overload: Microsoft.WindowsAzure.Storage.Table.TableEntity.RowKey*
  implements:
  - Microsoft.WindowsAzure.Storage.Table.ITableEntity.RowKey
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.Timestamp
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableEntity.Timestamp
  id: Timestamp
  parent: Microsoft.WindowsAzure.Storage.Table.TableEntity
  langs:
  - csharp
  - vb
  name: Timestamp
  nameWithType: TableEntity.Timestamp
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.Timestamp
  type: Property
  source:
    remote:
      path: Lib/Common/Table/TableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: Timestamp
    path: Lib/Common/Table/TableEntity.cs
    startLine: 95
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the entity's timestamp.\n"
  example: []
  syntax:
    content: public DateTimeOffset Timestamp { get; set; }
    content.vb: Public Property Timestamp As DateTimeOffset
    parameters: []
    return:
      type: System.DateTimeOffset
      description: A <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> containing the timestamp of the entity.
  overload: Microsoft.WindowsAzure.Storage.Table.TableEntity.Timestamp*
  implements:
  - Microsoft.WindowsAzure.Storage.Table.ITableEntity.Timestamp
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.ETag
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableEntity.ETag
  id: ETag
  parent: Microsoft.WindowsAzure.Storage.Table.TableEntity
  langs:
  - csharp
  - vb
  name: ETag
  nameWithType: TableEntity.ETag
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.ETag
  type: Property
  source:
    remote:
      path: Lib/Common/Table/TableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ETag
    path: Lib/Common/Table/TableEntity.cs
    startLine: 101
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the entity's ETag. Set this value to '*' in order to force an overwrite to an entity as part of an update operation.\n"
  example: []
  syntax:
    content: public string ETag { get; set; }
    content.vb: Public Property ETag As String
    parameters: []
    return:
      type: System.String
      description: A string containing the ETag value for the entity.
  overload: Microsoft.WindowsAzure.Storage.Table.TableEntity.ETag*
  implements:
  - Microsoft.WindowsAzure.Storage.Table.ITableEntity.ETag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity(System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity(System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  id: ReadEntity(System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.TableEntity
  langs:
  - csharp
  - vb
  name: ReadEntity(IDictionary<String, EntityProperty>, OperationContext)
  nameWithType: TableEntity.ReadEntity(IDictionary<String, EntityProperty>, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity(System.Collections.Generic.IDictionary<System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty>, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/Common/Table/TableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ReadEntity
    path: Lib/Common/Table/TableEntity.cs
    startLine: 108
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nDeserializes the entity using the specified <xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> that maps property names to typed <xref href=\"Microsoft.WindowsAzure.Storage.Table.EntityProperty\" data-throw-if-not-resolved=\"false\"></xref> values. \n"
  example: []
  syntax:
    content: public virtual void ReadEntity(IDictionary<string, EntityProperty> properties, OperationContext operationContext)
    content.vb: Public Overridable Sub ReadEntity(properties As IDictionary(Of String, EntityProperty), operationContext As OperationContext)
    parameters:
    - id: properties
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty}
      description: An <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref> object that maps property names to typed <xref href="Microsoft.WindowsAzure.Storage.Table.EntityProperty" data-throw-if-not-resolved="false"></xref> values.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  overload: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity*
  implements:
  - Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity(System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  nameWithType.vb: TableEntity.ReadEntity(IDictionary(Of String, EntityProperty), OperationContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity(System.Collections.Generic.IDictionary(Of System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty), Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: ReadEntity(IDictionary(Of String, EntityProperty), OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadUserObject(System.Object,System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadUserObject(System.Object,System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  id: ReadUserObject(System.Object,System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.TableEntity
  langs:
  - csharp
  - vb
  name: ReadUserObject(Object, IDictionary<String, EntityProperty>, OperationContext)
  nameWithType: TableEntity.ReadUserObject(Object, IDictionary<String, EntityProperty>, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadUserObject(System.Object, System.Collections.Generic.IDictionary<System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty>, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/Common/Table/TableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ReadUserObject
    path: Lib/Common/Table/TableEntity.cs
    startLine: 131
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nDeserializes a custom entity instance using the specified <xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> of property names to <xref href=\"Microsoft.WindowsAzure.Storage.Table.EntityProperty\" data-throw-if-not-resolved=\"false\"></xref> data typed values. \n"
  example: []
  syntax:
    content: public static void ReadUserObject(object entity, IDictionary<string, EntityProperty> properties, OperationContext operationContext)
    content.vb: Public Shared Sub ReadUserObject(entity As Object, properties As IDictionary(Of String, EntityProperty), operationContext As OperationContext)
    parameters:
    - id: entity
      type: System.Object
      description: The custom entity instance being deserialized.
    - id: properties
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty}
      description: An <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref> object that maps string property names to <xref href="Microsoft.WindowsAzure.Storage.Table.EntityProperty" data-throw-if-not-resolved="false"></xref> data values to deserialize and store in this table entity instance.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
  overload: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadUserObject*
  nameWithType.vb: TableEntity.ReadUserObject(Object, IDictionary(Of String, EntityProperty), OperationContext)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadUserObject(System.Object, System.Collections.Generic.IDictionary(Of System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty), Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: ReadUserObject(Object, IDictionary(Of String, EntityProperty), OperationContext)
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  id: WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.TableEntity
  langs:
  - csharp
  - vb
  name: WriteEntity(OperationContext)
  nameWithType: TableEntity.WriteEntity(OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/Common/Table/TableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: WriteEntity
    path: Lib/Common/Table/TableEntity.cs
    startLine: 266
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nSerializes the <xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> of property names mapped to <xref href=\"Microsoft.WindowsAzure.Storage.Table.EntityProperty\" data-throw-if-not-resolved=\"false\"></xref> data values from this <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableEntity\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public virtual IDictionary<string, EntityProperty> WriteEntity(OperationContext operationContext)
    content.vb: Public Overridable Function WriteEntity(operationContext As OperationContext) As IDictionary(Of String, EntityProperty)
    parameters:
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty}
      description: An <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref> object that maps string property names to <xref href="Microsoft.WindowsAzure.Storage.Table.EntityProperty" data-throw-if-not-resolved="false"></xref> typed values created by serializing this table entity instance.
  overload: Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteEntity*
  implements:
  - Microsoft.WindowsAzure.Storage.Table.ITableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteUserObject(System.Object,Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteUserObject(System.Object,Microsoft.WindowsAzure.Storage.OperationContext)
  id: WriteUserObject(System.Object,Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.TableEntity
  langs:
  - csharp
  - vb
  name: WriteUserObject(Object, OperationContext)
  nameWithType: TableEntity.WriteUserObject(Object, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteUserObject(System.Object, Microsoft.WindowsAzure.Storage.OperationContext)
  type: Method
  source:
    remote:
      path: Lib/Common/Table/TableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: WriteUserObject
    path: Lib/Common/Table/TableEntity.cs
    startLine: 288
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nCreate a <xref href=\"System.Collections.Generic.IDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> of <xref href=\"Microsoft.WindowsAzure.Storage.Table.EntityProperty\" data-throw-if-not-resolved=\"false\"></xref> objects for all the properties of the specified entity object.\n"
  example: []
  syntax:
    content: public static IDictionary<string, EntityProperty> WriteUserObject(object entity, OperationContext operationContext)
    content.vb: Public Shared Function WriteUserObject(entity As Object, operationContext As OperationContext) As IDictionary(Of String, EntityProperty)
    parameters:
    - id: entity
      type: System.Object
      description: The entity object to serialize.
    - id: operationContext
      type: Microsoft.WindowsAzure.Storage.OperationContext
      description: An <xref href="Microsoft.WindowsAzure.Storage.OperationContext" data-throw-if-not-resolved="false"></xref> object that represents the context for the current operation.
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty}
      description: An <xref href="System.Collections.Generic.IDictionary%602" data-throw-if-not-resolved="false"></xref> of <xref href="Microsoft.WindowsAzure.Storage.Table.EntityProperty" data-throw-if-not-resolved="false"></xref> objects for all the properties of the specified entity object.
  overload: Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteUserObject*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.DisableCompiledSerializers
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableEntity.DisableCompiledSerializers
  id: DisableCompiledSerializers
  parent: Microsoft.WindowsAzure.Storage.Table.TableEntity
  langs:
  - csharp
  - vb
  name: DisableCompiledSerializers
  nameWithType: TableEntity.DisableCompiledSerializers
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.DisableCompiledSerializers
  type: Property
  source:
    remote:
      path: Lib/Common/Table/TableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DisableCompiledSerializers
    path: Lib/Common/Table/TableEntity.cs
    startLine: 444
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nDisables the ability to dynamically generate read and write lambdas at runtime. Setting this to false will clear out the static cache shared across all type instances that derive from TableEntity.\n"
  example: []
  syntax:
    content: public static bool DisableCompiledSerializers { get; set; }
    content.vb: Public Shared Property DisableCompiledSerializers As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.WindowsAzure.Storage.Table.TableEntity.DisableCompiledSerializers*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.DisablePropertyResolverCache
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableEntity.DisablePropertyResolverCache
  id: DisablePropertyResolverCache
  parent: Microsoft.WindowsAzure.Storage.Table.TableEntity
  langs:
  - csharp
  - vb
  name: DisablePropertyResolverCache
  nameWithType: TableEntity.DisablePropertyResolverCache
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.DisablePropertyResolverCache
  type: Property
  source:
    remote:
      path: Lib/Common/Table/TableEntity.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: DisablePropertyResolverCache
    path: Lib/Common/Table/TableEntity.cs
    startLine: 798
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the status of the property resolver cache for the <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableEntity\" data-throw-if-not-resolved=\"false\"></xref>. \n"
  remarks: "\nThe property resolver cache caches known entity types and their respective property resolver dictionaries when entities are deserialized \nand the payload does not include JSON metadata. For most scenarios, disabling the property resolver cache is not recommended due to its \neffect on performance. \n"
  example: []
  syntax:
    content: public static bool DisablePropertyResolverCache { get; set; }
    content.vb: Public Shared Property DisablePropertyResolverCache As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.WindowsAzure.Storage.Table.TableEntity.DisablePropertyResolverCache*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableEntity
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableEntity
  nameWithType: TableEntity
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity
- uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity
  commentId: T:Microsoft.WindowsAzure.Storage.Table.ITableEntity
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: ITableEntity
  nameWithType: ITableEntity
  fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity(System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity(System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.TableEntity
  isExternal: true
  name: ReadEntity(IDictionary<String, EntityProperty>, OperationContext)
  nameWithType: TableEntity.ReadEntity(IDictionary<String, EntityProperty>, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity(System.Collections.Generic.IDictionary<System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty>, Microsoft.WindowsAzure.Storage.OperationContext)
  nameWithType.vb: TableEntity.ReadEntity(IDictionary(Of String, EntityProperty), OperationContext)
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity(System.Collections.Generic.IDictionary(Of System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty), Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: ReadEntity(IDictionary(Of String, EntityProperty), OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity(System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
    name: ReadEntity
    nameWithType: TableEntity.ReadEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityProperty
    name: EntityProperty
    nameWithType: EntityProperty
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity(System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
    name: ReadEntity
    nameWithType: TableEntity.ReadEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityProperty
    name: EntityProperty
    nameWithType: EntityProperty
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityProperty
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.TableEntity
  isExternal: false
  name: WriteEntity(OperationContext)
  nameWithType: TableEntity.WriteEntity(OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
    name: WriteEntity
    nameWithType: TableEntity.WriteEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
    name: WriteEntity
    nameWithType: TableEntity.WriteEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity(System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity(System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.ITableEntity
  isExternal: true
  name: ReadEntity(IDictionary<String, EntityProperty>, OperationContext)
  nameWithType: ITableEntity.ReadEntity(IDictionary<String, EntityProperty>, OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity(System.Collections.Generic.IDictionary<System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty>, Microsoft.WindowsAzure.Storage.OperationContext)
  nameWithType.vb: ITableEntity.ReadEntity(IDictionary(Of String, EntityProperty), OperationContext)
  fullname.vb: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity(System.Collections.Generic.IDictionary(Of System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty), Microsoft.WindowsAzure.Storage.OperationContext)
  name.vb: ReadEntity(IDictionary(Of String, EntityProperty), OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity(System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
    name: ReadEntity
    nameWithType: ITableEntity.ReadEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityProperty
    name: EntityProperty
    nameWithType: EntityProperty
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity(System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty},Microsoft.WindowsAzure.Storage.OperationContext)
    name: ReadEntity
    nameWithType: ITableEntity.ReadEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ReadEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityProperty
    name: EntityProperty
    nameWithType: EntityProperty
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityProperty
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.ITableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  parent: Microsoft.WindowsAzure.Storage.Table.ITableEntity
  isExternal: false
  name: WriteEntity(OperationContext)
  nameWithType: ITableEntity.WriteEntity(OperationContext)
  fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
  spec.csharp:
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
    name: WriteEntity
    nameWithType: ITableEntity.WriteEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.WriteEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.WriteEntity(Microsoft.WindowsAzure.Storage.OperationContext)
    name: WriteEntity
    nameWithType: ITableEntity.WriteEntity
    fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.WriteEntity
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.WindowsAzure.Storage.OperationContext
    name: OperationContext
    nameWithType: OperationContext
    fullName: Microsoft.WindowsAzure.Storage.OperationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table
  commentId: N:Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table
  nameWithType: Microsoft.WindowsAzure.Storage.Table
  fullName: Microsoft.WindowsAzure.Storage.Table
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableEntity.#ctor
  isExternal: false
  name: TableEntity
  nameWithType: TableEntity.TableEntity
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.TableEntity
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.PartitionKey*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableEntity.PartitionKey
  isExternal: false
  name: PartitionKey
  nameWithType: TableEntity.PartitionKey
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.PartitionKey
- uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.PartitionKey
  commentId: P:Microsoft.WindowsAzure.Storage.Table.ITableEntity.PartitionKey
  parent: Microsoft.WindowsAzure.Storage.Table.ITableEntity
  isExternal: false
  name: PartitionKey
  nameWithType: ITableEntity.PartitionKey
  fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.PartitionKey
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.RowKey*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableEntity.RowKey
  isExternal: false
  name: RowKey
  nameWithType: TableEntity.RowKey
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.RowKey
- uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.RowKey
  commentId: P:Microsoft.WindowsAzure.Storage.Table.ITableEntity.RowKey
  parent: Microsoft.WindowsAzure.Storage.Table.ITableEntity
  isExternal: false
  name: RowKey
  nameWithType: ITableEntity.RowKey
  fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.RowKey
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.Timestamp*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableEntity.Timestamp
  isExternal: false
  name: Timestamp
  nameWithType: TableEntity.Timestamp
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.Timestamp
- uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.Timestamp
  commentId: P:Microsoft.WindowsAzure.Storage.Table.ITableEntity.Timestamp
  parent: Microsoft.WindowsAzure.Storage.Table.ITableEntity
  isExternal: false
  name: Timestamp
  nameWithType: ITableEntity.Timestamp
  fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.Timestamp
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.ETag*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableEntity.ETag
  isExternal: false
  name: ETag
  nameWithType: TableEntity.ETag
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.ETag
- uid: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ETag
  commentId: P:Microsoft.WindowsAzure.Storage.Table.ITableEntity.ETag
  parent: Microsoft.WindowsAzure.Storage.Table.ITableEntity
  isExternal: false
  name: ETag
  nameWithType: ITableEntity.ETag
  fullName: Microsoft.WindowsAzure.Storage.Table.ITableEntity.ETag
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullname.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.EntityProperty
  commentId: T:Microsoft.WindowsAzure.Storage.Table.EntityProperty
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: EntityProperty
  nameWithType: EntityProperty
  fullName: Microsoft.WindowsAzure.Storage.Table.EntityProperty
- uid: Microsoft.WindowsAzure.Storage.OperationContext
  commentId: T:Microsoft.WindowsAzure.Storage.OperationContext
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: OperationContext
  nameWithType: OperationContext
  fullName: Microsoft.WindowsAzure.Storage.OperationContext
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity
  isExternal: false
  name: ReadEntity
  nameWithType: TableEntity.ReadEntity
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadEntity
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty}
  commentId: T:System.Collections.Generic.IDictionary{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, EntityProperty>
  nameWithType: IDictionary<String, EntityProperty>
  fullName: System.Collections.Generic.IDictionary<System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty>
  nameWithType.vb: IDictionary(Of String, EntityProperty)
  fullname.vb: System.Collections.Generic.IDictionary(Of System.String, Microsoft.WindowsAzure.Storage.Table.EntityProperty)
  name.vb: IDictionary(Of String, EntityProperty)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityProperty
    name: EntityProperty
    nameWithType: EntityProperty
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.EntityProperty
    name: EntityProperty
    nameWithType: EntityProperty
    fullName: Microsoft.WindowsAzure.Storage.Table.EntityProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage
  commentId: N:Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  nameWithType: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadUserObject*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadUserObject
  isExternal: false
  name: ReadUserObject
  nameWithType: TableEntity.ReadUserObject
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.ReadUserObject
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteEntity*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteEntity
  isExternal: false
  name: WriteEntity
  nameWithType: TableEntity.WriteEntity
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteEntity
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteUserObject*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteUserObject
  isExternal: false
  name: WriteUserObject
  nameWithType: TableEntity.WriteUserObject
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.WriteUserObject
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.DisableCompiledSerializers*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableEntity.DisableCompiledSerializers
  isExternal: false
  name: DisableCompiledSerializers
  nameWithType: TableEntity.DisableCompiledSerializers
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.DisableCompiledSerializers
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.WindowsAzure.Storage.Table.TableEntity.DisablePropertyResolverCache*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableEntity.DisablePropertyResolverCache
  isExternal: false
  name: DisablePropertyResolverCache
  nameWithType: TableEntity.DisablePropertyResolverCache
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEntity.DisablePropertyResolverCache
