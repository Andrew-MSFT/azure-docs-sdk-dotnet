### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  id: TableRequestOptions
  parent: Microsoft.WindowsAzure.Storage.Table
  children:
  - Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.#ctor
  - Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.#ctor(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)
  - Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.EncryptionPolicy
  - Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.EncryptionResolver
  - Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.LocationMode
  - Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.MaximumExecutionTime
  - Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.PayloadFormat
  - Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.ProjectSystemProperties
  - Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.PropertyResolver
  - Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.RequireEncryption
  - Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.RetryPolicy
  - Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.ServerTimeout
  langs:
  - csharp
  - vb
  name: TableRequestOptions
  nameWithType: TableRequestOptions
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  type: Class
  source:
    remote:
      path: Lib/Common/Table/TableRequestOptions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: TableRequestOptions
    path: Lib/Common/Table/TableRequestOptions.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nRepresents a set of timeout and retry policy options that may be specified for a request against the Table service.\n"
  example: []
  syntax:
    content: 'public sealed class TableRequestOptions : IRequestOptions'
    content.vb: >-
      Public NotInheritable Class TableRequestOptions
          Implements IRequestOptions
  inheritance:
  - System.Object
  implements:
  - Microsoft.WindowsAzure.Storage.IRequestOptions
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  langs:
  - csharp
  - vb
  name: TableRequestOptions()
  nameWithType: TableRequestOptions.TableRequestOptions()
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.TableRequestOptions()
  type: Constructor
  source:
    remote:
      path: Lib/Common/Table/TableRequestOptions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Table/TableRequestOptions.cs
    startLine: 61
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableRequestOptions\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TableRequestOptions()
    content.vb: Public Sub New
  overload: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.#ctor(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)
  commentId: M:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.#ctor(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)
  id: '#ctor(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)'
  parent: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  langs:
  - csharp
  - vb
  name: TableRequestOptions(TableRequestOptions)
  nameWithType: TableRequestOptions.TableRequestOptions(TableRequestOptions)
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.TableRequestOptions(Microsoft.WindowsAzure.Storage.Table.TableRequestOptions)
  type: Constructor
  source:
    remote:
      path: Lib/Common/Table/TableRequestOptions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: .ctor
    path: Lib/Common/Table/TableRequestOptions.cs
    startLine: 69
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableRequestOptions\" data-throw-if-not-resolved=\"false\"></xref> class with the specified <xref href=\"Microsoft.WindowsAzure.Storage.Table.TableRequestOptions\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TableRequestOptions(TableRequestOptions other)
    content.vb: Public Sub New(other As TableRequestOptions)
    parameters:
    - id: other
      type: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
      description: The <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> object used to initialize a new instance of the <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions" data-throw-if-not-resolved="false"></xref> class.
  overload: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.RetryPolicy
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.RetryPolicy
  id: RetryPolicy
  parent: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  langs:
  - csharp
  - vb
  name: RetryPolicy
  nameWithType: TableRequestOptions.RetryPolicy
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.RetryPolicy
  type: Property
  source:
    remote:
      path: Lib/Common/Table/TableRequestOptions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RetryPolicy
    path: Lib/Common/Table/TableRequestOptions.cs
    startLine: 234
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the retry policy for the request.\n"
  example: []
  syntax:
    content: public IRetryPolicy RetryPolicy { get; set; }
    content.vb: Public Property RetryPolicy As IRetryPolicy
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
      description: An object of type <xref href="Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.RetryPolicy*
  implements:
  - Microsoft.WindowsAzure.Storage.IRequestOptions.RetryPolicy
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.ProjectSystemProperties
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.ProjectSystemProperties
  id: ProjectSystemProperties
  parent: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  langs:
  - csharp
  - vb
  name: ProjectSystemProperties
  nameWithType: TableRequestOptions.ProjectSystemProperties
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.ProjectSystemProperties
  type: Property
  source:
    remote:
      path: Lib/Common/Table/TableRequestOptions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ProjectSystemProperties
    path: Lib/Common/Table/TableRequestOptions.cs
    startLine: 239
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the option to include system properties such as Partition Key and Row Key in queries.\n"
  example: []
  syntax:
    content: public bool ? ProjectSystemProperties { get; set; }
    content.vb: Public Property ProjectSystemProperties As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
  overload: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.ProjectSystemProperties*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.EncryptionPolicy
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.EncryptionPolicy
  id: EncryptionPolicy
  parent: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  langs:
  - csharp
  - vb
  name: EncryptionPolicy
  nameWithType: TableRequestOptions.EncryptionPolicy
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.EncryptionPolicy
  type: Property
  source:
    remote:
      path: Lib/Common/Table/TableRequestOptions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EncryptionPolicy
    path: Lib/Common/Table/TableRequestOptions.cs
    startLine: 246
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the encryption policy for the request.\n"
  example: []
  syntax:
    content: public TableEncryptionPolicy EncryptionPolicy { get; set; }
    content.vb: Public Property EncryptionPolicy As TableEncryptionPolicy
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Table.TableEncryptionPolicy
      description: An object of type <xref href="Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.EncryptionPolicy" data-throw-if-not-resolved="false"></xref>.
  overload: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.EncryptionPolicy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.RequireEncryption
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.RequireEncryption
  id: RequireEncryption
  parent: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  langs:
  - csharp
  - vb
  name: RequireEncryption
  nameWithType: TableRequestOptions.RequireEncryption
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.RequireEncryption
  type: Property
  source:
    remote:
      path: Lib/Common/Table/TableRequestOptions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: RequireEncryption
    path: Lib/Common/Table/TableRequestOptions.cs
    startLine: 252
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets a value to indicate whether data written and read by the client library should be encrypted.\n"
  example: []
  syntax:
    content: public bool ? RequireEncryption { get; set; }
    content.vb: Public Property RequireEncryption As Boolean?
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
      description: Use <code>true</code> to specify that data should be encrypted/decrypted for all transactions; otherwise, <code>false</code>.
  overload: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.RequireEncryption*
  implements:
  - Microsoft.WindowsAzure.Storage.IRequestOptions.RequireEncryption
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.LocationMode
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.LocationMode
  id: LocationMode
  parent: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  langs:
  - csharp
  - vb
  name: LocationMode
  nameWithType: TableRequestOptions.LocationMode
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.LocationMode
  type: Property
  source:
    remote:
      path: Lib/Common/Table/TableRequestOptions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: LocationMode
    path: Lib/Common/Table/TableRequestOptions.cs
    startLine: 259
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the location mode of the request.\n"
  example: []
  syntax:
    content: public LocationMode? LocationMode { get; set; }
    content.vb: Public Property LocationMode As LocationMode?
    parameters: []
    return:
      type: System.Nullable{Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode}
      description: A <xref href="Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode" data-throw-if-not-resolved="false"></xref> enumeration value indicating the location mode of the request.
  overload: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.LocationMode*
  implements:
  - Microsoft.WindowsAzure.Storage.IRequestOptions.LocationMode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.ServerTimeout
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.ServerTimeout
  id: ServerTimeout
  parent: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  langs:
  - csharp
  - vb
  name: ServerTimeout
  nameWithType: TableRequestOptions.ServerTimeout
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.ServerTimeout
  type: Property
  source:
    remote:
      path: Lib/Common/Table/TableRequestOptions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: ServerTimeout
    path: Lib/Common/Table/TableRequestOptions.cs
    startLine: 265
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the server timeout interval for the request.\n"
  example: []
  syntax:
    content: public TimeSpan? ServerTimeout { get; set; }
    content.vb: Public Property ServerTimeout As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> containing the server timeout interval for the request.
  overload: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.ServerTimeout*
  implements:
  - Microsoft.WindowsAzure.Storage.IRequestOptions.ServerTimeout
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.MaximumExecutionTime
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.MaximumExecutionTime
  id: MaximumExecutionTime
  parent: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  langs:
  - csharp
  - vb
  name: MaximumExecutionTime
  nameWithType: TableRequestOptions.MaximumExecutionTime
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.MaximumExecutionTime
  type: Property
  source:
    remote:
      path: Lib/Common/Table/TableRequestOptions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: MaximumExecutionTime
    path: Lib/Common/Table/TableRequestOptions.cs
    startLine: 271
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the maximum execution time for all potential retries for the request.\n"
  example: []
  syntax:
    content: public TimeSpan? MaximumExecutionTime { get; set; }
    content.vb: Public Property MaximumExecutionTime As TimeSpan?
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
      description: A <xref href="System.TimeSpan" data-throw-if-not-resolved="false"></xref> representing the maximum execution time for retries for the request.
  overload: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.MaximumExecutionTime*
  implements:
  - Microsoft.WindowsAzure.Storage.IRequestOptions.MaximumExecutionTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.PayloadFormat
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.PayloadFormat
  id: PayloadFormat
  parent: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  langs:
  - csharp
  - vb
  name: PayloadFormat
  nameWithType: TableRequestOptions.PayloadFormat
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.PayloadFormat
  type: Property
  source:
    remote:
      path: Lib/Common/Table/TableRequestOptions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: PayloadFormat
    path: Lib/Common/Table/TableRequestOptions.cs
    startLine: 293
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the <xref href=\"Microsoft.WindowsAzure.Storage.Table.TablePayloadFormat\" data-throw-if-not-resolved=\"false\"></xref> that will be used for the request.\n"
  example: []
  syntax:
    content: public TablePayloadFormat? PayloadFormat { get; set; }
    content.vb: Public Property PayloadFormat As TablePayloadFormat?
    parameters: []
    return:
      type: System.Nullable{Microsoft.WindowsAzure.Storage.Table.TablePayloadFormat}
      description: A <xref href="Microsoft.WindowsAzure.Storage.Table.TablePayloadFormat" data-throw-if-not-resolved="false"></xref> enumeration value.
  overload: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.PayloadFormat*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.PropertyResolver
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.PropertyResolver
  id: PropertyResolver
  parent: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  langs:
  - csharp
  - vb
  name: PropertyResolver
  nameWithType: TableRequestOptions.PropertyResolver
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.PropertyResolver
  type: Property
  source:
    remote:
      path: Lib/Common/Table/TableRequestOptions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: PropertyResolver
    path: Lib/Common/Table/TableRequestOptions.cs
    startLine: 312
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the delegate that is used to get the <xref href=\"Microsoft.WindowsAzure.Storage.Table.EdmType\" data-throw-if-not-resolved=\"false\"></xref> for an entity property given the partition key, row key, and the property name. \n"
  example: []
  syntax:
    content: public Func<string, string, string, string, EdmType> PropertyResolver { get; set; }
    content.vb: Public Property PropertyResolver As Func(Of String, String, String, String, EdmType)
    parameters: []
    return:
      type: System.Func{System.String,System.String,System.String,System.String,Microsoft.WindowsAzure.Storage.Table.EdmType}
  overload: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.PropertyResolver*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.EncryptionResolver
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.EncryptionResolver
  id: EncryptionResolver
  parent: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  langs:
  - csharp
  - vb
  name: EncryptionResolver
  nameWithType: TableRequestOptions.EncryptionResolver
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.EncryptionResolver
  type: Property
  source:
    remote:
      path: Lib/Common/Table/TableRequestOptions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net
    id: EncryptionResolver
    path: Lib/Common/Table/TableRequestOptions.cs
    startLine: 319
  assemblies:
  - Microsoft.WindowsAzure.Storage
  namespace: Microsoft.WindowsAzure.Storage.Table
  summary: "\nGets or sets the delegate to get the value indicating whether or not a property should be encrypted, given the partition key, row key, \nand property name. \n"
  example: []
  syntax:
    content: public Func<string, string, string, bool> EncryptionResolver { get; set; }
    content.vb: Public Property EncryptionResolver As Func(Of String, String, String, Boolean)
    parameters: []
    return:
      type: System.Func{System.String,System.String,System.String,System.Boolean}
  overload: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.EncryptionResolver*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage.Table
  commentId: N:Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Table
  nameWithType: Microsoft.WindowsAzure.Storage.Table
  fullName: Microsoft.WindowsAzure.Storage.Table
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.IRequestOptions
  commentId: T:Microsoft.WindowsAzure.Storage.IRequestOptions
  parent: Microsoft.WindowsAzure.Storage
  isExternal: false
  name: IRequestOptions
  nameWithType: IRequestOptions
  fullName: Microsoft.WindowsAzure.Storage.IRequestOptions
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage
  commentId: N:Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  nameWithType: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableRequestOptions
  nameWithType: TableRequestOptions
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.#ctor
  isExternal: false
  name: TableRequestOptions
  nameWithType: TableRequestOptions.TableRequestOptions
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.TableRequestOptions
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
  commentId: T:Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies
  isExternal: false
  name: IRetryPolicy
  nameWithType: IRetryPolicy
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.IRetryPolicy
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.RetryPolicy*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.RetryPolicy
  isExternal: false
  name: RetryPolicy
  nameWithType: TableRequestOptions.RetryPolicy
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.RetryPolicy
- uid: Microsoft.WindowsAzure.Storage.IRequestOptions.RetryPolicy
  commentId: P:Microsoft.WindowsAzure.Storage.IRequestOptions.RetryPolicy
  parent: Microsoft.WindowsAzure.Storage.IRequestOptions
  isExternal: false
  name: RetryPolicy
  nameWithType: IRequestOptions.RetryPolicy
  fullName: Microsoft.WindowsAzure.Storage.IRequestOptions.RetryPolicy
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies
  commentId: N:Microsoft.WindowsAzure.Storage.RetryPolicies
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.RetryPolicies
  nameWithType: Microsoft.WindowsAzure.Storage.RetryPolicies
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.ProjectSystemProperties*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.ProjectSystemProperties
  isExternal: false
  name: ProjectSystemProperties
  nameWithType: TableRequestOptions.ProjectSystemProperties
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.ProjectSystemProperties
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullname.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullname.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.EncryptionPolicy
  commentId: P:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.EncryptionPolicy
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.EncryptionPolicy*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.EncryptionPolicy
  isExternal: false
  name: EncryptionPolicy
  nameWithType: TableRequestOptions.EncryptionPolicy
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.EncryptionPolicy
- uid: Microsoft.WindowsAzure.Storage.Table.TableEncryptionPolicy
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TableEncryptionPolicy
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TableEncryptionPolicy
  nameWithType: TableEncryptionPolicy
  fullName: Microsoft.WindowsAzure.Storage.Table.TableEncryptionPolicy
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.RequireEncryption*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.RequireEncryption
  isExternal: false
  name: RequireEncryption
  nameWithType: TableRequestOptions.RequireEncryption
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.RequireEncryption
- uid: Microsoft.WindowsAzure.Storage.IRequestOptions.RequireEncryption
  commentId: P:Microsoft.WindowsAzure.Storage.IRequestOptions.RequireEncryption
  parent: Microsoft.WindowsAzure.Storage.IRequestOptions
  isExternal: false
  name: RequireEncryption
  nameWithType: IRequestOptions.RequireEncryption
  fullName: Microsoft.WindowsAzure.Storage.IRequestOptions.RequireEncryption
- uid: Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode
  commentId: T:Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode
  parent: Microsoft.WindowsAzure.Storage.RetryPolicies
  isExternal: false
  name: LocationMode
  nameWithType: LocationMode
  fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.LocationMode*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.LocationMode
  isExternal: false
  name: LocationMode
  nameWithType: TableRequestOptions.LocationMode
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.LocationMode
- uid: Microsoft.WindowsAzure.Storage.IRequestOptions.LocationMode
  commentId: P:Microsoft.WindowsAzure.Storage.IRequestOptions.LocationMode
  parent: Microsoft.WindowsAzure.Storage.IRequestOptions
  isExternal: false
  name: LocationMode
  nameWithType: IRequestOptions.LocationMode
  fullName: Microsoft.WindowsAzure.Storage.IRequestOptions.LocationMode
- uid: System.Nullable{Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode}
  commentId: T:System.Nullable{Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode}
  parent: System
  definition: System.Nullable`1
  name: Nullable<LocationMode>
  nameWithType: Nullable<LocationMode>
  fullName: System.Nullable<Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode>
  nameWithType.vb: Nullable(Of LocationMode)
  fullname.vb: System.Nullable(Of Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode)
  name.vb: Nullable(Of LocationMode)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode
    name: LocationMode
    nameWithType: LocationMode
    fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode
    name: LocationMode
    nameWithType: LocationMode
    fullName: Microsoft.WindowsAzure.Storage.RetryPolicies.LocationMode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.ServerTimeout*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.ServerTimeout
  isExternal: false
  name: ServerTimeout
  nameWithType: TableRequestOptions.ServerTimeout
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.ServerTimeout
- uid: Microsoft.WindowsAzure.Storage.IRequestOptions.ServerTimeout
  commentId: P:Microsoft.WindowsAzure.Storage.IRequestOptions.ServerTimeout
  parent: Microsoft.WindowsAzure.Storage.IRequestOptions
  isExternal: false
  name: ServerTimeout
  nameWithType: IRequestOptions.ServerTimeout
  fullName: Microsoft.WindowsAzure.Storage.IRequestOptions.ServerTimeout
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullname.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.MaximumExecutionTime*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.MaximumExecutionTime
  isExternal: false
  name: MaximumExecutionTime
  nameWithType: TableRequestOptions.MaximumExecutionTime
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.MaximumExecutionTime
- uid: Microsoft.WindowsAzure.Storage.IRequestOptions.MaximumExecutionTime
  commentId: P:Microsoft.WindowsAzure.Storage.IRequestOptions.MaximumExecutionTime
  parent: Microsoft.WindowsAzure.Storage.IRequestOptions
  isExternal: false
  name: MaximumExecutionTime
  nameWithType: IRequestOptions.MaximumExecutionTime
  fullName: Microsoft.WindowsAzure.Storage.IRequestOptions.MaximumExecutionTime
- uid: Microsoft.WindowsAzure.Storage.Table.TablePayloadFormat
  commentId: T:Microsoft.WindowsAzure.Storage.Table.TablePayloadFormat
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: TablePayloadFormat
  nameWithType: TablePayloadFormat
  fullName: Microsoft.WindowsAzure.Storage.Table.TablePayloadFormat
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.PayloadFormat*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.PayloadFormat
  isExternal: false
  name: PayloadFormat
  nameWithType: TableRequestOptions.PayloadFormat
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.PayloadFormat
- uid: System.Nullable{Microsoft.WindowsAzure.Storage.Table.TablePayloadFormat}
  commentId: T:System.Nullable{Microsoft.WindowsAzure.Storage.Table.TablePayloadFormat}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TablePayloadFormat>
  nameWithType: Nullable<TablePayloadFormat>
  fullName: System.Nullable<Microsoft.WindowsAzure.Storage.Table.TablePayloadFormat>
  nameWithType.vb: Nullable(Of TablePayloadFormat)
  fullname.vb: System.Nullable(Of Microsoft.WindowsAzure.Storage.Table.TablePayloadFormat)
  name.vb: Nullable(Of TablePayloadFormat)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.WindowsAzure.Storage.Table.TablePayloadFormat
    name: TablePayloadFormat
    nameWithType: TablePayloadFormat
    fullName: Microsoft.WindowsAzure.Storage.Table.TablePayloadFormat
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.WindowsAzure.Storage.Table.TablePayloadFormat
    name: TablePayloadFormat
    nameWithType: TablePayloadFormat
    fullName: Microsoft.WindowsAzure.Storage.Table.TablePayloadFormat
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.EdmType
  commentId: T:Microsoft.WindowsAzure.Storage.Table.EdmType
  parent: Microsoft.WindowsAzure.Storage.Table
  isExternal: false
  name: EdmType
  nameWithType: EdmType
  fullName: Microsoft.WindowsAzure.Storage.Table.EdmType
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.PropertyResolver*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.PropertyResolver
  isExternal: false
  name: PropertyResolver
  nameWithType: TableRequestOptions.PropertyResolver
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.PropertyResolver
- uid: System.Func{System.String,System.String,System.String,System.String,Microsoft.WindowsAzure.Storage.Table.EdmType}
  commentId: T:System.Func{System.String,System.String,System.String,System.String,Microsoft.WindowsAzure.Storage.Table.EdmType}
  parent: System
  definition: System.Func`5
  name: Func<String, String, String, String, EdmType>
  nameWithType: Func<String, String, String, String, EdmType>
  fullName: System.Func<System.String, System.String, System.String, System.String, Microsoft.WindowsAzure.Storage.Table.EdmType>
  nameWithType.vb: Func(Of String, String, String, String, EdmType)
  fullname.vb: System.Func(Of System.String, System.String, System.String, System.String, Microsoft.WindowsAzure.Storage.Table.EdmType)
  name.vb: Func(Of String, String, String, String, EdmType)
  spec.csharp:
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.EdmType
    name: EdmType
    nameWithType: EdmType
    fullName: Microsoft.WindowsAzure.Storage.Table.EdmType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.WindowsAzure.Storage.Table.EdmType
    name: EdmType
    nameWithType: EdmType
    fullName: Microsoft.WindowsAzure.Storage.Table.EdmType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`5
  commentId: T:System.Func`5
  isExternal: true
  name: Func<T1, T2, T3, T4, TResult>
  nameWithType: Func<T1, T2, T3, T4, TResult>
  fullName: System.Func<T1, T2, T3, T4, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, T4, TResult)
  fullname.vb: System.Func(Of T1, T2, T3, T4, TResult)
  name.vb: Func(Of T1, T2, T3, T4, TResult)
  spec.csharp:
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.EncryptionResolver*
  commentId: Overload:Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.EncryptionResolver
  isExternal: false
  name: EncryptionResolver
  nameWithType: TableRequestOptions.EncryptionResolver
  fullName: Microsoft.WindowsAzure.Storage.Table.TableRequestOptions.EncryptionResolver
- uid: System.Func{System.String,System.String,System.String,System.Boolean}
  commentId: T:System.Func{System.String,System.String,System.String,System.Boolean}
  parent: System
  definition: System.Func`4
  name: Func<String, String, String, Boolean>
  nameWithType: Func<String, String, String, Boolean>
  fullName: System.Func<System.String, System.String, System.String, System.Boolean>
  nameWithType.vb: Func(Of String, String, String, Boolean)
  fullname.vb: System.Func(Of System.String, System.String, System.String, System.Boolean)
  name.vb: Func(Of String, String, String, Boolean)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`4
  commentId: T:System.Func`4
  isExternal: true
  name: Func<T1, T2, T3, TResult>
  nameWithType: Func<T1, T2, T3, TResult>
  fullName: System.Func<T1, T2, T3, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, TResult)
  fullname.vb: System.Func(Of T1, T2, T3, TResult)
  name.vb: Func(Of T1, T2, T3, TResult)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
