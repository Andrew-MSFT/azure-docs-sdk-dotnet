### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.DataMovement.CopyDirectoryOptions
  commentId: T:Microsoft.WindowsAzure.Storage.DataMovement.CopyDirectoryOptions
  id: CopyDirectoryOptions
  parent: Microsoft.WindowsAzure.Storage.DataMovement
  children:
  - Microsoft.WindowsAzure.Storage.DataMovement.CopyDirectoryOptions.BlobType
  - Microsoft.WindowsAzure.Storage.DataMovement.CopyDirectoryOptions.IncludeSnapshots
  langs:
  - csharp
  - vb
  name: CopyDirectoryOptions
  nameWithType: CopyDirectoryOptions
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.CopyDirectoryOptions
  type: Class
  source:
    remote:
      path: lib/TransferOptions/CopyDirectoryOptions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CopyDirectoryOptions
    path: lib/TransferOptions/CopyDirectoryOptions.cs
    startLine: 12
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nRepresents a set of options that may be specified for copy directory operation\n"
  example: []
  syntax:
    content: 'public sealed class CopyDirectoryOptions : DirectoryOptions'
    content.vb: >-
      Public NotInheritable Class CopyDirectoryOptions
          Inherits DirectoryOptions
  inheritance:
  - System.Object
  - Microsoft.WindowsAzure.Storage.DataMovement.DirectoryOptions
  inheritedMembers:
  - Microsoft.WindowsAzure.Storage.DataMovement.DirectoryOptions.SearchPattern
  - Microsoft.WindowsAzure.Storage.DataMovement.DirectoryOptions.Recursive
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.DataMovement.CopyDirectoryOptions.BlobType
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.CopyDirectoryOptions.BlobType
  id: BlobType
  parent: Microsoft.WindowsAzure.Storage.DataMovement.CopyDirectoryOptions
  langs:
  - csharp
  - vb
  name: BlobType
  nameWithType: CopyDirectoryOptions.BlobType
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.CopyDirectoryOptions.BlobType
  type: Property
  source:
    remote:
      path: lib/TransferOptions/CopyDirectoryOptions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: BlobType
    path: lib/TransferOptions/CopyDirectoryOptions.cs
    startLine: 18
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nGets or sets type of destination blob. This option takes effect only when copying from non Azure\nblob storage to Azure blob storage. If blob type is not specified, BlockBlob is used.\n"
  example: []
  syntax:
    content: public BlobType BlobType { get; set; }
    content.vb: Public Property BlobType As BlobType
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.Blob.BlobType
  overload: Microsoft.WindowsAzure.Storage.DataMovement.CopyDirectoryOptions.BlobType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.DataMovement.CopyDirectoryOptions.IncludeSnapshots
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.CopyDirectoryOptions.IncludeSnapshots
  id: IncludeSnapshots
  parent: Microsoft.WindowsAzure.Storage.DataMovement.CopyDirectoryOptions
  langs:
  - csharp
  - vb
  name: IncludeSnapshots
  nameWithType: CopyDirectoryOptions.IncludeSnapshots
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.CopyDirectoryOptions.IncludeSnapshots
  type: Property
  source:
    remote:
      path: lib/TransferOptions/CopyDirectoryOptions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: IncludeSnapshots
    path: lib/TransferOptions/CopyDirectoryOptions.cs
    startLine: 29
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nGets or sets a flag indicating whether to include snapshots when copying from Azure blob storage.\n"
  remarks: "\nIf this flag is set to true, snapshots of the source blob will be copied to destination as\nseparate files. Given a source blob name in the form of \"x.y\", where 'x' is the file\nname without extension and 'y' is the file name extension, the destination file name of blob\nsnapshot is formatted as \"x (%snapshot_time_stamp%).y\".\n"
  example: []
  syntax:
    content: public bool IncludeSnapshots { get; set; }
    content.vb: Public Property IncludeSnapshots As Boolean
    parameters: []
    return:
      type: System.Boolean
  overload: Microsoft.WindowsAzure.Storage.DataMovement.CopyDirectoryOptions.IncludeSnapshots*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage.DataMovement
  commentId: N:Microsoft.WindowsAzure.Storage.DataMovement
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.DataMovement
  nameWithType: Microsoft.WindowsAzure.Storage.DataMovement
  fullName: Microsoft.WindowsAzure.Storage.DataMovement
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryOptions
  commentId: T:Microsoft.WindowsAzure.Storage.DataMovement.DirectoryOptions
  parent: Microsoft.WindowsAzure.Storage.DataMovement
  isExternal: false
  name: DirectoryOptions
  nameWithType: DirectoryOptions
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryOptions
- uid: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryOptions.SearchPattern
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.DirectoryOptions.SearchPattern
  parent: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryOptions
  isExternal: false
  name: SearchPattern
  nameWithType: DirectoryOptions.SearchPattern
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryOptions.SearchPattern
- uid: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryOptions.Recursive
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.DirectoryOptions.Recursive
  parent: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryOptions
  isExternal: false
  name: Recursive
  nameWithType: DirectoryOptions.Recursive
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.DirectoryOptions.Recursive
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.DataMovement.CopyDirectoryOptions.BlobType*
  commentId: Overload:Microsoft.WindowsAzure.Storage.DataMovement.CopyDirectoryOptions.BlobType
  isExternal: false
  name: BlobType
  nameWithType: CopyDirectoryOptions.BlobType
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.CopyDirectoryOptions.BlobType
- uid: Microsoft.WindowsAzure.Storage.Blob.BlobType
  commentId: T:Microsoft.WindowsAzure.Storage.Blob.BlobType
  parent: Microsoft.WindowsAzure.Storage.Blob
  isExternal: true
  name: BlobType
  nameWithType: BlobType
  fullName: Microsoft.WindowsAzure.Storage.Blob.BlobType
- uid: Microsoft.WindowsAzure.Storage.Blob
  commentId: N:Microsoft.WindowsAzure.Storage.Blob
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.Blob
  nameWithType: Microsoft.WindowsAzure.Storage.Blob
  fullName: Microsoft.WindowsAzure.Storage.Blob
- uid: Microsoft.WindowsAzure.Storage.DataMovement.CopyDirectoryOptions.IncludeSnapshots*
  commentId: Overload:Microsoft.WindowsAzure.Storage.DataMovement.CopyDirectoryOptions.IncludeSnapshots
  isExternal: false
  name: IncludeSnapshots
  nameWithType: CopyDirectoryOptions.IncludeSnapshots
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.CopyDirectoryOptions.IncludeSnapshots
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
