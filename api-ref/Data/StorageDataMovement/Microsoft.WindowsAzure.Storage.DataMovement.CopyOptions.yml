### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.DataMovement.CopyOptions
  commentId: T:Microsoft.WindowsAzure.Storage.DataMovement.CopyOptions
  id: CopyOptions
  parent: Microsoft.WindowsAzure.Storage.DataMovement
  children:
  - Microsoft.WindowsAzure.Storage.DataMovement.CopyOptions.DestinationAccessCondition
  - Microsoft.WindowsAzure.Storage.DataMovement.CopyOptions.SourceAccessCondition
  langs:
  - csharp
  - vb
  name: CopyOptions
  nameWithType: CopyOptions
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.CopyOptions
  type: Class
  source:
    remote:
      path: lib/TransferOptions/CopyOptions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: CopyOptions
    path: lib/TransferOptions/CopyOptions.cs
    startLine: 10
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nRepresents a set of options that may be specified for copy operation\n"
  example: []
  syntax:
    content: public sealed class CopyOptions
    content.vb: Public NotInheritable Class CopyOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.DataMovement.CopyOptions.SourceAccessCondition
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.CopyOptions.SourceAccessCondition
  id: SourceAccessCondition
  parent: Microsoft.WindowsAzure.Storage.DataMovement.CopyOptions
  langs:
  - csharp
  - vb
  name: SourceAccessCondition
  nameWithType: CopyOptions.SourceAccessCondition
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.CopyOptions.SourceAccessCondition
  type: Property
  source:
    remote:
      path: lib/TransferOptions/CopyOptions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: SourceAccessCondition
    path: lib/TransferOptions/CopyOptions.cs
    startLine: 15
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nGets or sets an <xref href=\"Microsoft.WindowsAzure.Storage.AccessCondition\" data-throw-if-not-resolved=\"false\"></xref> object that represents the access conditions for the source object. If <code>null</code>, no condition is used.\n"
  example: []
  syntax:
    content: public AccessCondition SourceAccessCondition { get; set; }
    content.vb: Public Property SourceAccessCondition As AccessCondition
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.AccessCondition
  overload: Microsoft.WindowsAzure.Storage.DataMovement.CopyOptions.SourceAccessCondition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.DataMovement.CopyOptions.DestinationAccessCondition
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.CopyOptions.DestinationAccessCondition
  id: DestinationAccessCondition
  parent: Microsoft.WindowsAzure.Storage.DataMovement.CopyOptions
  langs:
  - csharp
  - vb
  name: DestinationAccessCondition
  nameWithType: CopyOptions.DestinationAccessCondition
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.CopyOptions.DestinationAccessCondition
  type: Property
  source:
    remote:
      path: lib/TransferOptions/CopyOptions.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: DestinationAccessCondition
    path: lib/TransferOptions/CopyOptions.cs
    startLine: 20
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nGets or sets an <xref href=\"Microsoft.WindowsAzure.Storage.AccessCondition\" data-throw-if-not-resolved=\"false\"></xref> object that represents the access conditions for the destination object. If <code>null</code>, no condition is used.\n"
  example: []
  syntax:
    content: public AccessCondition DestinationAccessCondition { get; set; }
    content.vb: Public Property DestinationAccessCondition As AccessCondition
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.AccessCondition
  overload: Microsoft.WindowsAzure.Storage.DataMovement.CopyOptions.DestinationAccessCondition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.WindowsAzure.Storage.DataMovement
  commentId: N:Microsoft.WindowsAzure.Storage.DataMovement
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.DataMovement
  nameWithType: Microsoft.WindowsAzure.Storage.DataMovement
  fullName: Microsoft.WindowsAzure.Storage.DataMovement
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.AccessCondition
  commentId: T:Microsoft.WindowsAzure.Storage.AccessCondition
  parent: Microsoft.WindowsAzure.Storage
  isExternal: true
  name: AccessCondition
  nameWithType: AccessCondition
  fullName: Microsoft.WindowsAzure.Storage.AccessCondition
- uid: Microsoft.WindowsAzure.Storage.DataMovement.CopyOptions.SourceAccessCondition*
  commentId: Overload:Microsoft.WindowsAzure.Storage.DataMovement.CopyOptions.SourceAccessCondition
  isExternal: false
  name: SourceAccessCondition
  nameWithType: CopyOptions.SourceAccessCondition
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.CopyOptions.SourceAccessCondition
- uid: Microsoft.WindowsAzure.Storage
  commentId: N:Microsoft.WindowsAzure.Storage
  isExternal: false
  name: Microsoft.WindowsAzure.Storage
  nameWithType: Microsoft.WindowsAzure.Storage
  fullName: Microsoft.WindowsAzure.Storage
- uid: Microsoft.WindowsAzure.Storage.DataMovement.CopyOptions.DestinationAccessCondition*
  commentId: Overload:Microsoft.WindowsAzure.Storage.DataMovement.CopyOptions.DestinationAccessCondition
  isExternal: false
  name: DestinationAccessCondition
  nameWithType: CopyOptions.DestinationAccessCondition
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.CopyOptions.DestinationAccessCondition
