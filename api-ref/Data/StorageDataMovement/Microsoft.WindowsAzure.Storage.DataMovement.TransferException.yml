### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferException
  commentId: T:Microsoft.WindowsAzure.Storage.DataMovement.TransferException
  id: TransferException
  parent: Microsoft.WindowsAzure.Storage.DataMovement
  children:
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor(Microsoft.WindowsAzure.Storage.DataMovement.TransferErrorCode)
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor(Microsoft.WindowsAzure.Storage.DataMovement.TransferErrorCode,System.String)
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor(Microsoft.WindowsAzure.Storage.DataMovement.TransferErrorCode,System.String,System.Exception)
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor(System.String)
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor(System.String,System.Exception)
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferException.ErrorCode
  langs:
  - csharp
  - vb
  name: TransferException
  nameWithType: TransferException
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferException
  type: Class
  source:
    remote:
      path: lib/Exceptions/TransferException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: TransferException
    path: lib/Exceptions/TransferException.cs
    startLine: 17
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nBase exception class for exceptions thrown by Blob/FileTransferJobs.\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public class TransferException : Exception
    content.vb: >-
      <DataContract>

      Public Class TransferException
          Inherits Exception
  inheritance:
  - System.Object
  - System.Exception
  inheritedMembers:
  - System.Exception.GetBaseException
  - System.Exception.ToString
  - System.Exception.Data
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor
  commentId: M:Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor
  id: '#ctor'
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferException
  langs:
  - csharp
  - vb
  name: TransferException()
  nameWithType: TransferException.TransferException()
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.TransferException()
  type: Constructor
  source:
    remote:
      path: lib/Exceptions/TransferException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: .ctor
    path: lib/Exceptions/TransferException.cs
    startLine: 47
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.DataMovement.TransferException\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TransferException()
    content.vb: Public Sub New
  overload: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor(System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferException
  langs:
  - csharp
  - vb
  name: TransferException(String)
  nameWithType: TransferException.TransferException(String)
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.TransferException(System.String)
  type: Constructor
  source:
    remote:
      path: lib/Exceptions/TransferException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: .ctor
    path: lib/Exceptions/TransferException.cs
    startLine: 55
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.DataMovement.TransferException\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TransferException(string message)
    content.vb: Public Sub New(message As String)
    parameters:
    - id: message
      type: System.String
      description: The message that describes the error.
  overload: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor(System.String,System.Exception)
  commentId: M:Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferException
  langs:
  - csharp
  - vb
  name: TransferException(String, Exception)
  nameWithType: TransferException.TransferException(String, Exception)
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.TransferException(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: lib/Exceptions/TransferException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: .ctor
    path: lib/Exceptions/TransferException.cs
    startLine: 66
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.DataMovement.TransferException\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TransferException(string message, Exception ex)
    content.vb: Public Sub New(message As String, ex As Exception)
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: ex
      type: System.Exception
      description: >-
        The exception that is the cause of the current exception, or a null reference

        if no inner exception is specified.
  overload: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor(Microsoft.WindowsAzure.Storage.DataMovement.TransferErrorCode)
  commentId: M:Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor(Microsoft.WindowsAzure.Storage.DataMovement.TransferErrorCode)
  id: '#ctor(Microsoft.WindowsAzure.Storage.DataMovement.TransferErrorCode)'
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferException
  langs:
  - csharp
  - vb
  name: TransferException(TransferErrorCode)
  nameWithType: TransferException.TransferException(TransferErrorCode)
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.TransferException(Microsoft.WindowsAzure.Storage.DataMovement.TransferErrorCode)
  type: Constructor
  source:
    remote:
      path: lib/Exceptions/TransferException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: .ctor
    path: lib/Exceptions/TransferException.cs
    startLine: 75
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.DataMovement.TransferException\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TransferException(TransferErrorCode errorCode)
    content.vb: Public Sub New(errorCode As TransferErrorCode)
    parameters:
    - id: errorCode
      type: Microsoft.WindowsAzure.Storage.DataMovement.TransferErrorCode
      description: Transfer error code.
  overload: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor(Microsoft.WindowsAzure.Storage.DataMovement.TransferErrorCode,System.String)
  commentId: M:Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor(Microsoft.WindowsAzure.Storage.DataMovement.TransferErrorCode,System.String)
  id: '#ctor(Microsoft.WindowsAzure.Storage.DataMovement.TransferErrorCode,System.String)'
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferException
  langs:
  - csharp
  - vb
  name: TransferException(TransferErrorCode, String)
  nameWithType: TransferException.TransferException(TransferErrorCode, String)
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.TransferException(Microsoft.WindowsAzure.Storage.DataMovement.TransferErrorCode, System.String)
  type: Constructor
  source:
    remote:
      path: lib/Exceptions/TransferException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: .ctor
    path: lib/Exceptions/TransferException.cs
    startLine: 85
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.DataMovement.TransferException\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TransferException(TransferErrorCode errorCode, string message)
    content.vb: Public Sub New(errorCode As TransferErrorCode, message As String)
    parameters:
    - id: errorCode
      type: Microsoft.WindowsAzure.Storage.DataMovement.TransferErrorCode
      description: Transfer error code.
    - id: message
      type: System.String
      description: Exception message.
  overload: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor(Microsoft.WindowsAzure.Storage.DataMovement.TransferErrorCode,System.String,System.Exception)
  commentId: M:Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor(Microsoft.WindowsAzure.Storage.DataMovement.TransferErrorCode,System.String,System.Exception)
  id: '#ctor(Microsoft.WindowsAzure.Storage.DataMovement.TransferErrorCode,System.String,System.Exception)'
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferException
  langs:
  - csharp
  - vb
  name: TransferException(TransferErrorCode, String, Exception)
  nameWithType: TransferException.TransferException(TransferErrorCode, String, Exception)
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.TransferException(Microsoft.WindowsAzure.Storage.DataMovement.TransferErrorCode, System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: lib/Exceptions/TransferException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: .ctor
    path: lib/Exceptions/TransferException.cs
    startLine: 99
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nInitializes a new instance of the <xref href=\"Microsoft.WindowsAzure.Storage.DataMovement.TransferException\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TransferException(TransferErrorCode errorCode, string message, Exception innerException)
    content.vb: Public Sub New(errorCode As TransferErrorCode, message As String, innerException As Exception)
    parameters:
    - id: errorCode
      type: Microsoft.WindowsAzure.Storage.DataMovement.TransferErrorCode
      description: Transfer error code.
    - id: message
      type: System.String
      description: Exception message.
    - id: innerException
      type: System.Exception
      description: Inner exception.
  overload: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.ErrorCode
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.TransferException.ErrorCode
  id: ErrorCode
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferException
  langs:
  - csharp
  - vb
  name: ErrorCode
  nameWithType: TransferException.ErrorCode
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.ErrorCode
  type: Property
  source:
    remote:
      path: lib/Exceptions/TransferException.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: ErrorCode
    path: lib/Exceptions/TransferException.cs
    startLine: 132
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nGets the detailed error code.\n"
  example: []
  syntax:
    content: public TransferErrorCode ErrorCode { get; }
    content.vb: Public ReadOnly Property ErrorCode As TransferErrorCode
    parameters: []
    return:
      type: Microsoft.WindowsAzure.Storage.DataMovement.TransferErrorCode
      description: The error code of the exception.
  overload: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.ErrorCode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.WindowsAzure.Storage.DataMovement
  commentId: N:Microsoft.WindowsAzure.Storage.DataMovement
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.DataMovement
  nameWithType: Microsoft.WindowsAzure.Storage.DataMovement
  fullName: Microsoft.WindowsAzure.Storage.DataMovement
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  parent: System.Exception
  isExternal: true
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.ToString
  commentId: M:System.Exception.ToString
  parent: System.Exception
  isExternal: true
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  parent: System.Exception
  isExternal: true
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  parent: System.Exception
  isExternal: true
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  parent: System.Exception
  isExternal: true
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  parent: System.Exception
  isExternal: true
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.Message
  commentId: P:System.Exception.Message
  parent: System.Exception
  isExternal: true
  name: Message
  nameWithType: Exception.Message
  fullName: System.Exception.Message
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  parent: System.Exception
  isExternal: true
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  parent: System.Exception
  isExternal: true
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferException
  commentId: T:Microsoft.WindowsAzure.Storage.DataMovement.TransferException
  parent: Microsoft.WindowsAzure.Storage.DataMovement
  isExternal: false
  name: TransferException
  nameWithType: TransferException
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferException
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor*
  commentId: Overload:Microsoft.WindowsAzure.Storage.DataMovement.TransferException.#ctor
  isExternal: false
  name: TransferException
  nameWithType: TransferException.TransferException
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.TransferException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferErrorCode
  commentId: T:Microsoft.WindowsAzure.Storage.DataMovement.TransferErrorCode
  parent: Microsoft.WindowsAzure.Storage.DataMovement
  isExternal: false
  name: TransferErrorCode
  nameWithType: TransferErrorCode
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferErrorCode
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.ErrorCode*
  commentId: Overload:Microsoft.WindowsAzure.Storage.DataMovement.TransferException.ErrorCode
  isExternal: false
  name: ErrorCode
  nameWithType: TransferException.ErrorCode
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferException.ErrorCode
