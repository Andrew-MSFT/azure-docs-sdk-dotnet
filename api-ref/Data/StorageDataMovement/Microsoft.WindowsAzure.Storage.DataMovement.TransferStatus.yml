### YamlMime:ManagedReference
items:
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus
  commentId: T:Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus
  id: TransferStatus
  parent: Microsoft.WindowsAzure.Storage.DataMovement
  children:
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.BytesTransferred
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.NumberOfFilesFailed
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.NumberOfFilesSkipped
  - Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.NumberOfFilesTransferred
  langs:
  - csharp
  - vb
  name: TransferStatus
  nameWithType: TransferStatus
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus
  type: Class
  source:
    remote:
      path: lib/TransferStatus.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: TransferStatus
    path: lib/TransferStatus.cs
    startLine: 10
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nTransfer status\n"
  example: []
  syntax:
    content: public sealed class TransferStatus
    content.vb: Public NotInheritable Class TransferStatus
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.BytesTransferred
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.BytesTransferred
  id: BytesTransferred
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus
  langs:
  - csharp
  - vb
  name: BytesTransferred
  nameWithType: TransferStatus.BytesTransferred
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.BytesTransferred
  type: Property
  source:
    remote:
      path: lib/TransferStatus.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: BytesTransferred
    path: lib/TransferStatus.cs
    startLine: 15
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nGets the number of bytes that have been transferred.\n"
  example: []
  syntax:
    content: public long BytesTransferred { get; }
    content.vb: Public ReadOnly Property BytesTransferred As Long
    parameters: []
    return:
      type: System.Int64
  overload: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.BytesTransferred*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.NumberOfFilesTransferred
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.NumberOfFilesTransferred
  id: NumberOfFilesTransferred
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus
  langs:
  - csharp
  - vb
  name: NumberOfFilesTransferred
  nameWithType: TransferStatus.NumberOfFilesTransferred
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.NumberOfFilesTransferred
  type: Property
  source:
    remote:
      path: lib/TransferStatus.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: NumberOfFilesTransferred
    path: lib/TransferStatus.cs
    startLine: 24
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nGets the number of files that have been transferred.\n"
  example: []
  syntax:
    content: public long NumberOfFilesTransferred { get; }
    content.vb: Public ReadOnly Property NumberOfFilesTransferred As Long
    parameters: []
    return:
      type: System.Int64
  overload: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.NumberOfFilesTransferred*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.NumberOfFilesSkipped
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.NumberOfFilesSkipped
  id: NumberOfFilesSkipped
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus
  langs:
  - csharp
  - vb
  name: NumberOfFilesSkipped
  nameWithType: TransferStatus.NumberOfFilesSkipped
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.NumberOfFilesSkipped
  type: Property
  source:
    remote:
      path: lib/TransferStatus.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: NumberOfFilesSkipped
    path: lib/TransferStatus.cs
    startLine: 33
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nGets the number of files that are skipped to be transferred.\n"
  example: []
  syntax:
    content: public long NumberOfFilesSkipped { get; }
    content.vb: Public ReadOnly Property NumberOfFilesSkipped As Long
    parameters: []
    return:
      type: System.Int64
  overload: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.NumberOfFilesSkipped*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.NumberOfFilesFailed
  commentId: P:Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.NumberOfFilesFailed
  id: NumberOfFilesFailed
  parent: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus
  langs:
  - csharp
  - vb
  name: NumberOfFilesFailed
  nameWithType: TransferStatus.NumberOfFilesFailed
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.NumberOfFilesFailed
  type: Property
  source:
    remote:
      path: lib/TransferStatus.cs
      branch: master
      repo: https://github.com/Azure/azure-storage-net-data-movement
    id: NumberOfFilesFailed
    path: lib/TransferStatus.cs
    startLine: 42
  assemblies:
  - Microsoft.WindowsAzure.Storage.DataMovement
  namespace: Microsoft.WindowsAzure.Storage.DataMovement
  summary: "\nGets the number of files that are failed to be transferred.\n"
  example: []
  syntax:
    content: public long NumberOfFilesFailed { get; }
    content.vb: Public ReadOnly Property NumberOfFilesFailed As Long
    parameters: []
    return:
      type: System.Int64
  overload: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.NumberOfFilesFailed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Microsoft.WindowsAzure.Storage.DataMovement
  commentId: N:Microsoft.WindowsAzure.Storage.DataMovement
  isExternal: false
  name: Microsoft.WindowsAzure.Storage.DataMovement
  nameWithType: Microsoft.WindowsAzure.Storage.DataMovement
  fullName: Microsoft.WindowsAzure.Storage.DataMovement
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.BytesTransferred*
  commentId: Overload:Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.BytesTransferred
  isExternal: false
  name: BytesTransferred
  nameWithType: TransferStatus.BytesTransferred
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.BytesTransferred
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.NumberOfFilesTransferred*
  commentId: Overload:Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.NumberOfFilesTransferred
  isExternal: false
  name: NumberOfFilesTransferred
  nameWithType: TransferStatus.NumberOfFilesTransferred
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.NumberOfFilesTransferred
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.NumberOfFilesSkipped*
  commentId: Overload:Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.NumberOfFilesSkipped
  isExternal: false
  name: NumberOfFilesSkipped
  nameWithType: TransferStatus.NumberOfFilesSkipped
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.NumberOfFilesSkipped
- uid: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.NumberOfFilesFailed*
  commentId: Overload:Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.NumberOfFilesFailed
  isExternal: false
  name: NumberOfFilesFailed
  nameWithType: TransferStatus.NumberOfFilesFailed
  fullName: Microsoft.WindowsAzure.Storage.DataMovement.TransferStatus.NumberOfFilesFailed
